diff --git a/.credo.exs b/.credo.exs
new file mode 100644
index 0000000..ab9a7cd
--- /dev/null
+++ b/.credo.exs
@@ -0,0 +1,198 @@
+# This file contains the configuration for Credo and you are probably reading
+# this after creating it with `mix credo.gen.config`.
+#
+# If you find anything wrong or unclear in this file, please report an
+# issue on GitHub: https://github.com/rrrene/credo/issues
+#
+%{
+  #
+  # You can have as many configs as you like in the `configs:` field.
+  configs: [
+    %{
+      #
+      # Run any config using `mix credo -C <name>`. If no config name is given
+      # "default" is used.
+      #
+      name: "default",
+      #
+      # These are the files included in the analysis:
+      files: %{
+        #
+        # You can give explicit globs or simply directories.
+        # In the latter case `**/*.{ex,exs}` will be used.
+        #
+        included: [
+          "lib/",
+          "src/",
+          "test/",
+          "web/",
+          "apps/*/lib/",
+          "apps/*/src/",
+          "apps/*/test/",
+          "apps/*/web/"
+        ],
+        excluded: [~r"/_build/", ~r"/deps/", ~r"/node_modules/"]
+      },
+      #
+      # Load and configure plugins here:
+      #
+      plugins: [],
+      #
+      # If you create your own checks, you must specify the source files for
+      # them here, so they can be loaded by Credo before running the analysis.
+      #
+      requires: [],
+      #
+      # If you want to enforce a style guide and need a more traditional linting
+      # experience, you can change `strict` to `true` below:
+      #
+      strict: false,
+      #
+      # To modify the timeout for parsing files, change this value:
+      #
+      parse_timeout: 5000,
+      #
+      # If you want to use uncolored output by default, you can change `color`
+      # to `false` below:
+      #
+      color: true,
+      #
+      # You can customize the parameters of any check by adding a second element
+      # to the tuple.
+      #
+      # To disable a check put `false` as second element:
+      #
+      #     {Credo.Check.Design.DuplicatedCode, false}
+      #
+      checks: [
+        #
+        ## Consistency Checks
+        #
+        {Credo.Check.Consistency.ExceptionNames, []},
+        {Credo.Check.Consistency.LineEndings, []},
+        {Credo.Check.Consistency.ParameterPatternMatching, []},
+        {Credo.Check.Consistency.SpaceAroundOperators, []},
+        {Credo.Check.Consistency.SpaceInParentheses, []},
+        {Credo.Check.Consistency.TabsOrSpaces, []},
+
+        #
+        ## Design Checks
+        #
+        # You can customize the priority of any check
+        # Priority values are: `low, normal, high, higher`
+        #
+        {Credo.Check.Design.AliasUsage,
+         [priority: :low, if_nested_deeper_than: 2, if_called_more_often_than: 0]},
+        # You can also customize the exit_status of each check.
+        # If you don't want TODO comments to cause `mix credo` to fail, just
+        # set this value to 0 (zero).
+        #
+        {Credo.Check.Design.TagTODO, [exit_status: 2]},
+        {Credo.Check.Design.TagFIXME, []},
+
+        #
+        ## Readability Checks
+        #
+        {Credo.Check.Readability.AliasOrder, []},
+        {Credo.Check.Readability.FunctionNames, []},
+        {Credo.Check.Readability.LargeNumbers, []},
+        {Credo.Check.Readability.MaxLineLength, [priority: :low, max_length: 120]},
+        {Credo.Check.Readability.ModuleAttributeNames, []},
+        {Credo.Check.Readability.ModuleDoc, []},
+        {Credo.Check.Readability.ModuleNames, []},
+        {Credo.Check.Readability.ParenthesesInCondition, []},
+        {Credo.Check.Readability.ParenthesesOnZeroArityDefs, []},
+        {Credo.Check.Readability.PipeIntoAnonymousFunctions, []},
+        {Credo.Check.Readability.PredicateFunctionNames, []},
+        {Credo.Check.Readability.PreferImplicitTry, []},
+        {Credo.Check.Readability.RedundantBlankLines, []},
+        {Credo.Check.Readability.Semicolons, []},
+        {Credo.Check.Readability.SpaceAfterCommas, []},
+        {Credo.Check.Readability.StringSigils, []},
+        {Credo.Check.Readability.TrailingBlankLine, []},
+        {Credo.Check.Readability.TrailingWhiteSpace, []},
+        {Credo.Check.Readability.UnnecessaryAliasExpansion, []},
+        {Credo.Check.Readability.VariableNames, []},
+        {Credo.Check.Readability.WithSingleClause, []},
+
+        #
+        ## Refactoring Opportunities
+        #
+        {Credo.Check.Refactor.Apply, []},
+        {Credo.Check.Refactor.CondStatements, []},
+        {Credo.Check.Refactor.CyclomaticComplexity, []},
+        {Credo.Check.Refactor.FunctionArity, []},
+        {Credo.Check.Refactor.LongQuoteBlocks, []},
+        {Credo.Check.Refactor.MatchInCondition, []},
+        {Credo.Check.Refactor.MapJoin, []},
+        {Credo.Check.Refactor.NegatedConditionsInUnless, []},
+        {Credo.Check.Refactor.NegatedConditionsWithElse, []},
+        {Credo.Check.Refactor.Nesting, []},
+        {Credo.Check.Refactor.UnlessWithElse, []},
+        {Credo.Check.Refactor.WithClauses, []},
+        {Credo.Check.Refactor.FilterFilter, []},
+        {Credo.Check.Refactor.RejectReject, []},
+        {Credo.Check.Refactor.RedundantWithClauseResult, []},
+
+        #
+        ## Warnings
+        #
+        {Credo.Check.Warning.ApplicationConfigInModuleAttribute, []},
+        {Credo.Check.Warning.BoolOperationOnSameValues, []},
+        {Credo.Check.Warning.ExpensiveEmptyEnumCheck, []},
+        {Credo.Check.Warning.IExPry, []},
+        {Credo.Check.Warning.IoInspect, []},
+        {Credo.Check.Warning.OperationOnSameValues, []},
+        {Credo.Check.Warning.OperationWithConstantResult, []},
+        {Credo.Check.Warning.RaiseInsideRescue, []},
+        {Credo.Check.Warning.SpecWithStruct, []},
+        {Credo.Check.Warning.WrongTestFileExtension, []},
+        {Credo.Check.Warning.UnusedEnumOperation, []},
+        {Credo.Check.Warning.UnusedFileOperation, []},
+        {Credo.Check.Warning.UnusedKeywordOperation, []},
+        {Credo.Check.Warning.UnusedListOperation, []},
+        {Credo.Check.Warning.UnusedPathOperation, []},
+        {Credo.Check.Warning.UnusedRegexOperation, []},
+        {Credo.Check.Warning.UnusedStringOperation, []},
+        {Credo.Check.Warning.UnusedTupleOperation, []},
+        {Credo.Check.Warning.UnsafeExec, []},
+
+        #
+        # Controversial and experimental checks (opt-in, just replace `false` with `[]`)
+        #
+        {Credo.Check.Consistency.MultiAliasImportRequireUse, []},
+        {Credo.Check.Consistency.UnusedVariableNames, []},
+        {Credo.Check.Design.DuplicatedCode, false},
+        {Credo.Check.Readability.AliasAs, false},
+        {Credo.Check.Readability.BlockPipe, []},
+        {Credo.Check.Readability.ImplTrue, []},
+        {Credo.Check.Readability.MultiAlias, []},
+        {Credo.Check.Readability.SeparateAliasRequire, []},
+        {Credo.Check.Readability.SinglePipe, []},
+        {Credo.Check.Readability.Specs, false},
+        {Credo.Check.Readability.StrictModuleLayout, []},
+        {Credo.Check.Readability.WithCustomTaggedTuple, []},
+        {Credo.Check.Refactor.ABCSize, false},
+        {Credo.Check.Refactor.AppendSingleItem, []},
+        {Credo.Check.Refactor.DoubleBooleanNegation, []},
+        {Credo.Check.Refactor.FilterReject, []},
+        {Credo.Check.Refactor.IoPuts, []},
+        {Credo.Check.Refactor.MapMap, []},
+        {Credo.Check.Refactor.ModuleDependencies, false},
+        {Credo.Check.Refactor.NegatedIsNil, []},
+        {Credo.Check.Refactor.PipeChainStart, []},
+        {Credo.Check.Refactor.RejectFilter, []},
+        {Credo.Check.Refactor.VariableRebinding, []},
+        {Credo.Check.Warning.LazyLogging, []},
+        {Credo.Check.Warning.LeakyEnvironment, []},
+        {Credo.Check.Warning.MapGetUnsafePass, []},
+        {Credo.Check.Warning.MixEnv, []},
+        {Credo.Check.Warning.UnsafeToAtom, []}
+
+        #
+        # Custom checks can be created using `mix credo.gen.check`.
+        #
+      ]
+    }
+  ]
+}
diff --git a/.gitignore b/.gitignore
index 33608fb..edffbb9 100644
--- a/.gitignore
+++ b/.gitignore
@@ -59,5 +59,4 @@ npm-debug.log
 *.sqlite3
 
 .env-local
-Notes.md
-
+Notes.md
\ No newline at end of file
diff --git a/assets/html/1. Login Page.html.html b/assets/html/1. Login Page.html.html
new file mode 100644
index 0000000..e0a1221
--- /dev/null
+++ b/assets/html/1. Login Page.html.html	
@@ -0,0 +1,167 @@
+<html lang="en" class="h-full"><head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width, initial-scale=1.0">
+  <title>ClinicPro – Sign In</title>
+  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&amp;display=swap" rel="stylesheet">
+  <script src="https://cdn.tailwindcss.com?plugins=forms,typography"></script>
+  <script type="module" src="https://unpkg.com/lucide@latest"></script>
+  <style>*{font-family:Inter,ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif}</style>
+<script src="https://cdn.tailwindcss.com"></script>
+</head>
+<body class="h-full bg-gray-50 flex flex-col">
+  <!-- Top bar -->
+  <header class="w-full bg-white border-b border-gray-200" aria-label="Primary">
+    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 h-14 flex items-center gap-3">
+      <a href="/" aria-label="ClinicPro home" class="h-8 w-8 rounded-md bg-gray-800 flex items-center justify-center focus:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500">
+        <i data-lucide="user" class="h-4 w-4 text-white"></i>
+      </a>
+      <span class="text-gray-900 font-semibold text-lg tracking-tight">ClinicPro</span>
+    </div>
+  </header>
+
+  <!-- Main content -->
+  <main class="flex-1 flex flex-col items-center py-12 px-4">
+    <div class="w-full max-w-md space-y-6">
+      <!-- Sign in Card -->
+      <section class="bg-white border border-gray-200 rounded-lg shadow-sm p-8" aria-labelledby="signin-title">
+        <div class="w-16 h-16 rounded-full bg-gray-700 mx-auto flex items-center justify-center -mt-14 mb-4 shadow-lg" aria-hidden="true">
+          <i data-lucide="user" class="h-7 w-7 text-white"></i>
+        </div>
+        <h1 id="signin-title" class="text-center text-2xl font-semibold tracking-tight text-gray-900 mb-2">Welcome&nbsp;to&nbsp;ClinicPro</h1>
+        <p class="text-center text-sm text-gray-600 mb-6">Sign in to your medical practice dashboard</p>
+
+        <form class="space-y-4" id="login-form" novalidate="">
+          <div>
+            <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email Address</label>
+            <input id="email" name="email" type="email" required="" autocomplete="username" placeholder="doctor@clinic.com" class="block w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 text-sm">
+          </div>
+
+          <div class="relative">
+            <label for="password" class="block text-sm font-medium text-gray-700 mb-1">Password</label>
+            <input id="password" name="password" type="password" required="" autocomplete="current-password" placeholder="Enter your password" class="block w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 text-sm pr-10">
+            <button type="button" id="toggle-password" aria-label="Show password" class="absolute right-2 top-9 text-gray-500 hover:text-gray-700 focus:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500">
+              <i data-lucide="eye" class="h-5 w-5"></i>
+            </button>
+          </div>
+
+          <div class="flex items-center justify-between">
+            <label class="inline-flex items-center gap-2 text-sm text-gray-700 select-none">
+              <input type="checkbox" class="rounded-sm text-indigo-600 focus:ring-indigo-500">
+              Remember me
+            </label>
+            <a href="#" class="text-sm font-medium text-indigo-600 hover:text-indigo-500">Forgot password?</a>
+          </div>
+
+          <button type="submit" id="submit-btn" class="w-full inline-flex justify-center items-center gap-2 rounded-md bg-gray-700 py-2.5 text-sm font-semibold text-white transition hover:bg-gray-800 focus:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500">
+            <span>Sign In</span>
+          </button>
+
+          <!-- Error / success region -->
+          <p id="form-msg" class="text-center text-sm mt-2 text-red-600 invisible" role="alert" aria-live="polite"></p>
+        </form>
+
+        <!-- Divider -->
+        <div class="relative my-6">
+          <div class="absolute inset-0 flex items-center" aria-hidden="true">
+            <div class="w-full border-t border-gray-200"></div>
+          </div>
+          <div class="relative flex justify-center text-sm">
+            <span class="bg-white px-3 text-gray-500">Or continue with</span>
+          </div>
+        </div>
+
+        <!-- Social buttons -->
+        <div class="grid grid-cols-2 gap-3">
+          <button class="flex items-center justify-center gap-2 w-full border border-gray-300 rounded-md py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500" aria-label="Sign in with Google">
+            <svg class="h-4 w-4" viewBox="0 0 533.5 544.3"><path fill="#EA4335" d="M533.5 278.4c0-17.8-1.6-35-4.6-51.6H272.1v97.7h146.8c-6.4 34.6-25.3 64.4-54 84.3l87.1 67.2c50.7-46.7 81.5-115.6 81.5-197.6z"></path><path fill="#34A853" d="M272.1 544.3c73.5 0 135.1-24.3 180.1-66.1l-87.1-67.2c-24.2 16.2-55 25.4-93 25.4-71.6 0-132.2-48.3-153.9-113.4l-89.5 69.4C67 482 162.3 544.3 272.1 544.3z"></path><path fill="#4A90E2" d="M118.2 322.9c-11-32.8-11-68.3 0-101.1L28.7 152.4c-38.3 74.8-38.3 163.4 0 238.2l89.5-67.7z"></path><path fill="#FBBC05" d="M272.1 107.9c39.9-.6 78.4 14.2 108.2 41.2l81-78.6C410.3 25.8 342.8 0 272.1 0 162.3 0 67 62.3 28.7 152.4l89.5 69.4C139.9 156.2 200.5 107.9 272.1 107.9z"></path></svg>
+            Google
+          </button>
+          <button class="flex items-center justify-center gap-2 w-full border border-gray-300 rounded-md py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500" aria-label="Sign in with Microsoft">
+            <svg class="h-4 w-4" viewBox="0 0 24 24" fill="#666"><rect width="10" height="10" x="2" y="2"></rect><rect width="10" height="10" x="12" y="2"></rect><rect width="10" height="10" x="2" y="12"></rect><rect width="10" height="10" x="12" y="12"></rect></svg>
+            Microsoft
+          </button>
+        </div>
+
+        <p class="text-center text-sm mt-6 text-gray-600">
+          New to ClinicPro?
+          <a href="#" class="font-medium text-indigo-600 hover:text-indigo-500">Start your free trial</a>
+        </p>
+      </section>
+
+      <!-- Quick Setup Card -->
+      <section class="bg-white border border-gray-200 rounded-lg shadow-sm p-6">
+        <h2 class="text-lg font-semibold text-gray-900 mb-4">Quick Setup for New Users</h2>
+        <ol class="space-y-3 text-sm text-gray-700 list-decimal list-inside">
+          <li>
+            <span class="font-medium">Create Account</span>
+            <p class="text-gray-500">Sign up with your medical license details</p>
+          </li>
+          <li>
+            <span class="font-medium">Verify Identity</span>
+            <p class="text-gray-500">Upload medical license and practice information</p>
+          </li>
+          <li>
+            <span class="font-medium">Setup Practice</span>
+            <p class="text-gray-500">Configure clinic settings and patient management</p>
+          </li>
+        </ol>
+        <button class="mt-6 w-full rounded-md bg-gray-100 py-2.5 text-sm font-semibold text-gray-700 hover:bg-gray-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-indigo-500 transition">Start Free Trial</button>
+      </section>
+    </div>
+  </main>
+
+  <!-- Footer -->
+  <footer class="w-full bg-white border-t border-gray-200">
+    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4 flex flex-col sm:flex-row items-center justify-between text-sm text-gray-500">
+      <p>© 2025 ClinicPro. All rights reserved.</p>
+      <nav class="flex gap-6 mt-2 sm:mt-0" aria-label="Footer">
+        <a href="#" class="hover:text-gray-700">Support</a>
+        <a href="#" class="hover:text-gray-700">Privacy</a>
+        <a href="#" class="hover:text-gray-700">Terms</a>
+      </nav>
+    </div>
+  </footer>
+
+  <script>
+    document.addEventListener('DOMContentLoaded', () => {
+      lucide.createIcons();
+
+      /* Password show / hide */
+      const toggle = document.getElementById('toggle-password');
+      const pwd = document.getElementById('password');
+      let shown = false;
+      toggle.addEventListener('click', () => {
+        shown = !shown;
+        pwd.type = shown ? 'text' : 'password';
+        toggle.setAttribute('aria-label', shown ? 'Hide password' : 'Show password');
+        toggle.innerHTML = shown
+          ? lucide.icons['eye-off'].toSvg({class: 'h-5 w-5'})
+          : lucide.icons['eye'].toSvg({class: 'h-5 w-5'});
+      });
+
+      /* Simple loading + validation micro-interaction */
+      const form = document.getElementById('login-form');
+      const btn  = document.getElementById('submit-btn');
+      const msg  = document.getElementById('form-msg');
+      form.addEventListener('submit', (e) => {
+        e.preventDefault();
+        msg.classList.add('invisible');
+        if (!form.checkValidity()) {
+          msg.textContent = 'Please complete all required fields.';
+          msg.classList.remove('invisible');
+          return;
+        }
+        btn.disabled = true;
+        btn.innerHTML = lucide.icons['loader-2'].toSvg({class:'animate-spin h-4 w-4'}) + '<span class="sr-only">Loading</span>';
+        setTimeout(() => { // Simulated request
+          btn.disabled = false;
+          btn.innerHTML = '<span>Sign In</span>';
+          msg.textContent = 'Signed in successfully!';
+          msg.classList.remove('invisible');
+          msg.classList.replace('text-red-600','text-green-600');
+        }, 1500);
+      });
+    });
+  </script>
+
+</body></html>
\ No newline at end of file
diff --git a/assets/html/4. Appointment.html b/assets/html/4. Appointment.html
new file mode 100644
index 0000000..7f43c8b
--- /dev/null
+++ b/assets/html/4. Appointment.html	
@@ -0,0 +1,293 @@
+<!DOCTYPE html>
+<html lang="en" class="h-full bg-gray-50">
+<head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width, initial-scale=1.0">
+  <title>ClinicPro – Appointments</title>
+  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
+  <script src="https://cdn.tailwindcss.com?plugins=typography,forms"></script>
+  <script>
+    tailwind.config = { theme: { fontFamily: { sans: ['Inter', 'sans-serif'] } } }
+  </script>
+  <script src="https://unpkg.com/lucide@latest"></script>
+</head>
+<body class="h-full text-gray-900">
+  <!-- Layout -->
+  <div class="flex h-full">
+    <!-- Sidebar -->
+    <aside class="hidden lg:flex lg:flex-col lg:w-56 bg-white border-r">
+      <div class="flex items-center gap-2 px-4 py-4 border-b">
+        <div id="logo" class="h-8 w-8 bg-gray-200 rounded flex items-center justify-center">
+          <i data-lucide="shield-plus" class="w-5 h-5 text-gray-700"></i>
+        </div>
+        <span class="font-semibold text-lg">ClinicPro</span>
+      </div>
+
+      <nav class="flex-1 px-2 py-4 space-y-2">
+        <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="home" class="w-5 h-5"></i> Home
+        </a>
+        <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm font-medium bg-gray-100 text-gray-900">
+          <i data-lucide="calendar-check" class="w-5 h-5"></i> Appointments
+        </a>
+        <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="users" class="w-5 h-5"></i> Patients
+        </a>
+        <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="clipboard-pills" class="w-5 h-5"></i> Prescriptions
+        </a>
+        <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="flask-conical" class="w-5 h-5"></i> Lab Orders
+        </a>
+        <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="credit-card" class="w-5 h-5"></i> Billing
+        </a>
+        <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="settings" class="w-5 h-5"></i> Settings
+        </a>
+      </nav>
+
+      <div class="px-4 py-4 border-t text-xs text-gray-500">
+        © 2023 ClinicPro. All rights reserved
+      </div>
+    </aside>
+
+    <!-- Main Content -->
+    <main class="flex-1 overflow-y-auto">
+      <!-- Header -->
+      <header class="sticky top-0 bg-white border-b z-10">
+        <div class="max-w-7xl mx-auto flex items-center justify-between px-4 sm:px-6 lg:px-8 h-16">
+          <h1 class="text-xl font-semibold">Appointments</h1>
+          <button id="newAppointment" class="inline-flex items-center gap-2 px-4 py-2 bg-gray-800 hover:bg-gray-700 text-white text-sm font-medium rounded-md shadow-sm">
+            <i data-lucide="plus" class="w-4 h-4"></i>
+            New Appointment
+          </button>
+        </div>
+      </header>
+
+      <!-- Card -->
+      <section class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
+        <div class="bg-white rounded-lg border shadow-sm">
+          <!-- Filters -->
+          <div class="flex flex-col sm:flex-row sm:items-center gap-3 px-4 py-4 border-b">
+            <div class="flex-1">
+              <div class="relative">
+                <input type="text" placeholder="Search patients, dates..."
+                       class="w-full sm:max-w-xs pl-10 pr-3 py-2 border rounded-md bg-gray-50 text-sm placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-gray-600 focus:bg-white">
+                <i data-lucide="search" class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400"></i>
+              </div>
+            </div>
+            <div class="relative">
+              <button id="statusToggle"
+                      class="flex items-center gap-2 px-3 py-2 border rounded-md bg-gray-50 text-sm font-medium text-gray-700 hover:bg-gray-100">
+                All Status
+                <i data-lucide="chevron-down" class="w-4 h-4"></i>
+              </button>
+              <ul id="statusMenu"
+                  class="hidden absolute right-0 mt-1 w-40 bg-white border rounded-md shadow-lg py-1 text-sm z-20">
+                <li><button data-value="all" class="w-full text-left px-3 py-2 hover:bg-gray-50">All Status</button></li>
+                <li><button data-value="paid" class="w-full text-left px-3 py-2 hover:bg-gray-50">Paid</button></li>
+                <li><button data-value="pending" class="w-full text-left px-3 py-2 hover:bg-gray-50">Pending</button></li>
+                <li><button data-value="overdue" class="w-full text-left px-3 py-2 hover:bg-gray-50">Overdue</button></li>
+              </ul>
+            </div>
+
+            <div class="ml-auto flex gap-2">
+              <button class="px-3 py-2 text-xs font-medium rounded-md border bg-gray-50 hover:bg-gray-100">Week</button>
+              <button class="px-3 py-2 text-xs font-medium rounded-md border bg-gray-800 text-white">Table</button>
+            </div>
+          </div>
+
+          <!-- Table -->
+          <div class="overflow-x-auto">
+            <table class="min-w-full divide-y divide-gray-100">
+              <thead class="bg-white text-gray-500 text-xs uppercase">
+                <tr>
+                  <th scope="col" class="px-6 py-3 text-left font-medium">Date</th>
+                  <th scope="col" class="px-6 py-3 text-left font-medium">Time</th>
+                  <th scope="col" class="px-6 py-3 text-left font-medium">Patient</th>
+                  <th scope="col" class="px-6 py-3 text-left font-medium">Type</th>
+                  <th scope="col" class="px-6 py-3 text-left font-medium">Status</th>
+                  <th scope="col" class="px-6 py-3 text-left font-medium">Actions</th>
+                </tr>
+              </thead>
+              <tbody class="divide-y divide-gray-100 text-sm">
+                <!-- Row 1 -->
+                <tr class="bg-white hover:bg-gray-50">
+                  <td class="px-6 py-4 whitespace-nowrap">Jan 15, 2025</td>
+                  <td class="px-6 py-4 whitespace-nowrap">9:00 AM</td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center gap-3">
+                      <img src="https://api.dicebear.com/5.x/thumbs/svg?seed=Sarah" alt="" class="h-8 w-8 rounded-full">
+                      <div>
+                        <div class="font-medium text-gray-900">Sarah Johnson</div>
+                        <div class="text-gray-500 text-xs">sarah.j@email.com</div>
+                      </div>
+                    </div>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap">General Checkup</td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-700">Paid</span>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center gap-2">
+                      <button class="px-3 py-1 text-xs font-medium bg-gray-800 text-white rounded-md">Join Call</button>
+                      <button class="relative">
+                        <i data-lucide="more-vertical" class="w-4 h-4 text-gray-600"></i>
+                      </button>
+                    </div>
+                  </td>
+                </tr>
+
+                <!-- Row 2 -->
+                <tr class="bg-white hover:bg-gray-50">
+                  <td class="px-6 py-4 whitespace-nowrap">Jan 15, 2025</td>
+                  <td class="px-6 py-4 whitespace-nowrap">10:30 AM</td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center gap-3">
+                      <img src="https://api.dicebear.com/5.x/thumbs/svg?seed=Michael" alt="" class="h-8 w-8 rounded-full">
+                      <div>
+                        <div class="font-medium text-gray-900">Michael Chen</div>
+                        <div class="text-gray-500 text-xs">m.chen@email.com</div>
+                      </div>
+                    </div>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap">Follow-up</td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">Pending</span>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center gap-2">
+                      <button class="px-3 py-1 text-xs font-medium bg-gray-200 text-gray-800 rounded-md">Awaiting Payment</button>
+                      <button class="relative">
+                        <i data-lucide="more-vertical" class="w-4 h-4 text-gray-600"></i>
+                      </button>
+                    </div>
+                  </td>
+                </tr>
+
+                <!-- Row 3 -->
+                <tr class="bg-white hover:bg-gray-50">
+                  <td class="px-6 py-4 whitespace-nowrap">Jan 15, 2025</td>
+                  <td class="px-6 py-4 whitespace-nowrap">2:00 PM</td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center gap-3">
+                      <img src="https://api.dicebear.com/5.x/thumbs/svg?seed=Emily" alt="" class="h-8 w-8 rounded-full">
+                      <div>
+                        <div class="font-medium text-gray-900">Emily Davis</div>
+                        <div class="text-gray-500 text-xs">emily.d@email.com</div>
+                      </div>
+                    </div>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap">Consultation</td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">Overdue</span>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center gap-2">
+                      <button class="px-3 py-1 text-xs font-medium bg-gray-800 text-white rounded-md">Send Reminder</button>
+                      <button class="relative">
+                        <i data-lucide="more-vertical" class="w-4 h-4 text-gray-600"></i>
+                      </button>
+                    </div>
+                  </td>
+                </tr>
+
+                <!-- Row 4 -->
+                <tr class="bg-white hover:bg-gray-50">
+                  <td class="px-6 py-4 whitespace-nowrap">Jan 16, 2025</td>
+                  <td class="px-6 py-4 whitespace-nowrap">11:00 AM</td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center gap-3">
+                      <img src="https://api.dicebear.com/5.x/thumbs/svg?seed=Robert" alt="" class="h-8 w-8 rounded-full">
+                      <div>
+                        <div class="font-medium text-gray-900">Robert Wilson</div>
+                        <div class="text-gray-500 text-xs">r.wilson@email.com</div>
+                      </div>
+                    </div>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap">Annual Physical</td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-700">Paid</span>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center gap-2">
+                      <button class="px-3 py-1 text-xs font-medium bg-gray-200 text-gray-800 rounded-md">Scheduled</button>
+                      <button class="relative">
+                        <i data-lucide="more-vertical" class="w-4 h-4 text-gray-600"></i>
+                      </button>
+                    </div>
+                  </td>
+                </tr>
+
+                <!-- Row 5 -->
+                <tr class="bg-white hover:bg-gray-50">
+                  <td class="px-6 py-4 whitespace-nowrap">Jan 16, 2025</td>
+                  <td class="px-6 py-4 whitespace-nowrap">3:30 PM</td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center gap-3">
+                      <img src="https://api.dicebear.com/5.x/thumbs/svg?seed=Lisa" alt="" class="h-8 w-8 rounded-full">
+                      <div>
+                        <div class="font-medium text-gray-900">Lisa Thompson</div>
+                        <div class="text-gray-500 text-xs">l.thompson@email.com</div>
+                      </div>
+                    </div>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap">Urgent Care</td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">Pending</span>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center gap-2">
+                      <button class="px-3 py-1 text-xs font-medium bg-gray-200 text-gray-800 rounded-md">Awaiting Payment</button>
+                      <button class="relative">
+                        <i data-lucide="more-vertical" class="w-4 h-4 text-gray-600"></i>
+                      </button>
+                    </div>
+                  </td>
+                </tr>
+              </tbody>
+            </table>
+          </div>
+
+          <!-- Footer -->
+          <div class="flex flex-col sm:flex-row sm:items-center justify-between px-6 py-4">
+            <p class="text-sm text-gray-500">Showing 5 of 23 appointments</p>
+            <nav class="inline-flex gap-2 mt-4 sm:mt-0">
+              <button class="px-3 py-1 border rounded-md text-xs text-gray-700 bg-white hover:bg-gray-50">Previous</button>
+              <button class="px-3 py-1 border rounded-md text-xs bg-gray-800 text-white">1</button>
+              <button class="px-3 py-1 border rounded-md text-xs text-gray-700 bg-white hover:bg-gray-50">2</button>
+              <button class="px-3 py-1 border rounded-md text-xs text-gray-700 bg-white hover:bg-gray-50">3</button>
+              <button class="px-3 py-1 border rounded-md text-xs text-gray-700 bg-white hover:bg-gray-50">Next</button>
+            </nav>
+          </div>
+        </div>
+      </section>
+    </main>
+  </div>
+
+  <!-- Scripts -->
+  <script>
+    lucide.createIcons();
+
+    // Status dropdown
+    const toggleBtn = document.getElementById('statusToggle');
+    const menu = document.getElementById('statusMenu');
+
+    toggleBtn.addEventListener('click', () => {
+      menu.classList.toggle('hidden');
+    });
+    document.addEventListener('click', (e) => {
+      if (!toggleBtn.contains(e.target) && !menu.contains(e.target)) {
+        menu.classList.add('hidden');
+      }
+    });
+    menu.querySelectorAll('button').forEach(btn => {
+      btn.addEventListener('click', () => {
+        toggleBtn.firstChild.textContent = btn.textContent;
+        menu.classList.add('hidden');
+      });
+    });
+  </script>
+</body>
+</html>
\ No newline at end of file
diff --git a/assets/html/5. Patients.html b/assets/html/5. Patients.html
new file mode 100644
index 0000000..6ed185c
--- /dev/null
+++ b/assets/html/5. Patients.html	
@@ -0,0 +1,312 @@
+<!DOCTYPE html>
+<html lang="en" class="h-full bg-gray-50 scroll-smooth">
+<head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width, initial-scale=1.0">
+  <title>ClinicPro – Patients</title>
+  <link rel="preconnect" href="https://fonts.googleapis.com">
+  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
+  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
+  <script src="https://cdn.tailwindcss.com"></script>
+  <script src="https://unpkg.com/lucide@latest"></script>
+  <style>
+    html { font-family: 'Inter', sans-serif; }
+  </style>
+</head>
+<body class="h-full flex">
+  <!-- Sidebar -->
+  <aside id="sidebar" class="fixed z-30 inset-y-0 left-0 w-64 bg-white border-r border-gray-200 flex flex-col transition-transform lg:static lg:translate-x-0 -translate-x-full lg:translate-x-0">
+    <div class="flex items-center h-16 px-6 border-b border-gray-200">
+      <span class="px-2 py-1 bg-indigo-50 text-indigo-600 rounded">🛡️</span>
+      <span class="ml-3 text-lg font-semibold tracking-tight">ClinicPro</span>
+    </div>
+    <nav class="flex-1 overflow-y-auto">
+      <ul class="py-4 space-y-2">
+        <li>
+          <a href="#" class="group flex items-center px-6 py-2 text-sm font-medium text-gray-600 hover:bg-gray-100">
+            <i data-lucide="home" class="w-4 h-4 opacity-70 group-hover:opacity-100"></i>
+            <span class="ml-3">Home</span>
+          </a>
+        </li>
+        <li>
+          <a href="#" class="group flex items-center px-6 py-2 text-sm font-medium text-gray-600 hover:bg-gray-100">
+            <i data-lucide="calendar" class="w-4 h-4 opacity-70 group-hover:opacity-100"></i>
+            <span class="ml-3">Appointments</span>
+          </a>
+        </li>
+        <li>
+          <a href="#" class="group flex items-center px-6 py-2 text-sm font-medium text-gray-800 bg-gray-100 rounded-r-full">
+            <i data-lucide="users" class="w-4 h-4 opacity-90"></i>
+            <span class="ml-3">Patients</span>
+          </a>
+        </li>
+        <li>
+          <a href="#" class="group flex items-center px-6 py-2 text-sm font-medium text-gray-600 hover:bg-gray-100">
+            <i data-lucide="book-open" class="w-4 h-4 opacity-70 group-hover:opacity-100"></i>
+            <span class="ml-3">Prescriptions</span>
+          </a>
+        </li>
+        <li>
+          <a href="#" class="group flex items-center px-6 py-2 text-sm font-medium text-gray-600 hover:bg-gray-100">
+            <i data-lucide="beaker" class="w-4 h-4 opacity-70 group-hover:opacity-100"></i>
+            <span class="ml-3">Lab Orders</span>
+          </a>
+        </li>
+        <li>
+          <a href="#" class="group flex items-center px-6 py-2 text-sm font-medium text-gray-600 hover:bg-gray-100">
+            <i data-lucide="credit-card" class="w-4 h-4 opacity-70 group-hover:opacity-100"></i>
+            <span class="ml-3">Billing</span>
+          </a>
+        </li>
+        <li>
+          <a href="#" class="group flex items-center px-6 py-2 text-sm font-medium text-gray-600 hover:bg-gray-100">
+            <i data-lucide="settings" class="w-4 h-4 opacity-70 group-hover:opacity-100"></i>
+            <span class="ml-3">Settings</span>
+          </a>
+        </li>
+      </ul>
+    </nav>
+    <div class="px-6 py-4 border-t border-gray-200 text-xs text-gray-500">
+      © 2025 ClinicPro. All rights reserved
+    </div>
+  </aside>
+
+  <!-- Main -->
+  <div class="flex-1 min-h-screen flex flex-col lg:ml-64">
+    <!-- Topbar (mobile) -->
+    <header class="lg:hidden flex items-center justify-between h-14 px-4 border-b border-gray-200 bg-white">
+      <button id="openSidebar" class="text-gray-600">
+        <i data-lucide="menu" class="w-5 h-5"></i>
+      </button>
+      <span class="text-sm font-semibold">Patients</span>
+      <span class="w-5"></span>
+    </header>
+
+    <!-- Content -->
+    <main class="flex-1 p-6 lg:p-10">
+      <div class="flex items-center justify-between mb-6">
+        <h1 class="text-2xl font-semibold tracking-tight">Patients</h1>
+        <button class="inline-flex items-center gap-2 text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 px-4 py-2 rounded-md shadow-sm">
+          <i data-lucide="plus" class="w-4 h-4"></i>
+          Add Patient
+        </button>
+      </div>
+
+      <div class="bg-white border border-gray-200 rounded-lg shadow-sm">
+        <!-- Filters -->
+        <div class="flex flex-col sm:flex-row sm:items-center gap-3 p-4 border-b border-gray-200">
+          <div class="flex-1 relative">
+            <i data-lucide="search" class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400"></i>
+            <input type="text" placeholder="Search patients, phone, email…" class="w-full border border-gray-300 rounded-md pl-10 pr-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 placeholder-gray-400" />
+          </div>
+          <select class="border border-gray-300 rounded-md text-sm px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
+            <option>All Status</option>
+            <option>Active</option>
+            <option>Inactive</option>
+            <option>New</option>
+          </select>
+          <div class="flex gap-2 sm:ml-auto">
+            <button class="text-sm font-medium text-gray-600 hover:text-gray-800 px-3 py-2 rounded-md border border-gray-300 bg-white">Export</button>
+            <button class="text-sm font-medium text-gray-600 hover:text-gray-800 px-3 py-2 rounded-md border border-gray-300 bg-white">Table</button>
+          </div>
+        </div>
+
+        <!-- Table -->
+        <div class="overflow-x-auto">
+          <table class="min-w-full text-sm">
+            <thead class="bg-gray-50 text-gray-600 uppercase text-xs">
+              <tr>
+                <th class="px-6 py-3 text-left font-medium">Patient</th>
+                <th class="px-6 py-3 text-left font-medium">Contact</th>
+                <th class="px-6 py-3 text-left font-medium">Age</th>
+                <th class="px-6 py-3 text-left font-medium">Last Visit</th>
+                <th class="px-6 py-3 text-left font-medium">Status</th>
+                <th class="px-6 py-3 text-left font-medium">Actions</th>
+              </tr>
+            </thead>
+            <tbody class="divide-y divide-gray-200">
+              <!-- Row -->
+              <tr class="hover:bg-gray-50">
+                <td class="px-6 py-4 whitespace-nowrap flex items-center gap-3">
+                  <span class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center text-gray-500 text-xs font-semibold">SJ</span>
+                  <div>
+                    <div class="font-medium text-gray-900">Sarah Johnson</div>
+                    <div class="text-gray-500 text-xs">ID: P-2025-001</div>
+                  </div>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <div class="text-gray-900">sarah.j@email.com</div>
+                  <div class="text-gray-500">+1 (555) 123-4567</div>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap text-gray-900">34</td>
+                <td class="px-6 py-4 whitespace-nowrap text-gray-900">Jan 15, 2025</td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-50 text-green-700">Active</span>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap flex items-center gap-2">
+                  <button class="text-xs font-medium text-white bg-indigo-600 hover:bg-indigo-700 px-3 py-1.5 rounded-md">View Profile</button>
+                  <button class="text-gray-500 hover:text-gray-700">
+                    <i data-lucide="more-vertical" class="w-4 h-4"></i>
+                  </button>
+                </td>
+              </tr>
+              <!-- Row -->
+              <tr class="hover:bg-gray-50">
+                <td class="px-6 py-4 whitespace-nowrap flex items-center gap-3">
+                  <span class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center text-gray-500 text-xs font-semibold">MC</span>
+                  <div>
+                    <div class="font-medium text-gray-900">Michael Chen</div>
+                    <div class="text-gray-500 text-xs">ID: P-2025-002</div>
+                  </div>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <div class="text-gray-900">m.chen@email.com</div>
+                  <div class="text-gray-500">+1 (555) 234-5678</div>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap text-gray-900">42</td>
+                <td class="px-6 py-4 whitespace-nowrap text-gray-900">Jan 10, 2025</td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-50 text-green-700">Active</span>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap flex items-center gap-2">
+                  <button class="text-xs font-medium text-white bg-indigo-600 hover:bg-indigo-700 px-3 py-1.5 rounded-md">View Profile</button>
+                  <button class="text-gray-500 hover:text-gray-700">
+                    <i data-lucide="more-vertical" class="w-4 h-4"></i>
+                  </button>
+                </td>
+              </tr>
+              <!-- Row -->
+              <tr class="hover:bg-gray-50">
+                <td class="px-6 py-4 whitespace-nowrap flex items-center gap-3">
+                  <span class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center text-gray-500 text-xs font-semibold">ED</span>
+                  <div>
+                    <div class="font-medium text-gray-900">Emily Davis</div>
+                    <div class="text-gray-500 text-xs">ID: P-2025-003</div>
+                  </div>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <div class="text-gray-900">emily.d@email.com</div>
+                  <div class="text-gray-500">+1 (555) 345-6789</div>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap text-gray-900">28</td>
+                <td class="px-6 py-4 whitespace-nowrap text-gray-900">Dec 20, 2024</td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-50 text-yellow-700">Inactive</span>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap flex items-center gap-2">
+                  <button class="text-xs font-medium text-white bg-indigo-600 hover:bg-indigo-700 px-3 py-1.5 rounded-md">View Profile</button>
+                  <button class="text-gray-500 hover:text-gray-700">
+                    <i data-lucide="more-vertical" class="w-4 h-4"></i>
+                  </button>
+                </td>
+              </tr>
+              <!-- Row -->
+              <tr class="hover:bg-gray-50">
+                <td class="px-6 py-4 whitespace-nowrap flex items-center gap-3">
+                  <span class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center text-gray-500 text-xs font-semibold">RW</span>
+                  <div>
+                    <div class="font-medium text-gray-900">Robert Wilson</div>
+                    <div class="text-gray-500 text-xs">ID: P-2025-004</div>
+                  </div>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <div class="text-gray-900">r.wilson@email.com</div>
+                  <div class="text-gray-500">+1 (555) 456-7890</div>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap text-gray-900">58</td>
+                <td class="px-6 py-4 whitespace-nowrap text-gray-900">Jan 16, 2025</td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-50 text-green-700">Active</span>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap flex items-center gap-2">
+                  <button class="text-xs font-medium text-white bg-indigo-600 hover:bg-indigo-700 px-3 py-1.5 rounded-md">View Profile</button>
+                  <button class="text-gray-500 hover:text-gray-700">
+                    <i data-lucide="more-vertical" class="w-4 h-4"></i>
+                  </button>
+                </td>
+              </tr>
+              <!-- Row -->
+              <tr class="hover:bg-gray-50">
+                <td class="px-6 py-4 whitespace-nowrap flex items-center gap-3">
+                  <span class="w-8 h-8 bg-gray-200 rounded-full flex items-center justify-center text-gray-500 text-xs font-semibold">LT</span>
+                  <div>
+                    <div class="font-medium text-gray-900">Lisa Thompson</div>
+                    <div class="text-gray-500 text-xs">ID: P-2025-005</div>
+                  </div>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <div class="text-gray-900">l.thompson@email.com</div>
+                  <div class="text-gray-500">+1 (555) 567-8901</div>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap text-gray-900">31</td>
+                <td class="px-6 py-4 whitespace-nowrap text-gray-900">Jan 12, 2025</td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-50 text-blue-700">New</span>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap flex items-center gap-2">
+                  <button class="text-xs font-medium text-white bg-indigo-600 hover:bg-indigo-700 px-3 py-1.5 rounded-md">View Profile</button>
+                  <button class="text-gray-500 hover:text-gray-700">
+                    <i data-lucide="more-vertical" class="w-4 h-4"></i>
+                  </button>
+                </td>
+              </tr>
+            </tbody>
+          </table>
+        </div>
+
+        <!-- Table footer -->
+        <div class="flex flex-col sm:flex-row sm:items-center justify-between gap-3 px-6 py-4">
+          <p class="text-sm text-gray-600">Showing 5 of 47 patients</p>
+          <nav class="inline-flex -space-x-px">
+            <button class="px-3 py-1 border border-gray-300 bg-white text-xs rounded-l-md text-gray-500 hover:bg-gray-50">Previous</button>
+            <button class="px-3 py-1 border-t border-b border-gray-300 bg-indigo-600 text-white text-xs">1</button>
+            <button class="px-3 py-1 border border-gray-300 bg-white text-xs text-gray-600 hover:bg-gray-50">2</button>
+            <button class="px-3 py-1 border border-gray-300 bg-white text-xs text-gray-600 hover:bg-gray-50">3</button>
+            <button class="px-3 py-1 border border-gray-300 bg-white text-xs rounded-r-md text-gray-600 hover:bg-gray-50">Next</button>
+          </nav>
+        </div>
+      </div>
+    </main>
+
+    <!-- Footer -->
+    <footer class="hidden lg:flex justify-between items-center px-10 py-4 text-xs text-gray-500 border-t border-gray-200 bg-white">
+      <span>© 2025 ClinicPro. All rights reserved.</span>
+      <div class="flex gap-4">
+        <a href="#" class="hover:text-gray-700">Support</a>
+        <a href="#" class="hover:text-gray-700">Privacy</a>
+      </div>
+    </footer>
+  </div>
+
+  <script>
+    // Initialize Lucide icons
+    lucide.createIcons();
+
+    // Sidebar toggle for mobile
+    const sidebar = document.getElementById('sidebar');
+    const openBtn = document.getElementById('openSidebar');
+
+    openBtn?.addEventListener('click', () => {
+      if (sidebar.classList.contains('-translate-x-full')) {
+        sidebar.classList.remove('-translate-x-full');
+      } else {
+        sidebar.classList.add('-translate-x-full');
+      }
+    });
+
+    // Close sidebar on outside click (mobile)
+    document.addEventListener('click', (e) => {
+      if (!sidebar.contains(e.target) && !openBtn.contains(e.target) && window.innerWidth < 1024) {
+        sidebar.classList.add('-translate-x-full');
+      }
+    });
+
+    // Ensure sidebar state on resize
+    window.addEventListener('resize', () => {
+      if (window.innerWidth >= 1024) {
+        sidebar.classList.remove('-translate-x-full');
+      }
+    });
+  </script>
+</body>
+</html>
diff --git a/assets/html/5.1 Indivdual Patient view(1).html b/assets/html/5.1 Indivdual Patient view(1).html
new file mode 100644
index 0000000..6abb320
--- /dev/null
+++ b/assets/html/5.1 Indivdual Patient view(1).html	
@@ -0,0 +1,337 @@
+<!DOCTYPE html>
+<html lang="en" class="h-full bg-gray-50 antialiased">
+<head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <title>Patient Profile – ClinicPro</title>
+  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
+  <script src="https://cdn.tailwindcss.com?plugins=typography"></script>
+  <script>
+    tailwind.config = { theme: { extend: { fontFamily: { sans: ['Inter', 'ui-sans-serif', 'system-ui'] } } } }
+  </script>
+</head>
+<body class="h-full flex">
+  <!-- Sidebar -->
+  <aside class="hidden lg:flex lg:flex-col w-60 border-r bg-white">
+    <div class="flex h-16 items-center gap-2 px-6 border-b">
+      <div class="w-8 h-8 bg-indigo-600 rounded-md flex items-center justify-center">
+        <i data-lucide="heartbeat" class="w-4 h-4 text-white"></i>
+      </div>
+      <span class="font-semibold">ClinicPro</span>
+    </div>
+    <nav class="flex-1 overflow-y-auto">
+      <ul class="flex flex-col gap-1 p-4 text-sm">
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100 text-gray-700">
+            <i data-lucide="home" class="w-4 h-4"></i> Home
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100 text-gray-700">
+            <i data-lucide="calendar" class="w-4 h-4"></i> Appointments
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md bg-gray-100 text-gray-900 font-medium">
+            <i data-lucide="users" class="w-4 h-4"></i> Patients
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100 text-gray-700">
+            <i data-lucide="pill" class="w-4 h-4"></i> Prescriptions
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100 text-gray-700">
+            <i data-lucide="flask-conical" class="w-4 h-4"></i> Lab Orders
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100 text-gray-700">
+            <i data-lucide="credit-card" class="w-4 h-4"></i> Billing
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100 text-gray-700">
+            <i data-lucide="settings" class="w-4 h-4"></i> Settings
+          </a>
+        </li>
+      </ul>
+    </nav>
+    <div class="h-16 flex items-center justify-center text-xs text-gray-500 border-t">
+      © 2025 ClinicPro. All rights reserved.
+    </div>
+  </aside>
+
+  <!-- Mobile sidebar button -->
+  <button id="openNav" class="lg:hidden fixed top-4 left-4 z-20 bg-white shadow rounded-full p-2">
+    <i data-lucide="menu" class="w-5 h-5 text-gray-700"></i>
+  </button>
+
+  <!-- Mobile sidebar drawer -->
+  <div id="drawer" class="fixed inset-0 z-40 lg:hidden hidden">
+    <div class="absolute inset-0 bg-black/50" id="backdrop"></div>
+    <aside class="relative w-64 bg-white h-full shadow-lg">
+      <div class="flex h-16 items-center gap-2 px-6 border-b">
+        <div class="w-8 h-8 bg-indigo-600 rounded-md flex items-center justify-center">
+          <i data-lucide="heartbeat" class="w-4 h-4 text-white"></i>
+        </div>
+        <span class="font-semibold">ClinicPro</span>
+      </div>
+      <nav class="flex-1 overflow-y-auto">
+        <ul class="flex flex-col gap-1 p-4 text-sm">
+          <li>
+            <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100 text-gray-700">
+              <i data-lucide="home" class="w-4 h-4"></i> Home
+            </a>
+          </li>
+          <li>
+            <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100 text-gray-700">
+              <i data-lucide="calendar" class="w-4 h-4"></i> Appointments
+            </a>
+          </li>
+          <li>
+            <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md bg-gray-100 text-gray-900 font-medium">
+              <i data-lucide="users" class="w-4 h-4"></i> Patients
+            </a>
+          </li>
+          <li>
+            <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100 text-gray-700">
+              <i data-lucide="pill" class="w-4 h-4"></i> Prescriptions
+            </a>
+          </li>
+          <li>
+            <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100 text-gray-700">
+              <i data-lucide="flask-conical" class="w-4 h-4"></i> Lab Orders
+            </a>
+          </li>
+          <li>
+            <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100 text-gray-700">
+              <i data-lucide="credit-card" class="w-4 h-4"></i> Billing
+            </a>
+          </li>
+          <li>
+            <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100 text-gray-700">
+              <i data-lucide="settings" class="w-4 h-4"></i> Settings
+            </a>
+          </li>
+        </ul>
+      </nav>
+    </aside>
+  </div>
+
+  <!-- Main -->
+  <main class="flex-1 overflow-y-auto p-6 lg:p-10">
+    <div class="max-w-7xl mx-auto space-y-6">
+      <!-- Header -->
+      <div class="flex items-center justify-between">
+        <h1 class="text-xl font-semibold">Patient Profile</h1>
+        <div class="flex gap-3">
+          <button class="flex items-center gap-2 px-4 py-2 rounded-md border text-sm font-medium text-gray-700 hover:bg-gray-50">
+            <i data-lucide="edit-3" class="w-4 h-4"></i> Edit
+          </button>
+          <button class="flex items-center gap-2 px-4 py-2 rounded-md bg-indigo-600 text-white text-sm font-medium hover:bg-indigo-500">
+            <i data-lucide="calendar-plus" class="w-4 h-4"></i> Book Appointment
+          </button>
+        </div>
+      </div>
+
+      <div class="grid lg:grid-cols-3 gap-6">
+        <!-- Patient Card -->
+        <section class="col-span-1 bg-white border rounded-lg">
+          <div class="p-6 flex flex-col items-center text-center gap-4">
+            <div class="w-20 h-20 rounded-full bg-gray-100 flex items-center justify-center">
+              <i data-lucide="user" class="w-10 h-10 text-gray-400"></i>
+            </div>
+            <div>
+              <h2 class="font-semibold text-lg">Sarah Johnson</h2>
+              <p class="text-sm text-gray-500">ID: P-2025-001</p>
+            </div>
+            <span class="px-2 py-0.5 text-xs rounded-md bg-green-100 text-green-700">Active Patient</span>
+          </div>
+          <div class="border-t px-6 py-4 text-sm space-y-4">
+            <div>
+              <p class="font-medium">Email</p>
+              <p class="text-gray-600">sarah.j@email.com</p>
+            </div>
+            <div>
+              <p class="font-medium">Phone</p>
+              <p class="text-gray-600">(1) 555 123-4567</p>
+            </div>
+            <div>
+              <p class="font-medium">Date of Birth</p>
+              <p class="text-gray-600">March 15, 1991 (34 years)</p>
+            </div>
+            <div>
+              <p class="font-medium">Address</p>
+              <p class="text-gray-600 leading-snug">123 Main St, Anytown, ST 12345</p>
+            </div>
+            <div>
+              <p class="font-medium">Emergency Contact</p>
+              <p class="text-gray-600 leading-snug">John Johnson<br>+1 (555) 323-4568</p>
+            </div>
+            <div>
+              <p class="font-medium">Allergies</p>
+              <div class="flex flex-wrap gap-1">
+                <span class="bg-gray-100 text-gray-700 text-xs px-2 py-0.5 rounded">Penicillin</span>
+                <span class="bg-gray-100 text-gray-700 text-xs px-2 py-0.5 rounded">Shellfish</span>
+              </div>
+            </div>
+            <div>
+              <p class="font-medium">Insurance</p>
+              <p class="text-gray-600 leading-snug">Blue Cross Blue Shield<br>Policy: 8923456789</p>
+            </div>
+          </div>
+        </section>
+
+        <!-- Right Column -->
+        <div class="col-span-2 space-y-6">
+          <!-- Recent Appointments -->
+          <section class="bg-white border rounded-lg">
+            <div class="flex items-center justify-between px-6 py-4 border-b">
+              <h3 class="font-medium">Recent Appointments</h3>
+              <a href="#" class="text-sm text-indigo-600 hover:underline">View All</a>
+            </div>
+            <ul class="divide-y text-sm">
+              <li class="flex items-center justify-between px-6 py-4">
+                <div>
+                  <p class="font-medium">Annual Checkup</p>
+                  <p class="text-gray-500">Jan 15, 2025 at 10:00 AM</p>
+                </div>
+                <div class="flex items-center gap-4">
+                  <span class="bg-gray-100 text-gray-700 text-xs px-2 py-0.5 rounded">Completed</span>
+                  <i data-lucide="chevron-right" class="w-4 h-4 text-gray-400"></i>
+                </div>
+              </li>
+              <li class="flex items-center justify-between px-6 py-4">
+                <div>
+                  <p class="font-medium">Follow-up Visit</p>
+                  <p class="text-gray-500">Dec 20, 2024 at 2:30 PM</p>
+                </div>
+                <div class="flex items-center gap-4">
+                  <span class="bg-gray-100 text-gray-700 text-xs px-2 py-0.5 rounded">Completed</span>
+                  <i data-lucide="chevron-right" class="w-4 h-4 text-gray-400"></i>
+                </div>
+              </li>
+              <li class="flex items-center justify-between px-6 py-4">
+                <div>
+                  <p class="font-medium">Consultation</p>
+                  <p class="text-gray-500">Jan 25, 2025 at 3:00 PM</p>
+                </div>
+                <div class="flex items-center gap-4">
+                  <span class="bg-gray-100 text-gray-700 text-xs px-2 py-0.5 rounded">Scheduled</span>
+                  <i data-lucide="chevron-right" class="w-4 h-4 text-gray-400"></i>
+                </div>
+              </li>
+            </ul>
+          </section>
+
+          <!-- Prescriptions -->
+          <section class="bg-white border rounded-lg">
+            <div class="flex items-center justify-between px-6 py-4 border-b">
+              <h3 class="font-medium">Prescriptions</h3>
+              <button class="flex items-center gap-2 text-sm font-medium px-3 py-1.5 rounded-md border text-gray-700 hover:bg-gray-50">
+                <i data-lucide="plus" class="w-4 h-4"></i> New Prescription
+              </button>
+            </div>
+            <ul class="divide-y text-sm">
+              <li class="flex items-start justify-between px-6 py-4">
+                <div>
+                  <p class="font-medium">Amoxicillin 500mg</p>
+                  <p class="text-gray-500">Take 3 times daily for 7 days<br>Prescribed: Jan 15, 2025</p>
+                </div>
+                <div class="flex items-center gap-4">
+                  <span class="bg-gray-100 text-gray-700 text-xs px-2 py-0.5 rounded">Active</span>
+                  <i data-lucide="download" class="w-4 h-4 text-gray-400"></i>
+                </div>
+              </li>
+              <li class="flex items-start justify-between px-6 py-4">
+                <div>
+                  <p class="font-medium">Ibuprofen 400mg</p>
+                  <p class="text-gray-500">As needed for pain, max 3 per day<br>Prescribed: Dec 20, 2024</p>
+                </div>
+                <div class="flex items-center gap-4">
+                  <span class="bg-gray-100 text-gray-700 text-xs px-2 py-0.5 rounded">Completed</span>
+                  <i data-lucide="download" class="w-4 h-4 text-gray-400"></i>
+                </div>
+              </li>
+            </ul>
+          </section>
+
+          <!-- Lab Orders -->
+          <section class="bg-white border rounded-lg">
+            <div class="flex items-center justify-between px-6 py-4 border-b">
+              <h3 class="font-medium">Lab Orders</h3>
+              <button class="flex items-center gap-2 text-sm font-medium px-3 py-1.5 rounded-md border text-gray-700 hover:bg-gray-50">
+                <i data-lucide="plus" class="w-4 h-4"></i> New Lab Order
+              </button>
+            </div>
+            <ul class="divide-y text-sm">
+              <li class="flex items-start justify-between px-6 py-4">
+                <div>
+                  <p class="font-medium">Complete Blood Count (CBC)</p>
+                  <p class="text-gray-500">Ordered: Jan 15, 2025<br>Lab: Quest Diagnostics</p>
+                </div>
+                <div class="flex items-center gap-4">
+                  <span class="bg-gray-100 text-gray-700 text-xs px-2 py-0.5 rounded">Pending</span>
+                  <i data-lucide="chevron-right" class="w-4 h-4 text-gray-400"></i>
+                </div>
+              </li>
+              <li class="flex items-start justify-between px-6 py-4">
+                <div>
+                  <p class="font-medium">Lipid Panel</p>
+                  <p class="text-gray-500">Ordered: Dec 20, 2024<br>Lab: LabCorp</p>
+                </div>
+                <div class="flex items-center gap-4">
+                  <span class="bg-gray-100 text-gray-700 text-xs px-2 py-0.5 rounded">Completed</span>
+                  <i data-lucide="chevron-right" class="w-4 h-4 text-gray-400"></i>
+                </div>
+              </li>
+            </ul>
+            <div class="flex justify-end gap-4 text-xs px-6 py-3 text-gray-500 border-t">
+              <a href="#" class="hover:underline">Support</a>
+              <a href="#" class="hover:underline">Privacy</a>
+            </div>
+          </section>
+
+          <!-- Medical History -->
+          <section class="bg-white border rounded-lg">
+            <div class="px-6 py-4 border-b">
+              <h3 class="font-medium">Medical History</h3>
+            </div>
+            <div class="p-6 text-sm space-y-4">
+              <div>
+                <p class="font-medium mb-1">Chronic Conditions</p>
+                <div class="flex flex-wrap gap-1">
+                  <span class="bg-gray-100 text-gray-700 text-xs px-2 py-0.5 rounded">Hypertension</span>
+                  <span class="bg-gray-100 text-gray-700 text-xs px-2 py-0.5 rounded">Type 2 Diabetes</span>
+                </div>
+              </div>
+              <div>
+                <p class="font-medium mb-1">Previous Surgeries</p>
+                <p class="text-gray-600">Appendectomy (2018)</p>
+              </div>
+              <div>
+                <p class="font-medium mb-1">Family History</p>
+                <p class="text-gray-600">Father: Hypertension, Mother: Osteoporosis</p>
+              </div>
+            </div>
+          </section>
+        </div>
+      </div>
+    </div>
+  </main>
+
+  <script src="https://unpkg.com/lucide@latest"></script>
+  <script>
+    lucide.createIcons();
+
+    const drawer = document.getElementById('drawer');
+    const openNav = document.getElementById('openNav');
+    const backdrop = document.getElementById('backdrop');
+
+    openNav.addEventListener('click', () => drawer.classList.remove('hidden'));
+    backdrop.addEventListener('click', () => drawer.classList.add('hidden'));
+  </script>
+</body>
+</html>
diff --git a/assets/html/5.1 Indivdual Patient view.html b/assets/html/5.1 Indivdual Patient view.html
new file mode 100644
index 0000000..49b703f
--- /dev/null
+++ b/assets/html/5.1 Indivdual Patient view.html	
@@ -0,0 +1,255 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width, initial-scale=1.0">
+  <title>ClinicPro – Patient Profile</title>
+  <link href="https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/3.4.4/tailwind.min.css" rel="stylesheet" />
+  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
+  <style>
+    body { font-family: 'Inter', sans-serif; }
+  </style>
+</head>
+<body class="flex bg-gray-100 text-gray-900">
+  <!-- Sidebar -->
+  <aside class="hidden md:flex flex-col w-64 min-h-screen bg-white border-r">
+    <div class="flex items-center gap-2 px-6 py-4">
+      <i data-lucide="activity" class="w-5 h-5 text-indigo-600"></i>
+      <span class="font-semibold text-lg">ClinicPro</span>
+    </div>
+    <nav class="flex-1 px-2 space-y-1">
+      <a href="#" class="flex items-center gap-3 px-4 py-2 rounded-lg text-sm hover:bg-gray-50">
+        <i data-lucide="home" class="w-5 h-5"></i> Home
+      </a>
+      <a href="#" class="flex items-center gap-3 px-4 py-2 rounded-lg text-sm hover:bg-gray-50">
+        <i data-lucide="calendar" class="w-5 h-5"></i> Appointments
+      </a>
+      <a href="#" class="flex items-center gap-3 px-4 py-2 rounded-lg bg-gray-100 text-sm font-medium">
+        <i data-lucide="users" class="w-5 h-5"></i> Patients
+      </a>
+      <a href="#" class="flex items-center gap-3 px-4 py-2 rounded-lg text-sm hover:bg-gray-50">
+        <i data-lucide="file-text" class="w-5 h-5"></i> Prescriptions
+      </a>
+      <a href="#" class="flex items-center gap-3 px-4 py-2 rounded-lg text-sm hover:bg-gray-50">
+        <i data-lucide="flask-conical" class="w-5 h-5"></i> Lab Orders
+      </a>
+      <a href="#" class="flex items-center gap-3 px-4 py-2 rounded-lg text-sm hover:bg-gray-50">
+        <i data-lucide="credit-card" class="w-5 h-5"></i> Billing
+      </a>
+      <a href="#" class="flex items-center gap-3 px-4 py-2 rounded-lg text-sm hover:bg-gray-50">
+        <i data-lucide="settings" class="w-5 h-5"></i> Settings
+      </a>
+    </nav>
+    <div class="px-6 py-4 text-xs text-gray-500">
+      © 2025 ClinicPro. All rights reserved.
+    </div>
+  </aside>
+
+  <!-- Main content -->
+  <main class="flex-1 md:ml-64 p-6">
+    <!-- Header -->
+    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-6">
+      <h1 class="text-xl font-semibold">Patient Profile</h1>
+      <div class="flex items-center gap-3">
+        <button class="flex items-center gap-2 px-3 py-2 text-sm border rounded-lg hover:bg-gray-50">
+          <i data-lucide="edit-3" class="w-4 h-4"></i> Edit
+        </button>
+        <button class="flex items-center gap-2 px-3 py-2 text-sm text-white bg-indigo-600 rounded-lg hover:bg-indigo-500">
+          <i data-lucide="calendar-plus" class="w-4 h-4"></i> Book Appointment
+        </button>
+      </div>
+    </div>
+
+    <!-- Grid -->
+    <div class="grid lg:grid-cols-3 gap-6">
+      <!-- Patient card -->
+      <section class="bg-white rounded-xl border p-6 space-y-4">
+        <div class="flex flex-col items-center text-center">
+          <div class="w-20 h-20 flex items-center justify-center rounded-full bg-gray-100 mb-2">
+            <i data-lucide="user" class="w-10 h-10 text-gray-500"></i>
+          </div>
+          <h2 class="text-lg font-medium">Sarah Johnson</h2>
+          <p class="text-xs text-gray-500">ID: P-2025-001</p>
+          <span class="mt-1 inline-block bg-green-100 text-green-600 text-xs px-2 py-0.5 rounded">Active Patient</span>
+        </div>
+
+        <div class="text-sm space-y-4">
+          <div>
+            <h3 class="font-medium mb-1">Email</h3>
+            <p class="text-gray-600">sarahj@email.com</p>
+          </div>
+          <div>
+            <h3 class="font-medium mb-1">Phone</h3>
+            <p class="text-gray-600">(1) 555-123-4567</p>
+          </div>
+          <div>
+            <h3 class="font-medium mb-1">Date of Birth</h3>
+            <p class="text-gray-600">March 15, 1991 (34 years)</p>
+          </div>
+          <div>
+            <h3 class="font-medium mb-1">Address</h3>
+            <p class="text-gray-600">123 Main St, Anytown, ST 12345</p>
+          </div>
+          <div>
+            <h3 class="font-medium mb-1">Emergency Contact</h3>
+            <p class="text-gray-600">John Johnson<br>(1) 555-123-4568</p>
+          </div>
+          <div>
+            <h3 class="font-medium mb-1">Allergies</h3>
+            <div class="flex flex-wrap gap-2">
+              <span class="bg-red-100 text-red-600 text-xs px-2 py-0.5 rounded">Penicillin</span>
+              <span class="bg-red-100 text-red-600 text-xs px-2 py-0.5 rounded">Shellfish</span>
+            </div>
+          </div>
+          <div>
+            <h3 class="font-medium mb-1">Insurance</h3>
+            <p class="text-gray-600">Blue Cross Blue Shield<br>Policy: BC123456789</p>
+          </div>
+        </div>
+      </section>
+
+      <!-- Right column cards -->
+      <div class="lg:col-span-2 space-y-6">
+        <!-- Recent Appointments -->
+        <section class="bg-white rounded-xl border">
+          <header class="flex items-center justify-between px-6 py-4 border-b">
+            <h3 class="font-medium">Recent Appointments</h3>
+            <a href="#" class="text-sm text-indigo-600 hover:underline">View All</a>
+          </header>
+          <ul class="divide-y">
+            <li class="px-6 py-4 flex items-center justify-between hover:bg-gray-50">
+              <div>
+                <p class="font-medium">Annual Checkup</p>
+                <p class="text-xs text-gray-500">Jan 15, 2025 at 10:00 AM</p>
+              </div>
+              <span class="inline-flex items-center gap-1 text-xs text-gray-600">
+                Completed
+                <i data-lucide="check-circle" class="w-4 h-4 text-green-600"></i>
+              </span>
+            </li>
+            <li class="px-6 py-4 flex items-center justify-between hover:bg-gray-50">
+              <div>
+                <p class="font-medium">Follow-up Visit</p>
+                <p class="text-xs text-gray-500">Dec 20, 2024 at 2:30 PM</p>
+              </div>
+              <span class="inline-flex items-center gap-1 text-xs text-gray-600">
+                Completed
+                <i data-lucide="check-circle" class="w-4 h-4 text-green-600"></i>
+              </span>
+            </li>
+            <li class="px-6 py-4 flex items-center justify-between hover:bg-gray-50">
+              <div>
+                <p class="font-medium">Consultation</p>
+                <p class="text-xs text-gray-500">Jan 25, 2025 at 3:00 PM</p>
+              </div>
+              <span class="inline-flex items-center gap-1 text-xs text-gray-600">
+                Scheduled
+                <i data-lucide="clock" class="w-4 h-4 text-yellow-600"></i>
+              </span>
+            </li>
+          </ul>
+        </section>
+
+        <!-- Prescriptions -->
+        <section class="bg-white rounded-xl border">
+          <header class="flex items-center justify-between px-6 py-4 border-b">
+            <h3 class="font-medium">Prescriptions</h3>
+            <button class="flex items-center gap-1 text-sm text-indigo-600 hover:underline">
+              <i data-lucide="plus" class="w-4 h-4"></i> New Prescription
+            </button>
+          </header>
+          <ul class="divide-y">
+            <li class="px-6 py-4 flex items-start justify-between hover:bg-gray-50">
+              <div>
+                <p class="font-medium">Amoxicillin 500mg</p>
+                <p class="text-xs text-gray-500">Take 3 times daily for 7 days</p>
+                <p class="text-xs text-gray-500">Prescribed: Jan 15, 2025</p>
+              </div>
+              <span class="flex flex-col items-end gap-1">
+                <span class="inline-block bg-green-100 text-green-600 text-xs px-2 py-0.5 rounded">Active</span>
+                <button class="text-gray-400 hover:text-gray-600">
+                  <i data-lucide="download" class="w-4 h-4"></i>
+                </button>
+              </span>
+            </li>
+            <li class="px-6 py-4 flex items-start justify-between hover:bg-gray-50">
+              <div>
+                <p class="font-medium">Ibuprofen 400mg</p>
+                <p class="text-xs text-gray-500">As needed for pain, max 3 per day</p>
+                <p class="text-xs text-gray-500">Prescribed: Dec 20, 2024</p>
+              </div>
+              <span class="flex flex-col items-end gap-1">
+                <span class="inline-block bg-gray-100 text-gray-600 text-xs px-2 py-0.5 rounded">Completed</span>
+                <button class="text-gray-400 hover:text-gray-600">
+                  <i data-lucide="download" class="w-4 h-4"></i>
+                </button>
+              </span>
+            </li>
+          </ul>
+        </section>
+
+        <!-- Lab Orders -->
+        <section class="bg-white rounded-xl border">
+          <header class="flex items-center justify-between px-6 py-4 border-b">
+            <h3 class="font-medium">Lab Orders</h3>
+            <button class="flex items-center gap-1 text-sm text-indigo-600 hover:underline">
+              <i data-lucide="plus" class="w-4 h-4"></i> New Lab Order
+            </button>
+          </header>
+          <ul class="divide-y">
+            <li class="px-6 py-4 flex items-start justify-between hover:bg-gray-50">
+              <div>
+                <p class="font-medium">Complete Blood Count (CBC)</p>
+                <p class="text-xs text-gray-500">Ordered: Jan 15, 2025</p>
+                <p class="text-xs text-gray-500">Lab: Quest Diagnostics</p>
+              </div>
+              <span class="inline-block bg-yellow-100 text-yellow-600 text-xs px-2 py-0.5 rounded">Pending</span>
+            </li>
+            <li class="px-6 py-4 flex items-start justify-between hover:bg-gray-50">
+              <div>
+                <p class="font-medium">Lipid Panel</p>
+                <p class="text-xs text-gray-500">Ordered: Dec 20, 2024</p>
+                <p class="text-xs text-gray-500">Lab: LabCorp</p>
+              </div>
+              <span class="inline-block bg-gray-100 text-gray-600 text-xs px-2 py-0.5 rounded">Completed</span>
+            </li>
+          </ul>
+          <footer class="flex items-center justify-end gap-4 px-6 py-3 text-xs text-gray-500">
+            <a href="#" class="hover:underline">Support</a> ·
+            <a href="#" class="hover:underline">Privacy</a>
+          </footer>
+        </section>
+
+        <!-- Medical History -->
+        <section class="bg-white rounded-xl border">
+          <header class="flex items-center justify-between px-6 py-4 border-b">
+            <h3 class="font-medium">Medical History</h3>
+          </header>
+          <div class="px-6 py-4 text-sm space-y-4">
+            <div>
+              <h4 class="font-medium mb-1">Chronic Conditions</h4>
+              <div class="flex flex-wrap gap-2">
+                <span class="bg-gray-100 text-gray-600 text-xs px-2 py-0.5 rounded">Hypertension</span>
+                <span class="bg-gray-100 text-gray-600 text-xs px-2 py-0.5 rounded">Type 2 Diabetes</span>
+              </div>
+            </div>
+            <div>
+              <h4 class="font-medium mb-1">Previous Surgeries</h4>
+              <p class="text-gray-600">Appendectomy (2018)</p>
+            </div>
+            <div>
+              <h4 class="font-medium mb-1">Family History</h4>
+              <p class="text-gray-600">Mother: Hypertension</p>
+            </div>
+          </div>
+        </section>
+      </div>
+    </div>
+  </main>
+
+  <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.min.js"></script>
+  <script>
+    lucide.createIcons();
+  </script>
+</body>
+</html>
diff --git a/assets/html/6. Prescriptions.html b/assets/html/6. Prescriptions.html
new file mode 100644
index 0000000..a37c46c
--- /dev/null
+++ b/assets/html/6. Prescriptions.html	
@@ -0,0 +1,339 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width,initial-scale=1.0">
+  <title>ClinicPro – Prescriptions</title>
+  <link rel="preconnect" href="https://rsms.me/">
+  <link href="https://rsms.me/inter/inter.css" rel="stylesheet">
+  <script src="https://cdn.tailwindcss.com?plugins=forms"></script>
+  <script>
+    tailwind.config = { theme: { extend: { fontFamily: { sans: ['Inter', 'ui-sans-serif', 'system-ui'] } } } }
+  </script>
+</head>
+<body class="font-sans antialiased text-gray-900 bg-gray-50">
+  <!-- Mobile top bar -->
+  <header class="md:hidden flex items-center justify-between px-4 h-14 bg-white border-b">
+    <button id="mobile-menu-button" class="p-2 rounded-md hover:bg-gray-100">
+      <i data-lucide="menu" class="w-5 h-5"></i>
+    </button>
+    <div class="flex items-center space-x-2">
+      <i data-lucide="heart-pulse" class="w-5 h-5 text-indigo-600"></i>
+      <span class="font-semibold">ClinicPro</span>
+    </div>
+  </header>
+
+  <div class="flex min-h-screen">
+    <!-- Sidebar -->
+    <aside id="sidebar" class="hidden md:flex flex-col w-64 border-r bg-white">
+      <div class="h-16 flex items-center px-6 border-b">
+        <i data-lucide="heart-pulse" class="w-6 h-6 text-indigo-600"></i>
+        <span class="ml-2 font-semibold text-lg">ClinicPro</span>
+      </div>
+
+      <nav class="flex-1 px-2 py-4 space-y-1">
+        <a href="#" class="group flex items-center px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="home" class="w-5 h-5 mr-3 text-gray-400 group-hover:text-gray-700"></i>
+          Home
+        </a>
+        <a href="#" class="group flex items-center px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="calendar-check" class="w-5 h-5 mr-3 text-gray-400 group-hover:text-gray-700"></i>
+          Appointments
+        </a>
+        <a href="#" class="group flex items-center px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="users" class="w-5 h-5 mr-3 text-gray-400 group-hover:text-gray-700"></i>
+          Patients
+        </a>
+        <a href="#" class="group flex items-center px-3 py-2 rounded-md text-sm font-medium bg-gray-100 text-gray-900">
+          <i data-lucide="pill" class="w-5 h-5 mr-3 text-gray-700"></i>
+          Prescriptions
+        </a>
+        <a href="#" class="group flex items-center px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="flask-conical" class="w-5 h-5 mr-3 text-gray-400 group-hover:text-gray-700"></i>
+          Lab Orders
+        </a>
+        <a href="#" class="group flex items-center px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="credit-card" class="w-5 h-5 mr-3 text-gray-400 group-hover:text-gray-700"></i>
+          Billing
+        </a>
+        <a href="#" class="group flex items-center px-3 py-2 rounded-md text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="settings" class="w-5 h-5 mr-3 text-gray-400 group-hover:text-gray-700"></i>
+          Settings
+        </a>
+      </nav>
+
+      <div class="px-6 py-4 border-t flex items-center space-x-3">
+        <img src="https://i.pravatar.cc/40" alt="Avatar" class="w-8 h-8 rounded-full">
+        <div class="text-sm">
+          <p class="font-medium leading-none">Dr. Kelly Rose</p>
+          <p class="text-gray-500">Physician</p>
+        </div>
+      </div>
+    </aside>
+
+    <!-- Main content -->
+    <main class="flex-1 flex flex-col">
+      <div class="flex items-center justify-between px-6 py-6">
+        <h1 class="text-2xl font-semibold">Prescriptions</h1>
+        <button class="inline-flex items-center bg-indigo-600 text-white text-sm font-medium px-4 py-2 rounded-md shadow-sm hover:bg-indigo-700">
+          <i data-lucide="plus" class="w-4 h-4 mr-2"></i>
+          New Prescription
+        </button>
+      </div>
+
+      <section class="px-6 pb-8">
+        <div class="bg-white border rounded-lg shadow-sm">
+          <!-- Toolbar -->
+          <div class="flex items-center justify-between px-4 py-4 space-x-4">
+            <div class="flex items-center relative flex-1">
+              <i data-lucide="search" class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400"></i>
+              <input type="text" placeholder="Search prescriptions, patient, medication…" class="w-full pl-10 pr-4 py-2 text-sm border rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
+            </div>
+
+            <div class="w-40 relative">
+              <select class="block w-full text-sm pl-3 pr-8 py-2 border rounded-md appearance-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
+                <option>All Status</option>
+                <option>Active</option>
+                <option>Pending</option>
+                <option>Completed</option>
+                <option>Expired</option>
+              </select>
+              <i data-lucide="chevron-down" class="w-4 h-4 absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 pointer-events-none"></i>
+            </div>
+
+            <div class="flex items-center space-x-2">
+              <button class="px-3 py-1.5 text-sm font-medium border rounded-md hover:bg-gray-50">Export</button>
+              <button class="px-3 py-1.5 text-sm font-medium border rounded-md bg-gray-100">Table</button>
+            </div>
+          </div>
+
+          <!-- Table -->
+          <div class="overflow-x-auto">
+            <table class="min-w-full divide-y divide-gray-200 text-sm">
+              <thead class="bg-gray-50">
+                <tr>
+                  <th class="px-6 py-3 text-left font-medium text-gray-500">Patient</th>
+                  <th class="px-6 py-3 text-left font-medium text-gray-500">Medication</th>
+                  <th class="px-6 py-3 text-left font-medium text-gray-500">Dosage</th>
+                  <th class="px-6 py-3 text-left font-medium text-gray-500">Date Issued</th>
+                  <th class="px-6 py-3 text-left font-medium text-gray-500">Status</th>
+                  <th class="px-6 py-3 text-left font-medium text-gray-500">Actions</th>
+                </tr>
+              </thead>
+              <tbody class="divide-y divide-gray-200">
+                <!-- Row -->
+                <tr class="hover:bg-gray-50">
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center space-x-3">
+                      <span class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-100">
+                        <i data-lucide="user" class="w-4 h-4 text-gray-600"></i>
+                      </span>
+                      <div>
+                        <p class="font-medium">Sarah Johnson</p>
+                        <p class="text-gray-500">ID: P-2025-001</p>
+                      </div>
+                    </div>
+                  </td>
+                  <td class="px-6 py-4">
+                    <p class="font-medium">Amoxicillin</p>
+                    <p class="text-gray-500">Antibiotic</p>
+                  </td>
+                  <td class="px-6 py-4">
+                    <p class="font-medium">500mg</p>
+                    <p class="text-gray-500">3× daily, 7 days</p>
+                  </td>
+                  <td class="px-6 py-4">Jan 15, 2025</td>
+                  <td class="px-6 py-4">
+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Active</span>
+                  </td>
+                  <td class="px-6 py-4">
+                    <div class="flex items-center space-x-2">
+                      <button class="px-3 py-1.5 text-xs font-medium border rounded-md hover:bg-gray-50">View Details</button>
+                      <button class="p-2 rounded-md hover:bg-gray-100">
+                        <i data-lucide="more-vertical" class="w-4 h-4 text-gray-500"></i>
+                      </button>
+                    </div>
+                  </td>
+                </tr>
+                <!-- Row -->
+                <tr class="hover:bg-gray-50">
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center space-x-3">
+                      <span class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-100">
+                        <i data-lucide="user" class="w-4 h-4 text-gray-600"></i>
+                      </span>
+                      <div>
+                        <p class="font-medium">Michael Chen</p>
+                        <p class="text-gray-500">ID: P-2025-002</p>
+                      </div>
+                    </div>
+                  </td>
+                  <td class="px-6 py-4">
+                    <p class="font-medium">Lisinopril</p>
+                    <p class="text-gray-500">ACE Inhibitor</p>
+                  </td>
+                  <td class="px-6 py-4">
+                    <p class="font-medium">10mg</p>
+                    <p class="text-gray-500">1× daily, 30 days</p>
+                  </td>
+                  <td class="px-6 py-4">Jan 10, 2025</td>
+                  <td class="px-6 py-4">
+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Active</span>
+                  </td>
+                  <td class="px-6 py-4">
+                    <div class="flex items-center space-x-2">
+                      <button class="px-3 py-1.5 text-xs font-medium border rounded-md hover:bg-gray-50">View Details</button>
+                      <button class="p-2 rounded-md hover:bg-gray-100">
+                        <i data-lucide="more-vertical" class="w-4 h-4 text-gray-500"></i>
+                      </button>
+                    </div>
+                  </td>
+                </tr>
+                <!-- Row -->
+                <tr class="hover:bg-gray-50">
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center space-x-3">
+                      <span class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-100">
+                        <i data-lucide="user" class="w-4 h-4 text-gray-600"></i>
+                      </span>
+                      <div>
+                        <p class="font-medium">Emily Davis</p>
+                        <p class="text-gray-500">ID: P-2025-003</p>
+                      </div>
+                    </div>
+                  </td>
+                  <td class="px-6 py-4">
+                    <p class="font-medium">Ibuprofen</p>
+                    <p class="text-gray-500">NSAID</p>
+                  </td>
+                  <td class="px-6 py-4">
+                    <p class="font-medium">400mg</p>
+                    <p class="text-gray-500">As needed, 5 days</p>
+                  </td>
+                  <td class="px-6 py-4">Dec 20, 2024</td>
+                  <td class="px-6 py-4">
+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-200 text-gray-700">Completed</span>
+                  </td>
+                  <td class="px-6 py-4">
+                    <div class="flex items-center space-x-2">
+                      <button class="px-3 py-1.5 text-xs font-medium border rounded-md hover:bg-gray-50">View Details</button>
+                      <button class="p-2 rounded-md hover:bg-gray-100">
+                        <i data-lucide="more-vertical" class="w-4 h-4 text-gray-500"></i>
+                      </button>
+                    </div>
+                  </td>
+                </tr>
+                <!-- Row -->
+                <tr class="hover:bg-gray-50">
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center space-x-3">
+                      <span class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-100">
+                        <i data-lucide="user" class="w-4 h-4 text-gray-600"></i>
+                      </span>
+                      <div>
+                        <p class="font-medium">Robert Wilson</p>
+                        <p class="text-gray-500">ID: P-2025-004</p>
+                      </div>
+                    </div>
+                  </td>
+                  <td class="px-6 py-4">
+                    <p class="font-medium">Metformin</p>
+                    <p class="text-gray-500">Antidiabetic</p>
+                  </td>
+                  <td class="px-6 py-4">
+                    <p class="font-medium">500mg</p>
+                    <p class="text-gray-500">2× daily, 30 days</p>
+                  </td>
+                  <td class="px-6 py-4">Jan 16, 2025</td>
+                  <td class="px-6 py-4">
+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">Pending</span>
+                  </td>
+                  <td class="px-6 py-4">
+                    <div class="flex items-center space-x-2">
+                      <button class="px-3 py-1.5 text-xs font-medium border rounded-md hover:bg-gray-50">View Details</button>
+                      <button class="p-2 rounded-md hover:bg-gray-100">
+                        <i data-lucide="more-vertical" class="w-4 h-4 text-gray-500"></i>
+                      </button>
+                    </div>
+                  </td>
+                </tr>
+                <!-- Row -->
+                <tr class="hover:bg-gray-50">
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <div class="flex items-center space-x-3">
+                      <span class="inline-flex items-center justify-center w-8 h-8 rounded-full bg-gray-100">
+                        <i data-lucide="user" class="w-4 h-4 text-gray-600"></i>
+                      </span>
+                      <div>
+                        <p class="font-medium">Lisa Thompson</p>
+                        <p class="text-gray-500">ID: P-2025-005</p>
+                      </div>
+                    </div>
+                  </td>
+                  <td class="px-6 py-4">
+                    <p class="font-medium">Azithromycin</p>
+                    <p class="text-gray-500">Antibiotic</p>
+                  </td>
+                  <td class="px-6 py-4">
+                    <p class="font-medium">250mg</p>
+                    <p class="text-gray-500">1× daily, 5 days</p>
+                  </td>
+                  <td class="px-6 py-4">Jan 12, 2025</td>
+                  <td class="px-6 py-4">
+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">Expired</span>
+                  </td>
+                  <td class="px-6 py-4">
+                    <div class="flex items-center space-x-2">
+                      <button class="px-3 py-1.5 text-xs font-medium border rounded-md hover:bg-gray-50">View Details</button>
+                      <button class="p-2 rounded-md hover:bg-gray-100">
+                        <i data-lucide="more-vertical" class="w-4 h-4 text-gray-500"></i>
+                      </button>
+                    </div>
+                  </td>
+                </tr>
+              </tbody>
+            </table>
+          </div>
+
+          <!-- Footer -->
+          <div class="flex items-center justify-between px-4 py-4 border-t text-sm text-gray-600">
+            <p>Showing 5 of 32 prescriptions</p>
+            <nav class="inline-flex items-center space-x-1">
+              <button class="px-3 py-1.5 border rounded-md text-gray-500 hover:bg-gray-50">Previous</button>
+              <button class="px-3 py-1.5 border rounded-md bg-indigo-600 text-white">1</button>
+              <button class="px-3 py-1.5 border rounded-md hover:bg-gray-50">2</button>
+              <button class="px-3 py-1.5 border rounded-md hover:bg-gray-50">3</button>
+              <button class="px-3 py-1.5 border rounded-md hover:bg-gray-50">Next</button>
+            </nav>
+          </div>
+        </div>
+      </section>
+
+      <footer class="px-6 py-4 border-t text-sm text-gray-500 flex items-center justify-between">
+        <p>© 2025 ClinicPro. All rights reserved.</p>
+        <nav class="flex space-x-4">
+          <a href="#" class="hover:text-gray-700">Support</a>
+          <a href="#" class="hover:text-gray-700">Privacy</a>
+        </nav>
+      </footer>
+    </main>
+  </div>
+
+  <script src="https://cdn.jsdelivr.net/npm/lucide@latest/dist/umd/lucide.min.js"></script>
+  <script>
+    lucide.createIcons();
+
+    // Mobile sidebar toggle
+    const mobileMenuButton = document.getElementById('mobile-menu-button');
+    const sidebar = document.getElementById('sidebar');
+
+    mobileMenuButton?.addEventListener('click', () => {
+      sidebar.classList.toggle('hidden');
+      sidebar.classList.toggle('fixed');
+      sidebar.classList.toggle('inset-y-0');
+      sidebar.classList.toggle('z-50');
+      sidebar.classList.toggle('animate-slide');
+    });
+  </script>
+</body>
+</html>
\ No newline at end of file
diff --git a/assets/html/6.1 New Prescriptions.html b/assets/html/6.1 New Prescriptions.html
new file mode 100644
index 0000000..6770420
--- /dev/null
+++ b/assets/html/6.1 New Prescriptions.html	
@@ -0,0 +1,234 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+  <meta charset="UTF-8">
+  <title>New Prescription</title>
+  <meta name="viewport" content="width=device-width, initial-scale=1.0">
+  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
+  <script src="https://cdn.tailwindcss.com"></script>
+  <script>
+    tailwind.config = { theme: { extend: { fontFamily: { sans: ['Inter', 'sans-serif'] } } } }
+  </script>
+  <script src="https://cdn.jsdelivr.net/npm/lucide@latest"></script>
+</head>
+<body class="font-sans bg-slate-100 text-slate-800">
+  <!-- Navigation -->
+  <aside class="hidden md:flex flex-col w-64 bg-white border-r border-slate-200 h-screen fixed inset-y-0">
+    <div class="flex items-center gap-2 px-6 h-16 border-b border-slate-200">
+      <div class="w-8 h-8 rounded-md bg-slate-900 flex items-center justify-center text-white text-sm font-semibold">CJ</div>
+      <span class="font-semibold">ClinicPro</span>
+    </div>
+    <nav class="flex-1 overflow-y-auto px-2 py-4">
+      <ul class="space-y-1 text-sm">
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-slate-50"><i data-lucide="home" class="w-4 h-4"></i>Home</a></li>
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-slate-50"><i data-lucide="calendar" class="w-4 h-4"></i>Appointments</a></li>
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-slate-50"><i data-lucide="users" class="w-4 h-4"></i>Patients</a></li>
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md bg-slate-100 text-slate-900 font-medium"><i data-lucide="pill" class="w-4 h-4"></i>Prescriptions</a></li>
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-slate-50"><i data-lucide="flask-conical" class="w-4 h-4"></i>Lab Orders</a></li>
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-slate-50"><i data-lucide="credit-card" class="w-4 h-4"></i>Billing</a></li>
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-slate-50"><i data-lucide="settings" class="w-4 h-4"></i>Settings</a></li>
+      </ul>
+    </nav>
+  </aside>
+
+  <!-- Main content overlay -->
+  <div class="md:pl-64">
+    <div class="flex items-start justify-center min-h-screen p-4">
+      <button id="openModal" class="inline-flex items-center gap-2 px-4 py-2 bg-slate-900 text-white rounded-md text-sm hover:bg-slate-800">
+        <i data-lucide="plus" class="w-4 h-4"></i>
+        New Prescription
+      </button>
+    </div>
+  </div>
+
+  <!-- Modal -->
+  <div id="modal" class="fixed inset-0 z-50 hidden">
+    <div class="absolute inset-0 bg-slate-900/60 backdrop-blur-sm"></div>
+    <div class="relative z-10 flex items-start justify-center p-4">
+      <div class="bg-white rounded-xl shadow-2xl w-full max-w-5xl mx-auto overflow-hidden">
+        <!-- Header -->
+        <div class="flex items-center justify-between px-6 py-4 border-b border-slate-200">
+          <h2 class="text-lg font-semibold">New Prescription</h2>
+          <button id="closeModal" class="text-slate-500 hover:text-slate-700"><i data-lucide="x" class="w-5 h-5"></i></button>
+        </div>
+
+        <!-- Body -->
+        <div class="grid md:grid-cols-2 gap-6 px-6 py-6 overflow-y-auto max-h-[80vh]">
+          <!-- Left column -->
+          <div class="space-y-6">
+            <!-- Patient Selection -->
+            <div>
+              <label class="text-sm font-medium text-slate-700 block mb-2">Patient Selection</label>
+              <div class="relative">
+                <span class="absolute inset-y-0 left-0 flex items-center pl-3 text-slate-400"><i data-lucide="search" class="w-4 h-4"></i></span>
+                <input type="text" placeholder="Search patient by name or ID..." class="w-full rounded-md border border-slate-300 bg-white py-2 pl-10 pr-3 text-sm placeholder-slate-400 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500">
+              </div>
+              <!-- Patient card -->
+              <div class="flex items-center gap-3 mt-3 p-3 border border-slate-200 rounded-md">
+                <img src="https://i.pravatar.cc/80?img=5" alt="" class="w-10 h-10 rounded-full object-cover">
+                <div class="text-sm">
+                  <p class="font-medium">Sarah Johnson</p>
+                  <p class="text-slate-500">ID: P-2025-001 • Age: 34 • Last visit: Jan 15, 2025</p>
+                </div>
+              </div>
+            </div>
+
+            <!-- Medication -->
+            <div>
+              <label class="text-sm font-medium text-slate-700 block mb-2">Medication</label>
+              <div class="relative">
+                <span class="absolute inset-y-0 left-0 flex items-center pl-3 text-slate-400"><i data-lucide="pill" class="w-4 h-4"></i></span>
+                <input type="text" placeholder="Type medication name..." class="w-full rounded-md border border-slate-300 bg-white py-2 pl-10 pr-3 text-sm placeholder-slate-400 focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500">
+              </div>
+              <div class="mt-3 space-y-1 text-sm">
+                <p><span class="font-medium">Amoxicillin</span> • Antibiotic • Common for infections</p>
+                <p><span class="font-medium">Azithromycin</span> • Antibiotic • Z-pack</p>
+              </div>
+            </div>
+
+            <!-- Strength & Form -->
+            <div class="grid grid-cols-2 gap-4">
+              <div>
+                <label class="text-sm font-medium text-slate-700 block mb-2">Strength</label>
+                <div class="relative">
+                  <select class="w-full appearance-none rounded-md border border-slate-300 bg-white py-2 pl-3 pr-8 text-sm focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500">
+                    <option>250mg</option>
+                    <option>500mg</option>
+                    <option>750mg</option>
+                  </select>
+                  <span class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none text-slate-400"><i data-lucide="chevron-down" class="w-4 h-4"></i></span>
+                </div>
+              </div>
+              <div>
+                <label class="text-sm font-medium text-slate-700 block mb-2">Form</label>
+                <div class="relative">
+                  <select class="w-full appearance-none rounded-md border border-slate-300 bg-white py-2 pl-3 pr-8 text-sm focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500">
+                    <option>Tablet</option>
+                    <option>Capsule</option>
+                    <option>Liquid</option>
+                  </select>
+                  <span class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none text-slate-400"><i data-lucide="chevron-down" class="w-4 h-4"></i></span>
+                </div>
+              </div>
+            </div>
+
+            <!-- Frequency, Duration, Quantity -->
+            <div class="grid grid-cols-3 gap-4">
+              <div>
+                <label class="text-sm font-medium text-slate-700 block mb-2">Frequency</label>
+                <div class="relative">
+                  <select class="w-full appearance-none rounded-md border border-slate-300 bg-white py-2 pl-3 pr-8 text-sm focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500">
+                    <option>Once daily</option>
+                    <option>Twice daily</option>
+                    <option>Three times</option>
+                  </select>
+                  <span class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none text-slate-400"><i data-lucide="chevron-down" class="w-4 h-4"></i></span>
+                </div>
+              </div>
+              <div>
+                <label class="text-sm font-medium text-slate-700 block mb-2">Duration</label>
+                <div class="relative">
+                  <select class="w-full appearance-none rounded-md border border-slate-300 bg-white py-2 pl-3 pr-8 text-sm focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500">
+                    <option>3 days</option>
+                    <option>5 days</option>
+                    <option>7 days</option>
+                    <option>14 days</option>
+                  </select>
+                  <span class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none text-slate-400"><i data-lucide="chevron-down" class="w-4 h-4"></i></span>
+                </div>
+              </div>
+              <div>
+                <label class="text-sm font-medium text-slate-700 block mb-2">Quantity</label>
+                <input type="number" value="21" class="w-full rounded-md border border-slate-300 bg-white py-2 px-3 text-sm focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500">
+              </div>
+            </div>
+
+            <!-- Instructions -->
+            <div>
+              <label class="text-sm font-medium text-slate-700 block mb-2">Instructions</label>
+              <textarea rows="4" class="w-full rounded-md border border-slate-300 bg-white p-3 text-sm focus:border-indigo-500 focus:ring-2 focus:ring-indigo-500" placeholder="Take with food. Complete full course even if symptoms improve."></textarea>
+            </div>
+          </div>
+
+          <!-- Right column -->
+          <div class="space-y-6">
+            <!-- Drug Interaction Alert -->
+            <div class="flex items-start gap-3 p-4 border border-amber-300 bg-amber-50 rounded-md">
+              <i data-lucide="alert-triangle" class="w-5 h-5 text-amber-500 mt-0.5"></i>
+              <div class="text-sm">
+                <p class="font-medium">Drug Interaction Alert</p>
+                <p>Patient is currently taking Warfarin. Monitor for increased bleeding risk.</p>
+              </div>
+            </div>
+
+            <!-- Allergies -->
+            <div class="p-4 border border-slate-200 rounded-md">
+              <p class="text-sm font-medium mb-2">Patient Allergies</p>
+              <ul class="space-y-1 pl-4 list-disc text-sm text-slate-700">
+                <li>Penicillin - Severe rash</li>
+                <li>Sulfa drugs - Mild reaction</li>
+              </ul>
+            </div>
+
+            <!-- Current Medications -->
+            <div class="p-4 border border-slate-200 rounded-md">
+              <p class="text-sm font-medium mb-2">Current Medications</p>
+              <ul class="space-y-1 pl-4 list-disc text-sm text-slate-700">
+                <li>Lisinopril 10mg - Daily</li>
+                <li>Metformin 500mg - Twice daily</li>
+                <li>Warfarin 5mg - Daily</li>
+              </ul>
+            </div>
+
+            <!-- Prescription Templates -->
+            <div class="space-y-3">
+              <p class="text-sm font-medium">Prescription Templates</p>
+              <button class="w-full flex justify-between items-center px-4 py-3 border border-slate-200 rounded-md hover:bg-slate-50 text-sm">
+                Standard UTI Treatment
+                <span class="text-slate-500">Nitrofurantoin 100mg, twice daily, 5 days</span>
+              </button>
+              <button class="w-full flex justify-between items-center px-4 py-3 border border-slate-200 rounded-md hover:bg-slate-50 text-sm">
+                Hypertension Management
+                <span class="text-slate-500">Lisinopril 10mg, once daily, 30 days</span>
+              </button>
+            </div>
+
+            <!-- AI Suggestion -->
+            <div class="flex items-start gap-3 p-4 border border-indigo-300 bg-indigo-50 rounded-md">
+              <i data-lucide="sparkles" class="w-5 h-5 text-indigo-500 mt-0.5"></i>
+              <div class="text-sm">
+                <p class="font-medium">AI Suggestion</p>
+                <p>Based on symptoms, consider adding probiotics to prevent antibiotic-associated diarrhea.</p>
+              </div>
+            </div>
+          </div>
+        </div>
+
+        <!-- Footer -->
+        <div class="flex items-center justify-end gap-3 px-6 py-4 border-t border-slate-200">
+          <button id="cancelBtn" class="px-4 py-2 text-sm rounded-md text-slate-700 hover:bg-slate-50">Cancel</button>
+          <button class="inline-flex items-center gap-2 px-5 py-2 bg-indigo-600 text-white text-sm font-medium rounded-md hover:bg-indigo-500">
+            <i data-lucide="save" class="w-4 h-4"></i>
+            Save Prescription
+          </button>
+        </div>
+      </div>
+    </div>
+  </div>
+
+  <script>
+    const modal     = document.getElementById('modal');
+    const openModal = document.getElementById('openModal');
+    const closeModal= document.getElementById('closeModal');
+    const cancelBtn = document.getElementById('cancelBtn');
+
+    const toggleModal = () => modal.classList.toggle('hidden');
+
+    openModal.addEventListener('click', toggleModal);
+    closeModal.addEventListener('click', toggleModal);
+    cancelBtn.addEventListener('click', toggleModal);
+
+    lucide.createIcons();
+  </script>
+</body>
+</html>
\ No newline at end of file
diff --git a/assets/html/7. Lab Orders(1).html b/assets/html/7. Lab Orders(1).html
new file mode 100644
index 0000000..11a7fd1
--- /dev/null
+++ b/assets/html/7. Lab Orders(1).html	
@@ -0,0 +1,372 @@
+<!DOCTYPE html>
+<html lang="en" class="h-full">
+<head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <title>Lab Orders – ClinicPro</title>
+  <script src="https://cdn.tailwindcss.com?plugins=typography"></script>
+  <script src="https://unpkg.com/lucide@latest"></script>
+  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
+  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
+  <style>
+    body{font-family:'Inter',ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,'Helvetica Neue',Arial,'Noto Sans',sans-serif}
+    ::-webkit-scrollbar{width:6px;height:6px}
+    ::-webkit-scrollbar-thumb{background:#c4c4c4;border-radius:3px}
+  </style>
+</head>
+<body class="h-full bg-gray-50 text-gray-800">
+  <div class="flex h-full">
+    <!-- Sidebar -->
+    <aside id="sidebar" class="z-30 flex flex-col w-64 shrink-0 border-r bg-white">
+      <div class="flex items-center gap-2 h-16 px-6 border-b">
+        <button id="sidebarClose" class="lg:hidden text-gray-600">
+          <i data-lucide="x" class="w-5 h-5"></i>
+        </button>
+        <i data-lucide="shield-medical" class="w-6 h-6 text-indigo-600"></i>
+        <span class="font-semibold text-lg tracking-tight">ClinicPro</span>
+      </div>
+      <div class="flex-1 overflow-y-auto py-4">
+        <nav class="space-y-1 px-4">
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-gray-600 hover:bg-gray-100">
+            <i data-lucide="home" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Home</span>
+          </a>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-gray-600 hover:bg-gray-100">
+            <i data-lucide="calendar" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Appointments</span>
+          </a>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-gray-600 hover:bg-gray-100">
+            <i data-lucide="users" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Patients</span>
+          </a>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-gray-600 hover:bg-gray-100">
+            <i data-lucide="clipboard" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Prescriptions</span>
+          </a>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md bg-indigo-50 text-indigo-700">
+            <i data-lucide="flask-conical" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Lab Orders</span>
+          </a>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-gray-600 hover:bg-gray-100">
+            <i data-lucide="credit-card" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Billing</span>
+          </a>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-gray-600 hover:bg-gray-100">
+            <i data-lucide="settings" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Settings</span>
+          </a>
+        </nav>
+      </div>
+      <div class="flex items-center gap-3 h-16 px-6 border-t">
+        <img src="https://api.dicebear.com/7.x/personas/svg?seed=user" alt="" class="w-8 h-8 rounded-full">
+        <div class="min-w-0">
+          <p class="text-sm font-medium truncate">Dr. Taylor</p>
+          <p class="text-xs text-gray-500 truncate">Administrator</p>
+        </div>
+      </div>
+    </aside>
+
+    <!-- Main -->
+    <div class="flex-1 flex flex-col overflow-y-auto">
+      <!-- Topbar -->
+      <header class="flex items-center justify-between h-16 px-4 sm:px-6 lg:px-8 border-b bg-white">
+        <div class="flex items-center gap-3 lg:hidden">
+          <button id="sidebarOpen" class="text-gray-600">
+            <i data-lucide="menu" class="w-6 h-6"></i>
+          </button>
+          <span class="font-semibold">Lab Orders</span>
+        </div>
+        <button class="hidden lg:inline-flex items-center gap-2 bg-indigo-600 hover:bg-indigo-700 text-white text-sm font-medium px-4 py-2 rounded-md shadow-sm">
+          <i data-lucide="plus" class="w-4 h-4"></i>
+          New Lab Order
+        </button>
+      </header>
+
+      <!-- Content -->
+      <main class="flex-1 p-4 sm:p-6 lg:p-8">
+        <div class="max-w-full mx-auto space-y-6">
+          <!-- Heading & primary actions for mobile -->
+          <div class="flex items-center justify-between lg:hidden">
+            <h1 class="text-lg font-semibold">Lab Orders</h1>
+            <button class="inline-flex items-center gap-2 bg-indigo-600 hover:bg-indigo-700 text-white text-sm font-medium px-4 py-2 rounded-md shadow-sm">
+              <i data-lucide="plus" class="w-4 h-4"></i>
+              New Lab Order
+            </button>
+          </div>
+
+          <!-- Card -->
+          <section class="bg-white border rounded-lg shadow-sm">
+            <div class="p-4 sm:p-6 flex flex-col gap-4">
+              <!-- Filters -->
+              <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3">
+                <div class="flex flex-1 gap-3">
+                  <div class="relative flex-1">
+                    <span class="absolute inset-y-0 left-0 flex items-center pl-3 text-gray-400">
+                      <i data-lucide="search" class="w-4 h-4"></i>
+                    </span>
+                    <input type="text" placeholder="Search lab orders, patient, test type..."
+                      class="w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md text-sm placeholder-gray-400 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
+                  </div>
+                  <select class="w-40 border-gray-300 text-sm rounded-md py-2 pl-3 pr-8 focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
+                    <option>All Status</option>
+                    <option>Pending</option>
+                    <option>In Progress</option>
+                    <option>Completed</option>
+                    <option>Urgent</option>
+                  </select>
+                </div>
+                <div class="flex gap-2">
+                  <button class="inline-flex items-center gap-1 bg-gray-100 hover:bg-gray-200 text-gray-700 text-sm font-medium px-3 py-2 rounded-md">
+                    <i data-lucide="download" class="w-4 h-4"></i>
+                    Export
+                  </button>
+                  <button class="inline-flex items-center gap-1 bg-gray-700 hover:bg-gray-800 text-white text-sm font-medium px-3 py-2 rounded-md">
+                    <i data-lucide="table" class="w-4 h-4"></i>
+                    Table
+                  </button>
+                </div>
+              </div>
+
+              <!-- Table -->
+              <div class="overflow-x-auto">
+                <table class="min-w-full whitespace-nowrap text-sm">
+                  <thead>
+                    <tr class="text-left text-gray-600 border-b">
+                      <th class="py-2 pr-8">Patient</th>
+                      <th class="py-2 pr-8">Test Type</th>
+                      <th class="py-2 pr-8">Category</th>
+                      <th class="py-2 pr-8">Date Ordered</th>
+                      <th class="py-2 pr-8">Status</th>
+                      <th class="py-2">Actions</th>
+                    </tr>
+                  </thead>
+                  <tbody class="divide-y">
+                    <!-- Row Template -->
+                    <tr>
+                      <td class="py-4 pr-8">
+                        <div class="flex items-center gap-3">
+                          <img src="https://api.dicebear.com/7.x/personas/svg?seed=Sarah" alt="" class="w-8 h-8 rounded-full">
+                          <div>
+                            <p class="font-medium text-gray-900">Sarah Johnson</p>
+                            <p class="text-xs text-gray-500">ID: P-2025-001</p>
+                          </div>
+                        </div>
+                      </td>
+                      <td class="py-4 pr-8">
+                        <p class="font-medium text-gray-900">Complete Blood Count</p>
+                        <p class="text-xs text-gray-500">CBC with differential</p>
+                      </td>
+                      <td class="py-4 pr-8">
+                        <span class="inline-flex items-center rounded-full bg-gray-100 px-2.5 py-1 text-xs font-medium text-gray-700">Hematology</span>
+                      </td>
+                      <td class="py-4 pr-8">
+                        Jan 15, 2025
+                      </td>
+                      <td class="py-4 pr-8">
+                        <span class="inline-flex items-center rounded-full bg-gray-100 px-2.5 py-1 text-xs font-medium text-yellow-700">Pending</span>
+                      </td>
+                      <td class="py-4">
+                        <div class="flex items-center gap-2">
+                          <button class="inline-flex items-center gap-1 bg-gray-700 hover:bg-gray-800 text-white text-xs font-medium px-3 py-1.5 rounded-md">
+                            View Details
+                          </button>
+                          <button class="text-gray-400 hover:text-gray-600">
+                            <i data-lucide="more-vertical" class="w-4 h-4"></i>
+                          </button>
+                        </div>
+                      </td>
+                    </tr>
+
+                    <tr>
+                      <td class="py-4 pr-8">
+                        <div class="flex items-center gap-3">
+                          <img src="https://api.dicebear.com/7.x/personas/svg?seed=Michael" alt="" class="w-8 h-8 rounded-full">
+                          <div>
+                            <p class="font-medium text-gray-900">Michael Chen</p>
+                            <p class="text-xs text-gray-500">ID: P-2025-002</p>
+                          </div>
+                        </div>
+                      </td>
+                      <td class="py-4 pr-8">
+                        <p class="font-medium text-gray-900">Lipid Panel</p>
+                        <p class="text-xs text-gray-500">Cholesterol, HDL, LDL</p>
+                      </td>
+                      <td class="py-4 pr-8">
+                        <span class="inline-flex items-center rounded-full bg-gray-100 px-2.5 py-1 text-xs font-medium text-gray-700">Biochemistry</span>
+                      </td>
+                      <td class="py-4 pr-8">
+                        Jan 14, 2025
+                      </td>
+                      <td class="py-4 pr-8">
+                        <span class="inline-flex items-center rounded-full bg-blue-100 px-2.5 py-1 text-xs font-medium text-blue-700">In Progress</span>
+                      </td>
+                      <td class="py-4">
+                        <div class="flex items-center gap-2">
+                          <button class="inline-flex items-center gap-1 bg-gray-700 hover:bg-gray-800 text-white text-xs font-medium px-3 py-1.5 rounded-md">
+                            View Details
+                          </button>
+                          <button class="text-gray-400 hover:text-gray-600">
+                            <i data-lucide="more-vertical" class="w-4 h-4"></i>
+                          </button>
+                        </div>
+                      </td>
+                    </tr>
+
+                    <tr>
+                      <td class="py-4 pr-8">
+                        <div class="flex items-center gap-3">
+                          <img src="https://api.dicebear.com/7.x/personas/svg?seed=Emily" alt="" class="w-8 h-8 rounded-full">
+                          <div>
+                            <p class="font-medium text-gray-900">Emily Davis</p>
+                            <p class="text-xs text-gray-500">ID: P-2025-003</p>
+                          </div>
+                        </div>
+                      </td>
+                      <td class="py-4 pr-8">
+                        <p class="font-medium text-gray-900">Thyroid Function</p>
+                        <p class="text-xs text-gray-500">TSH, T3, T4</p>
+                      </td>
+                      <td class="py-4 pr-8">
+                        <span class="inline-flex items-center rounded-full bg-gray-100 px-2.5 py-1 text-xs font-medium text-gray-700">Endocrine</span>
+                      </td>
+                      <td class="py-4 pr-8">
+                        Jan 12, 2025
+                      </td>
+                      <td class="py-4 pr-8">
+                        <span class="inline-flex items-center rounded-full bg-green-100 px-2.5 py-1 text-xs font-medium text-green-700">Completed</span>
+                      </td>
+                      <td class="py-4">
+                        <div class="flex items-center gap-2">
+                          <button class="inline-flex items-center gap-1 bg-gray-700 hover:bg-gray-800 text-white text-xs font-medium px-3 py-1.5 rounded-md">
+                            View Results
+                          </button>
+                          <button class="text-gray-400 hover:text-gray-600">
+                            <i data-lucide="more-vertical" class="w-4 h-4"></i>
+                          </button>
+                        </div>
+                      </td>
+                    </tr>
+
+                    <tr>
+                      <td class="py-4 pr-8">
+                        <div class="flex items-center gap-3">
+                          <img src="https://api.dicebear.com/7.x/personas/svg?seed=Robert" alt="" class="w-8 h-8 rounded-full">
+                          <div>
+                            <p class="font-medium text-gray-900">Robert Wilson</p>
+                            <p class="text-xs text-gray-500">ID: P-2025-004</p>
+                          </div>
+                        </div>
+                      </td>
+                      <td class="py-4 pr-8">
+                        <p class="font-medium text-gray-900">HbA1c</p>
+                        <p class="text-xs text-gray-500">Diabetes monitoring</p>
+                      </td>
+                      <td class="py-4 pr-8">
+                        <span class="inline-flex items-center rounded-full bg-gray-100 px-2.5 py-1 text-xs font-medium text-gray-700">Biochemistry</span>
+                      </td>
+                      <td class="py-4 pr-8">
+                        Jan 16, 2025
+                      </td>
+                      <td class="py-4 pr-8">
+                        <span class="inline-flex items-center rounded-full bg-red-100 px-2.5 py-1 text-xs font-medium text-red-700">Urgent</span>
+                      </td>
+                      <td class="py-4">
+                        <div class="flex items-center gap-2">
+                          <button class="inline-flex items-center gap-1 bg-gray-700 hover:bg-gray-800 text-white text-xs font-medium px-3 py-1.5 rounded-md">
+                            View Details
+                          </button>
+                          <button class="text-gray-400 hover:text-gray-600">
+                            <i data-lucide="more-vertical" class="w-4 h-4"></i>
+                          </button>
+                        </div>
+                      </td>
+                    </tr>
+
+                    <tr>
+                      <td class="py-4 pr-8">
+                        <div class="flex items-center gap-3">
+                          <img src="https://api.dicebear.com/7.x/personas/svg?seed=Lisa" alt="" class="w-8 h-8 rounded-full">
+                          <div>
+                            <p class="font-medium text-gray-900">Lisa Thompson</p>
+                            <p class="text-xs text-gray-500">ID: P-2025-005</p>
+                          </div>
+                        </div>
+                      </td>
+                      <td class="py-4 pr-8">
+                        <p class="font-medium text-gray-900">Urinalysis</p>
+                        <p class="text-xs text-gray-500">Routine urine test</p>
+                      </td>
+                      <td class="py-4 pr-8">
+                        <span class="inline-flex items-center rounded-full bg-gray-100 px-2.5 py-1 text-xs font-medium text-gray-700">Microbiology</span>
+                      </td>
+                      <td class="py-4 pr-8">
+                        Jan 13, 2025
+                      </td>
+                      <td class="py-4 pr-8">
+                        <span class="inline-flex items-center rounded-full bg-green-100 px-2.5 py-1 text-xs font-medium text-green-700">Completed</span>
+                      </td>
+                      <td class="py-4">
+                        <div class="flex items-center gap-2">
+                          <button class="inline-flex items-center gap-1 bg-gray-700 hover:bg-gray-800 text-white text-xs font-medium px-3 py-1.5 rounded-md">
+                            View Results
+                          </button>
+                          <button class="text-gray-400 hover:text-gray-600">
+                            <i data-lucide="more-vertical" class="w-4 h-4"></i>
+                          </button>
+                        </div>
+                      </td>
+                    </tr>
+                  </tbody>
+                </table>
+              </div>
+
+              <!-- Footer -->
+              <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3">
+                <p class="text-sm text-gray-600">Showing 5 of 28 lab orders</p>
+                <!-- Pagination -->
+                <nav class="inline-flex gap-1">
+                  <button disabled class="px-3 py-1.5 rounded-md border text-sm text-gray-400">Previous</button>
+                  <button class="px-3 py-1.5 rounded-md border bg-indigo-600 text-white text-sm">1</button>
+                  <button class="px-3 py-1.5 rounded-md border text-sm text-gray-700 hover:bg-gray-100">2</button>
+                  <button class="px-3 py-1.5 rounded-md border text-sm text-gray-700 hover:bg-gray-100">3</button>
+                  <button class="px-3 py-1.5 rounded-md border text-sm text-gray-700 hover:bg-gray-100">Next</button>
+                </nav>
+              </div>
+            </div>
+          </section>
+        </div>
+      </main>
+
+      <!-- Footer -->
+      <footer class="border-t bg-white px-4 sm:px-6 lg:px-8">
+        <div class="flex flex-col sm:flex-row sm:justify-between items-center text-xs py-3 text-gray-500">
+          <p>&copy; 2025 ClinicPro. All rights reserved.</p>
+          <div class="flex gap-4 mt-1 sm:mt-0">
+            <a href="#" class="hover:text-gray-700">Support</a>
+            <a href="#" class="hover:text-gray-700">Privacy</a>
+            <a href="#" class="hover:text-gray-700">Terms</a>
+          </div>
+        </div>
+      </footer>
+    </div>
+  </div>
+
+  <script>
+    lucide.createIcons();
+    // Mobile sidebar toggle
+    const sidebar = document.getElementById('sidebar');
+    const openBtn = document.getElementById('sidebarOpen');
+    const closeBtn = document.getElementById('sidebarClose');
+    const toggleSidebar = (show) => {
+      if (show) {
+        sidebar.classList.remove('-translate-x-full');
+      } else {
+        sidebar.classList.add('-translate-x-full');
+      }
+    };
+    sidebar.classList.add('transition-transform','duration-200','transform','lg:translate-x-0','-translate-x-full','lg:static','fixed','inset-y-0','left-0','bg-white','w-64');
+    openBtn?.addEventListener('click', () => toggleSidebar(true));
+    closeBtn?.addEventListener('click', () => toggleSidebar(false));
+  </script>
+</body>
+</html>
\ No newline at end of file
diff --git a/assets/html/7. Lab Orders.html b/assets/html/7. Lab Orders.html
new file mode 100644
index 0000000..3d0d3a2
--- /dev/null
+++ b/assets/html/7. Lab Orders.html	
@@ -0,0 +1,347 @@
+<!DOCTYPE html>
+<html lang="en" class="h-full">
+<head>
+<meta charset="UTF-8">
+<meta name="viewport" content="width=device-width, initial-scale=1.0">
+<title>ClinicPro – Lab Orders</title>
+<link rel="preconnect" href="https://fonts.googleapis.com">
+<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
+<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
+<script src="https://cdn.tailwindcss.com"></script>
+<script src="https://unpkg.com/lucide@latest"></script>
+</head>
+<body class="h-full bg-gray-50 text-gray-900 antialiased" style="font-family: Inter, ui-sans-serif, system-ui, -apple-system, sans-serif;">
+<div class="flex h-full w-full">
+  <!-- Mobile nav toggle -->
+  <button id="mobile-nav-toggle" class="lg:hidden fixed top-4 left-4 z-20 p-2 rounded-md bg-white border border-gray-200 shadow-sm">
+    <i data-lucide="menu" class="w-5 h-5 text-gray-700"></i>
+  </button>
+
+  <!-- Sidebar -->
+  <aside id="sidebar" class="fixed inset-y-0 left-0 z-30 w-64 bg-white border-r border-gray-200 flex flex-col px-5 py-6 transform lg:translate-x-0 -translate-x-full transition-transform duration-200 ease-in-out">
+    <!-- Brand -->
+    <div class="flex items-center gap-2 mb-8">
+      <div class="h-8 w-8 rounded-md bg-gray-900 flex items-center justify-center">
+        <i data-lucide="shield" class="w-5 h-5 text-white"></i>
+      </div>
+      <span class="text-lg font-semibold">ClinicPro</span>
+    </div>
+
+    <!-- Nav -->
+    <nav class="flex-1">
+      <ul class="space-y-1">
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm hover:bg-gray-100">
+            <i data-lucide="home" class="w-5 h-5"></i>
+            Home
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm hover:bg-gray-100">
+            <i data-lucide="calendar" class="w-5 h-5"></i>
+            Appointments
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm hover:bg-gray-100">
+            <i data-lucide="users" class="w-5 h-5"></i>
+            Patients
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm hover:bg-gray-100">
+            <i data-lucide="file-text" class="w-5 h-5"></i>
+            Prescriptions
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm bg-gray-100 font-medium">
+            <i data-lucide="flask-conical" class="w-5 h-5"></i>
+            Lab Orders
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm hover:bg-gray-100">
+            <i data-lucide="credit-card" class="w-5 h-5"></i>
+            Billing
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-sm hover:bg-gray-100">
+            <i data-lucide="settings" class="w-5 h-5"></i>
+            Settings
+          </a>
+        </li>
+      </ul>
+    </nav>
+
+    <!-- Footer -->
+    <div class="text-xs text-gray-500 pt-6 border-t border-gray-200">
+      © 2025 ClinicPro. All rights reserved.
+    </div>
+  </aside>
+
+  <!-- Main -->
+  <div class="flex-1 lg:ml-64 ml-0 flex flex-col">
+    <!-- Header -->
+    <header class="h-14 flex items-center justify-end px-6 border-b border-gray-200 bg-white">
+      <div class="flex items-center gap-4">
+        <button class="relative">
+          <i data-lucide="bell" class="w-5 h-5 text-gray-600"></i>
+          <span class="absolute top-0 right-0 inline-flex h-2 w-2 bg-red-500 rounded-full"></span>
+        </button>
+        <img src="https://api.dicebear.com/6.x/notionists-neutral/svg?seed=1" alt="avatar" class="w-8 h-8 rounded-full">
+      </div>
+    </header>
+
+    <!-- Content -->
+    <main class="flex-1 p-6 lg:p-10 overflow-y-auto">
+      <!-- Title & CTA -->
+      <div class="flex items-center justify-between flex-wrap gap-4">
+        <h1 class="text-2xl font-semibold">Lab Orders</h1>
+        <button class="inline-flex items-center gap-2 bg-gray-800 hover:bg-gray-700 text-white text-sm font-medium px-4 py-2 rounded-md">
+          <i data-lucide="plus" class="w-4 h-4"></i>
+          New Lab Order
+        </button>
+      </div>
+
+      <!-- Filters -->
+      <div class="mt-6 flex flex-col sm:flex-row sm:items-center gap-4">
+        <div class="relative flex-1">
+          <span class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
+            <i data-lucide="search" class="w-4 h-4 text-gray-500"></i>
+          </span>
+          <input type="text" placeholder="Search lab orders, patient, test type…" class="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md bg-white text-sm placeholder-gray-400 focus:ring-2 focus:ring-gray-200 focus:border-gray-400 transition">
+        </div>
+
+        <select class="sm:w-40 w-full border border-gray-300 rounded-md bg-white text-sm px-3 py-2 focus:ring-2 focus:ring-gray-200 focus:border-gray-400 transition">
+          <option>All Status</option>
+          <option>Pending</option>
+          <option>In Progress</option>
+          <option>Completed</option>
+          <option>Urgent</option>
+        </select>
+      </div>
+
+      <!-- Table Card -->
+      <div class="mt-6 bg-white border border-gray-200 rounded-lg overflow-hidden">
+        <!-- Card Header -->
+        <div class="flex items-center justify-end gap-2 px-4 py-3 border-b border-gray-200">
+          <button class="text-sm px-3 py-1.5 border border-gray-300 rounded-md bg-white hover:bg-gray-50">Export</button>
+          <button class="text-sm px-3 py-1.5 border border-gray-300 rounded-md bg-gray-100 font-medium">Table</button>
+        </div>
+
+        <!-- Table -->
+        <div class="overflow-x-auto">
+          <table class="min-w-full text-sm">
+            <thead class="bg-gray-50">
+              <tr class="text-left text-gray-600">
+                <th class="px-6 py-3 font-medium">Patient</th>
+                <th class="px-6 py-3 font-medium">Test Type</th>
+                <th class="px-6 py-3 font-medium">Category</th>
+                <th class="px-6 py-3 font-medium">Date Ordered</th>
+                <th class="px-6 py-3 font-medium">Status</th>
+                <th class="px-6 py-3 font-medium text-right">Actions</th>
+              </tr>
+            </thead>
+            <tbody class="divide-y divide-gray-200">
+              <!-- Row 1 -->
+              <tr>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <div class="flex items-center gap-3">
+                    <img src="https://api.dicebear.com/6.x/notionists-neutral/svg?seed=2" class="w-9 h-9 rounded-full" alt="">
+                    <div>
+                      <div class="font-medium text-gray-900">Sarah Johnson</div>
+                      <div class="text-gray-500 text-xs">ID: P-2025-001</div>
+                    </div>
+                  </div>
+                </td>
+                <td class="px-6 py-4">
+                  <div class="font-medium">Complete Blood Count</div>
+                  <div class="text-xs text-gray-500">CBC with differential</div>
+                </td>
+                <td class="px-6 py-4">
+                  <span class="inline-flex items-center px-2 py-0.5 rounded-full bg-gray-100 text-gray-700 text-xs">Hematology</span>
+                </td>
+                <td class="px-6 py-4">Jan 15, 2025</td>
+                <td class="px-6 py-4">
+                  <span class="inline-flex items-center px-2 py-0.5 rounded-full bg-yellow-100 text-yellow-800 text-xs">Pending</span>
+                </td>
+                <td class="px-6 py-4 text-right">
+                  <div class="flex items-center justify-end gap-2">
+                    <button class="px-3 py-1.5 text-xs font-medium rounded-md bg-gray-700 hover:bg-gray-600 text-white">View Details</button>
+                    <button class="p-2 rounded-md hover:bg-gray-100">
+                      <i data-lucide="more-vertical" class="w-4 h-4 text-gray-600"></i>
+                    </button>
+                  </div>
+                </td>
+              </tr>
+
+              <!-- Row 2 -->
+              <tr>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <div class="flex items-center gap-3">
+                    <img src="https://api.dicebear.com/6.x/notionists-neutral/svg?seed=3" class="w-9 h-9 rounded-full" alt="">
+                    <div>
+                      <div class="font-medium text-gray-900">Michael Chen</div>
+                      <div class="text-gray-500 text-xs">ID: P-2025-002</div>
+                    </div>
+                  </div>
+                </td>
+                <td class="px-6 py-4">
+                  <div class="font-medium">Lipid Panel</div>
+                  <div class="text-xs text-gray-500">Cholesterol, HDL, LDL</div>
+                </td>
+                <td class="px-6 py-4">
+                  <span class="inline-flex items-center px-2 py-0.5 rounded-full bg-gray-100 text-gray-700 text-xs">Biochemistry</span>
+                </td>
+                <td class="px-6 py-4">Jan 14, 2025</td>
+                <td class="px-6 py-4">
+                  <span class="inline-flex items-center px-2 py-0.5 rounded-full bg-blue-100 text-blue-800 text-xs">In Progress</span>
+                </td>
+                <td class="px-6 py-4 text-right">
+                  <div class="flex items-center justify-end gap-2">
+                    <button class="px-3 py-1.5 text-xs font-medium rounded-md bg-gray-700 hover:bg-gray-600 text-white">View Details</button>
+                    <button class="p-2 rounded-md hover:bg-gray-100">
+                      <i data-lucide="more-vertical" class="w-4 h-4 text-gray-600"></i>
+                    </button>
+                  </div>
+                </td>
+              </tr>
+
+              <!-- Row 3 -->
+              <tr>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <div class="flex items-center gap-3">
+                    <img src="https://api.dicebear.com/6.x/notionists-neutral/svg?seed=4" class="w-9 h-9 rounded-full" alt="">
+                    <div>
+                      <div class="font-medium text-gray-900">Emily Davis</div>
+                      <div class="text-gray-500 text-xs">ID: P-2025-003</div>
+                    </div>
+                  </div>
+                </td>
+                <td class="px-6 py-4">
+                  <div class="font-medium">Thyroid Function</div>
+                  <div class="text-xs text-gray-500">TSH, T3, T4</div>
+                </td>
+                <td class="px-6 py-4">
+                  <span class="inline-flex items-center px-2 py-0.5 rounded-full bg-gray-100 text-gray-700 text-xs">Endocrine</span>
+                </td>
+                <td class="px-6 py-4">Jan 12, 2025</td>
+                <td class="px-6 py-4">
+                  <span class="inline-flex items-center px-2 py-0.5 rounded-full bg-green-100 text-green-800 text-xs">Completed</span>
+                </td>
+                <td class="px-6 py-4 text-right">
+                  <div class="flex items-center justify-end gap-2">
+                    <button class="px-3 py-1.5 text-xs font-medium rounded-md bg-gray-700 hover:bg-gray-600 text-white">View Results</button>
+                    <button class="p-2 rounded-md hover:bg-gray-100">
+                      <i data-lucide="more-vertical" class="w-4 h-4 text-gray-600"></i>
+                    </button>
+                  </div>
+                </td>
+              </tr>
+
+              <!-- Row 4 -->
+              <tr>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <div class="flex items-center gap-3">
+                    <img src="https://api.dicebear.com/6.x/notionists-neutral/svg?seed=5" class="w-9 h-9 rounded-full" alt="">
+                    <div>
+                      <div class="font-medium text-gray-900">Robert Wilson</div>
+                      <div class="text-gray-500 text-xs">ID: P-2025-004</div>
+                    </div>
+                  </div>
+                </td>
+                <td class="px-6 py-4">
+                  <div class="font-medium">HbA1c</div>
+                  <div class="text-xs text-gray-500">Diabetes monitoring</div>
+                </td>
+                <td class="px-6 py-4">
+                  <span class="inline-flex items-center px-2 py-0.5 rounded-full bg-gray-100 text-gray-700 text-xs">Biochemistry</span>
+                </td>
+                <td class="px-6 py-4">Jan 16, 2025</td>
+                <td class="px-6 py-4">
+                  <span class="inline-flex items-center px-2 py-0.5 rounded-full bg-red-100 text-red-800 text-xs">Urgent</span>
+                </td>
+                <td class="px-6 py-4 text-right">
+                  <div class="flex items-center justify-end gap-2">
+                    <button class="px-3 py-1.5 text-xs font-medium rounded-md bg-gray-700 hover:bg-gray-600 text-white">View Details</button>
+                    <button class="p-2 rounded-md hover:bg-gray-100">
+                      <i data-lucide="more-vertical" class="w-4 h-4 text-gray-600"></i>
+                    </button>
+                  </div>
+                </td>
+              </tr>
+
+              <!-- Row 5 -->
+              <tr>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <div class="flex items-center gap-3">
+                    <img src="https://api.dicebear.com/6.x/notionists-neutral/svg?seed=6" class="w-9 h-9 rounded-full" alt="">
+                    <div>
+                      <div class="font-medium text-gray-900">Lisa Thompson</div>
+                      <div class="text-gray-500 text-xs">ID: P-2025-005</div>
+                    </div>
+                  </div>
+                </td>
+                <td class="px-6 py-4">
+                  <div class="font-medium">Urinalysis</div>
+                  <div class="text-xs text-gray-500">Routine urine test</div>
+                </td>
+                <td class="px-6 py-4">
+                  <span class="inline-flex items-center px-2 py-0.5 rounded-full bg-gray-100 text-gray-700 text-xs">Microbiology</span>
+                </td>
+                <td class="px-6 py-4">Jan 13, 2025</td>
+                <td class="px-6 py-4">
+                  <span class="inline-flex items-center px-2 py-0.5 rounded-full bg-green-100 text-green-800 text-xs">Completed</span>
+                </td>
+                <td class="px-6 py-4 text-right">
+                  <div class="flex items-center justify-end gap-2">
+                    <button class="px-3 py-1.5 text-xs font-medium rounded-md bg-gray-700 hover:bg-gray-600 text-white">View Results</button>
+                    <button class="p-2 rounded-md hover:bg-gray-100">
+                      <i data-lucide="more-vertical" class="w-4 h-4 text-gray-600"></i>
+                    </button>
+                  </div>
+                </td>
+              </tr>
+            </tbody>
+          </table>
+        </div>
+
+        <!-- Card Footer -->
+        <div class="flex flex-col sm:flex-row items-center justify-between gap-4 px-6 py-4 bg-white">
+          <p class="text-sm text-gray-600">Showing 5 of 28 lab orders</p>
+          <nav class="flex items-center gap-1">
+            <button class="px-3 py-1.5 text-sm border border-gray-300 rounded-md bg-white hover:bg-gray-50">Previous</button>
+            <button class="px-3 py-1.5 text-sm border border-gray-300 rounded-md bg-gray-800 text-white">1</button>
+            <button class="px-3 py-1.5 text-sm border border-gray-300 rounded-md bg-white hover:bg-gray-50">2</button>
+            <button class="px-3 py-1.5 text-sm border border-gray-300 rounded-md bg-white hover:bg-gray-50">3</button>
+            <button class="px-3 py-1.5 text-sm border border-gray-300 rounded-md bg-white hover:bg-gray-50">Next</button>
+          </nav>
+        </div>
+      </div>
+    </main>
+
+    <!-- Bottom Bar (mobile) -->
+    <footer class="lg:hidden flex items-center justify-between px-6 py-3 border-t border-gray-200 text-xs bg-white">
+      <span>© 2025 ClinicPro</span>
+      <div class="flex gap-4">
+        <a href="#" class="hover:underline">Support</a>
+        <a href="#" class="hover:underline">Privacy</a>
+      </div>
+    </footer>
+  </div>
+</div>
+
+<script>
+  lucide.createIcons();
+
+  const sidebar = document.getElementById('sidebar');
+  const toggleBtn = document.getElementById('mobile-nav-toggle');
+
+  toggleBtn.addEventListener('click', () => {
+    sidebar.classList.toggle('-translate-x-full');
+  });
+</script>
+</body>
+</html>
diff --git a/assets/html/7.1 Lab Orders Details.html b/assets/html/7.1 Lab Orders Details.html
new file mode 100644
index 0000000..4798ac1
--- /dev/null
+++ b/assets/html/7.1 Lab Orders Details.html	
@@ -0,0 +1,321 @@
+<!DOCTYPE html>
+<html lang="en" class="h-full bg-gray-50 antialiased">
+<head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <title>Lab Order • ClinicPro</title>
+  <link rel="preconnect" href="https://fonts.googleapis.com">
+  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
+  <script src="https://cdn.tailwindcss.com"></script>
+  <script>
+    tailwind.config = { theme: { fontFamily: { sans: ['Inter', 'ui-sans-serif', 'system-ui'], } } }
+  </script>
+</head>
+<body class="h-full font-sans text-gray-900">
+  <div class="flex h-full">
+    <!-- Sidebar -->
+    <aside class="hidden lg:flex lg:flex-col w-60 border-r bg-white">
+      <div class="flex items-center gap-2 px-6 h-16">
+        <div class="w-6 h-6 bg-gray-900 rounded-md flex items-center justify-center text-white text-xs font-semibold">C</div>
+        <span class="font-semibold text-lg">ClinicPro</span>
+      </div>
+      <div class="flex-1 overflow-y-auto">
+        <nav class="mt-6 space-y-1">
+          <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+            <i data-lucide="home" class="w-4 h-4 text-gray-500 group-hover:text-gray-900"></i> Home
+          </a>
+          <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+            <i data-lucide="calendar" class="w-4 h-4 text-gray-500 group-hover:text-gray-900"></i> Appointments
+          </a>
+          <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+            <i data-lucide="users" class="w-4 h-4 text-gray-500 group-hover:text-gray-900"></i> Patients
+          </a>
+          <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+            <i data-lucide="file-text" class="w-4 h-4 text-gray-500 group-hover:text-gray-900"></i> Prescriptions
+          </a>
+          <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 bg-gray-100">
+            <i data-lucide="flask-conical" class="w-4 h-4 text-gray-900"></i> Lab Orders
+          </a>
+          <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+            <i data-lucide="credit-card" class="w-4 h-4 text-gray-500 group-hover:text-gray-900"></i> Billing
+          </a>
+          <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+            <i data-lucide="settings" class="w-4 h-4 text-gray-500 group-hover:text-gray-900"></i> Settings
+          </a>
+        </nav>
+      </div>
+      <footer class="px-6 py-4 text-xs text-gray-500 border-t">
+        © 2025 ClinicPro. All rights reserved.
+      </footer>
+    </aside>
+
+    <!-- Mobile sidebar -->
+    <aside id="mobileNav" class="fixed inset-y-0 left-0 w-64 bg-white border-r z-40 transform -translate-x-full transition-transform lg:hidden">
+      <div class="flex items-center gap-2 px-6 h-16">
+        <div class="w-6 h-6 bg-gray-900 rounded-md flex items-center justify-center text-white text-xs font-semibold">C</div>
+        <span class="font-semibold text-lg">ClinicPro</span>
+      </div>
+      <nav class="mt-6 space-y-1">
+        <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="home" class="w-4 h-4 text-gray-500 group-hover:text-gray-900"></i> Home
+        </a>
+        <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="calendar" class="w-4 h-4 text-gray-500 group-hover:text-gray-900"></i> Appointments
+        </a>
+        <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="users" class="w-4 h-4 text-gray-500 group-hover:text-gray-900"></i> Patients
+        </a>
+        <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="file-text" class="w-4 h-4 text-gray-500 group-hover:text-gray-900"></i> Prescriptions
+        </a>
+        <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 bg-gray-100">
+          <i data-lucide="flask-conical" class="w-4 h-4 text-gray-900"></i> Lab Orders
+        </a>
+        <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="credit-card" class="w-4 h-4 text-gray-500 group-hover:text-gray-900"></i> Billing
+        </a>
+        <a href="#" class="group flex items-center gap-3 px-6 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+          <i data-lucide="settings" class="w-4 h-4 text-gray-500 group-hover:text-gray-900"></i> Settings
+        </a>
+      </nav>
+    </aside>
+
+    <!-- Overlay for mobile menu -->
+    <div id="overlay" class="fixed inset-0 bg-black/30 z-30 hidden lg:hidden"></div>
+
+    <!-- Main content -->
+    <div class="flex-1 flex flex-col overflow-y-auto">
+      <!-- Top bar -->
+      <header class="flex items-center justify-between px-4 lg:px-8 h-16 border-b bg-white">
+        <div class="flex items-center gap-3 lg:hidden">
+          <button id="menuBtn" class="p-2 rounded-md hover:bg-gray-100">
+            <i data-lucide="menu" class="w-5 h-5 text-gray-700"></i>
+          </button>
+          <span class="font-semibold">Lab Order Details</span>
+        </div>
+        <div class="hidden lg:block"></div>
+        <div class="flex items-center gap-4">
+          <button class="relative">
+            <i data-lucide="bell" class="w-5 h-5 text-gray-600"></i>
+            <span class="absolute -top-1 -right-1 inline-flex items-center justify-center w-4 h-4 bg-red-500 text-white text-[10px] rounded-full">3</span>
+          </button>
+          <img src="https://i.pravatar.cc/40?img=68" alt="Avatar" class="w-8 h-8 rounded-full ring-1 ring-gray-200">
+        </div>
+      </header>
+
+      <main class="flex-1 flex flex-col lg:flex-row gap-6 p-4 lg:p-8">
+        <!-- Main column -->
+        <div class="flex-1 space-y-6">
+          <!-- Breadcrumb -->
+          <div class="flex items-center gap-2 text-sm text-gray-500">
+            <a href="#" class="hover:text-gray-700 flex items-center gap-1">
+              <i data-lucide="arrow-left" class="w-4 h-4"></i>
+              Back to Lab Orders
+            </a>
+          </div>
+
+          <!-- Lab Order Details -->
+          <section class="bg-white border rounded-lg shadow-sm">
+            <div class="flex items-start justify-between p-6">
+              <h2 class="text-lg font-semibold">Lab Order Details</h2>
+              <span class="inline-flex items-center gap-1 text-xs font-medium px-2 py-0.5 rounded-md bg-yellow-100 text-yellow-800">
+                Pending
+              </span>
+            </div>
+            <div class="border-t"></div>
+            <div class="p-6 space-y-6">
+              <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 text-sm">
+                <div>
+                  <p class="text-gray-500">Order ID</p>
+                  <p class="font-medium">#LO-2025-001</p>
+                </div>
+                <div>
+                  <p class="text-gray-500">Date Ordered</p>
+                  <p class="font-medium">January 15, 2025</p>
+                </div>
+                <div>
+                  <p class="text-gray-500">Ordering Physician</p>
+                  <p class="font-medium">Dr. Sarah Mitchell</p>
+                </div>
+                <div>
+                  <p class="text-gray-500">Priority</p>
+                  <span class="inline-flex items-center gap-1 text-xs font-medium px-2 py-0.5 rounded-md bg-gray-100 text-gray-800">
+                    Routine
+                  </span>
+                </div>
+              </div>
+
+              <div class="space-y-4">
+                <div>
+                  <p class="text-gray-500 text-sm mb-2">Tests Ordered</p>
+                  <div class="border rounded-md p-4 bg-gray-50">
+                    <p class="font-medium text-sm">Complete Blood Count (CBC)</p>
+                    <p class="text-xs text-gray-500">CBC with differential and platelet count</p>
+                  </div>
+                </div>
+
+                <div>
+                  <p class="text-gray-500 text-sm mb-2">Clinical Notes</p>
+                  <div class="border rounded-md p-4 bg-gray-50 text-sm">
+                    Patient presents with fatigue and weakness. CBC requested to rule out anemia. Patient is not fasting.
+                  </div>
+                </div>
+
+                <div>
+                  <p class="text-gray-500 text-sm mb-2">Special Instructions</p>
+                  <div class="border rounded-md p-4 bg-gray-50 text-sm">
+                    No special preparation required. Patient can eat normally before test.
+                  </div>
+                </div>
+              </div>
+
+              <div class="flex flex-wrap gap-3">
+                <button class="inline-flex items-center gap-2 px-4 py-2 bg-gray-900 text-white text-sm font-medium rounded-md hover:bg-gray-800">
+                  <i data-lucide="send" class="w-4 h-4"></i> Send to Lab
+                </button>
+                <button class="inline-flex items-center gap-2 px-4 py-2 border text-sm font-medium rounded-md hover:bg-gray-50">
+                  <i data-lucide="printer" class="w-4 h-4"></i> Print Order
+                </button>
+                <button class="inline-flex items-center gap-2 px-4 py-2 border text-sm font-medium rounded-md hover:bg-gray-50">
+                  <i data-lucide="edit-3" class="w-4 h-4"></i> Edit Order
+                </button>
+              </div>
+            </div>
+          </section>
+
+          <!-- Order History -->
+          <section class="bg-white border rounded-lg shadow-sm">
+            <div class="p-6">
+              <h3 class="text-sm font-semibold mb-4">Order History</h3>
+              <ul class="space-y-4 text-sm">
+                <li class="flex items-start gap-3">
+                  <span class="mt-1">
+                    <i data-lucide="circle" class="w-3 h-3 text-gray-400"></i>
+                  </span>
+                  <div>
+                    <p class="font-medium">Order created</p>
+                    <p class="text-xs text-gray-500">January 15, 2025 at 10:30 AM</p>
+                  </div>
+                </li>
+                <li class="flex items-start gap-3">
+                  <span class="mt-1">
+                    <i data-lucide="circle" class="w-3 h-3 text-gray-400"></i>
+                  </span>
+                  <div>
+                    <p class="font-medium">Pending lab processing</p>
+                    <p class="text-xs text-gray-500">Waiting for patient to visit lab</p>
+                  </div>
+                </li>
+              </ul>
+            </div>
+          </section>
+        </div>
+
+        <!-- Right column -->
+        <div class="w-full lg:w-80 space-y-6">
+          <!-- Patient Information -->
+          <section class="bg-white border rounded-lg shadow-sm">
+            <div class="p-6 space-y-4">
+              <h3 class="text-sm font-semibold">Patient Information</h3>
+              <div class="flex items-center gap-3">
+                <img src="https://i.pravatar.cc/40?img=47" alt="Patient" class="w-10 h-10 rounded-full ring-1 ring-gray-200">
+                <div>
+                  <p class="font-medium leading-none">Sarah Johnson</p>
+                  <p class="text-xs text-gray-500 leading-none">ID: P-2025-001</p>
+                </div>
+              </div>
+              <div class="text-sm space-y-2">
+                <div>
+                  <p class="text-gray-500">Date of Birth</p>
+                  <p class="font-medium">March 15, 1985</p>
+                </div>
+                <div>
+                  <p class="text-gray-500">Phone</p>
+                  <p class="font-medium">(555) 123-4567</p>
+                </div>
+                <div>
+                  <p class="text-gray-500">Email</p>
+                  <p class="font-medium">sarah.johnson@email.com</p>
+                </div>
+                <div>
+                  <p class="text-gray-500">Insurance</p>
+                  <p class="font-medium">Blue Cross Blue Shield</p>
+                </div>
+              </div>
+              <button class="w-full inline-flex items-center justify-center gap-2 px-3 py-2 border text-sm font-medium rounded-md hover:bg-gray-50">
+                View Full Profile
+              </button>
+            </div>
+          </section>
+
+          <!-- Lab Information -->
+          <section class="bg-white border rounded-lg shadow-sm">
+            <div class="p-6 space-y-4">
+              <h3 class="text-sm font-semibold">Lab Information</h3>
+              <div class="text-sm space-y-2">
+                <div>
+                  <p class="text-gray-500">Laboratory</p>
+                  <p class="font-medium">Quest Diagnostics</p>
+                </div>
+                <div>
+                  <p class="text-gray-500">Lab Location</p>
+                  <p class="font-medium">Downtown Medical Center</p>
+                </div>
+                <div>
+                  <p class="text-gray-500">Contact</p>
+                  <p class="font-medium">(555) 987-6543</p>
+                </div>
+                <div>
+                  <p class="text-gray-500">Hours</p>
+                  <p class="font-medium">Mon-Fri: 7:00 AM - 5:00 PM</p>
+                </div>
+              </div>
+            </div>
+          </section>
+
+          <!-- Quick Actions -->
+          <section class="bg-white border rounded-lg shadow-sm">
+            <div class="p-6 space-y-4">
+              <div class="flex items-center justify-between">
+                <h3 class="text-sm font-semibold">Quick Actions</h3>
+                <div class="flex items-center gap-2 text-xs text-gray-400">
+                  <a href="#" class="hover:text-gray-600">Support</a>
+                  <span>•</span>
+                  <a href="#" class="hover:text-gray-600">Privacy</a>
+                </div>
+              </div>
+              <div class="space-y-3">
+                <button class="w-full inline-flex items-center gap-2 px-3 py-2 border text-sm font-medium rounded-md hover:bg-gray-50">
+                  <i data-lucide="phone" class="w-4 h-4"></i> Call Patient
+                </button>
+                <button class="w-full inline-flex items-center gap-2 px-3 py-2 border text-sm font-medium rounded-md hover:bg-gray-50">
+                  <i data-lucide="bell-ring" class="w-4 h-4"></i> Send Reminder
+                </button>
+                <button class="w-full inline-flex items-center gap-2 px-3 py-2 border text-sm font-medium rounded-md hover:bg-gray-50">
+                  <i data-lucide="calendar-plus" class="w-4 h-4"></i> Schedule Follow-up
+                </button>
+              </div>
+            </div>
+          </section>
+        </div>
+      </main>
+    </div>
+  </div>
+
+  <script src="https://unpkg.com/lucide@latest"></script>
+  <script>
+    lucide.createIcons();
+    const menuBtn = document.getElementById('menuBtn');
+    const mobileNav = document.getElementById('mobileNav');
+    const overlay = document.getElementById('overlay');
+    menuBtn?.addEventListener('click', () => {
+      mobileNav.classList.toggle('-translate-x-full');
+      overlay.classList.toggle('hidden');
+    });
+    overlay?.addEventListener('click', () => {
+      mobileNav.classList.add('-translate-x-full');
+      overlay.classList.add('hidden');
+    });
+  </script>
+</body>
+</html>
\ No newline at end of file
diff --git a/assets/html/8. Billing and Finance.html b/assets/html/8. Billing and Finance.html
new file mode 100644
index 0000000..76ac347
--- /dev/null
+++ b/assets/html/8. Billing and Finance.html	
@@ -0,0 +1,247 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width,initial-scale=1">
+  <title>ClinicPro – Billing & Finance</title>
+  <link rel="preconnect" href="https://fonts.googleapis.com">
+  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
+  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
+  <script src="https://cdn.tailwindcss.com"></script>
+  <script>tailwind.config = {theme:{extend:{fontFamily:{sans:['Inter', 'ui-sans-serif','system-ui']}}}}</script>
+</head>
+<body class="font-sans antialiased text-gray-900 flex min-h-screen bg-gray-50">
+  <!-- Sidebar -->
+  <aside class="hidden lg:flex lg:flex-col w-60 border-r bg-white">
+    <div class="px-6 py-4 flex items-center space-x-3">
+      <div class="h-8 w-8 rounded bg-gray-900 flex items-center justify-center">
+        <i data-lucide="shield-plus" class="text-white h-4 w-4"></i>
+      </div>
+      <span class="text-xl font-semibold">ClinicPro</span>
+    </div>
+    <nav class="flex-1 px-2 mt-4 space-y-1 text-sm">
+      <a href="#" class="flex items-center px-3 py-2 rounded-md hover:bg-gray-100 space-x-3 text-gray-700">
+        <i data-lucide="home" class="h-4 w-4"></i><span>Home</span>
+      </a>
+      <a href="#" class="flex items-center px-3 py-2 rounded-md hover:bg-gray-100 space-x-3 text-gray-700">
+        <i data-lucide="calendar" class="h-4 w-4"></i><span>Appointments</span>
+      </a>
+      <a href="#" class="flex items-center px-3 py-2 rounded-md hover:bg-gray-100 space-x-3 text-gray-700">
+        <i data-lucide="users" class="h-4 w-4"></i><span>Patients</span>
+      </a>
+      <a href="#" class="flex items-center px-3 py-2 rounded-md hover:bg-gray-100 space-x-3 text-gray-700">
+        <i data-lucide="prescription" class="h-4 w-4"></i><span>Prescriptions</span>
+      </a>
+      <a href="#" class="flex items-center px-3 py-2 rounded-md hover:bg-gray-100 space-x-3 text-gray-700">
+        <i data-lucide="flask-conical" class="h-4 w-4"></i><span>Lab Orders</span>
+      </a>
+      <a href="#" class="flex items-center px-3 py-2 rounded-md bg-gray-100 space-x-3 text-gray-900 font-medium">
+        <i data-lucide="file-text" class="h-4 w-4"></i><span>Billing</span>
+      </a>
+      <a href="#" class="flex items-center px-3 py-2 rounded-md hover:bg-gray-100 space-x-3 text-gray-700">
+        <i data-lucide="settings" class="h-4 w-4"></i><span>Settings</span>
+      </a>
+    </nav>
+    <div class="px-6 py-4 border-t text-xs text-gray-500">
+      © 2025 ClinicPro
+    </div>
+  </aside>
+
+  <!-- Main -->
+  <main class="flex-1 flex flex-col">
+    <!-- Header -->
+    <header class="flex items-center justify-between px-4 lg:px-8 py-4 border-b bg-white">
+      <h1 class="text-xl font-semibold">Billing &amp; Finance</h1>
+      <button class="inline-flex items-center space-x-2 px-4 py-2 text-sm font-medium rounded-md bg-gray-900 text-white hover:bg-gray-800 focus:outline-none">
+        <i data-lucide="plus" class="h-4 w-4"></i>
+        <span>Create Invoice</span>
+      </button>
+    </header>
+
+    <!-- Content -->
+    <section class="flex-1 overflow-y-auto px-4 lg:px-8 py-6">
+      <!-- Tabs -->
+      <div class="flex space-x-2 border-b mb-6">
+        <button class="px-3 py-2 text-sm font-medium border-b-2 border-gray-900">Invoicing</button>
+        <button class="px-3 py-2 text-sm text-gray-600 hover:text-gray-900">Reports</button>
+        <button class="px-3 py-2 text-sm text-gray-600 hover:text-gray-900">Inventory</button>
+      </div>
+
+      <!-- Search & Filters -->
+      <div class="flex flex-col md:flex-row md:items-center md:space-x-4 space-y-3 md:space-y-0 mb-6">
+        <div class="flex-1 relative">
+          <span class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
+            <i data-lucide="search" class="h-4 w-4 text-gray-400"></i>
+          </span>
+          <input type="text" placeholder="Search invoices, patient name..." class="w-full rounded-md border-gray-300 pl-10 pr-3 py-2 text-sm focus:ring-2 focus:ring-gray-900 focus:border-gray-900">
+        </div>
+        <select class="md:w-40 w-full rounded-md border-gray-300 py-2 px-3 text-sm focus:ring-2 focus:ring-gray-900 focus:border-gray-900">
+          <option>All Status</option>
+          <option>Paid</option>
+          <option>Pending</option>
+          <option>Overdue</option>
+        </select>
+        <div class="flex items-center space-x-2 md:ml-auto">
+          <button class="px-3 py-2 text-sm rounded-md border hover:bg-gray-50">Export</button>
+          <button class="px-3 py-2 text-sm rounded-md border hover:bg-gray-50">Table</button>
+        </div>
+      </div>
+
+      <!-- Stats -->
+      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
+        <div class="bg-white border rounded-lg p-4">
+          <div class="flex items-start justify-between">
+            <span class="text-sm text-gray-600">Total Revenue</span>
+            <i data-lucide="dollar-sign" class="h-4 w-4 text-gray-400"></i>
+          </div>
+          <p class="text-2xl font-semibold mt-2">$24,580</p>
+        </div>
+        <div class="bg-white border rounded-lg p-4">
+          <div class="flex items-start justify-between">
+            <span class="text-sm text-gray-600">Pending</span>
+            <i data-lucide="clock" class="h-4 w-4 text-gray-400"></i>
+          </div>
+          <p class="text-2xl font-semibold mt-2">$3,420</p>
+        </div>
+        <div class="bg-white border rounded-lg p-4">
+          <div class="flex items-start justify-between">
+            <span class="text-sm text-gray-600">Overdue</span>
+            <i data-lucide="alert-triangle" class="h-4 w-4 text-gray-400"></i>
+          </div>
+          <p class="text-2xl font-semibold mt-2">$1,280</p>
+        </div>
+        <div class="bg-white border rounded-lg p-4">
+          <div class="flex items-start justify-between">
+            <span class="text-sm text-gray-600">This Month</span>
+            <i data-lucide="calendar-days" class="h-4 w-4 text-gray-400"></i>
+          </div>
+          <p class="text-2xl font-semibold mt-2">$8,640</p>
+        </div>
+      </div>
+
+      <!-- Table -->
+      <div class="bg-white border rounded-lg overflow-x-auto">
+        <table class="min-w-full text-sm">
+          <thead class="border-b bg-gray-50 text-gray-600">
+            <tr>
+              <th class="px-6 py-3 text-left font-medium">Invoice</th>
+              <th class="px-6 py-3 text-left font-medium">Patient</th>
+              <th class="px-6 py-3 text-left font-medium">Amount</th>
+              <th class="px-6 py-3 text-left font-medium">Date</th>
+              <th class="px-6 py-3 text-left font-medium">Status</th>
+              <th class="px-6 py-3 text-left font-medium">Actions</th>
+            </tr>
+          </thead>
+          <tbody class="divide-y">
+            <tr>
+              <td class="px-6 py-4">
+                <span class="font-medium">INV-2025-001</span>
+                <p class="text-xs text-gray-500">Consultation</p>
+              </td>
+              <td class="px-6 py-4 flex items-center space-x-2">
+                <i data-lucide="smile" class="h-5 w-5 text-gray-600"></i>
+                <span>Sarah Johnson</span>
+              </td>
+              <td class="px-6 py-4">$150.00</td>
+              <td class="px-6 py-4">Jan 15, 2025</td>
+              <td class="px-6 py-4">
+                <span class="px-2 py-1 text-xs rounded-full bg-green-100 text-green-800">Paid</span>
+              </td>
+              <td class="px-6 py-4">
+                <div class="flex space-x-3">
+                  <button class="text-gray-500 hover:text-gray-700" aria-label="View"><i data-lucide="eye" class="h-4 w-4"></i></button>
+                  <button class="text-gray-500 hover:text-gray-700" aria-label="Download"><i data-lucide="download" class="h-4 w-4"></i></button>
+                  <button class="text-gray-500 hover:text-gray-700" aria-label="Send"><i data-lucide="send" class="h-4 w-4"></i></button>
+                </div>
+              </td>
+            </tr>
+            <tr>
+              <td class="px-6 py-4">
+                <span class="font-medium">INV-2025-002</span>
+                <p class="text-xs text-gray-500">Follow-up</p>
+              </td>
+              <td class="px-6 py-4 flex items-center space-x-2">
+                <i data-lucide="user" class="h-5 w-5 text-gray-600"></i>
+                <span>Michael Chen</span>
+              </td>
+              <td class="px-6 py-4">$100.00</td>
+              <td class="px-6 py-4">Jan 14, 2025</td>
+              <td class="px-6 py-4">
+                <span class="px-2 py-1 text-xs rounded-full bg-yellow-100 text-yellow-800">Pending</span>
+              </td>
+              <td class="px-6 py-4">
+                <div class="flex space-x-3">
+                  <button class="text-gray-500 hover:text-gray-700"><i data-lucide="eye" class="h-4 w-4"></i></button>
+                  <button class="text-gray-500 hover:text-gray-700"><i data-lucide="download" class="h-4 w-4"></i></button>
+                  <button class="text-gray-500 hover:text-gray-700"><i data-lucide="send" class="h-4 w-4"></i></button>
+                </div>
+              </td>
+            </tr>
+            <tr>
+              <td class="px-6 py-4">
+                <span class="font-medium">INV-2025-003</span>
+                <p class="text-xs text-gray-500">Lab Tests</p>
+              </td>
+              <td class="px-6 py-4 flex items-center space-x-2">
+                <i data-lucide="user" class="h-5 w-5 text-gray-600"></i>
+                <span>Emily Davis</span>
+              </td>
+              <td class="px-6 py-4">$280.00</td>
+              <td class="px-6 py-4">Jan 10, 2025</td>
+              <td class="px-6 py-4">
+                <span class="px-2 py-1 text-xs rounded-full bg-red-100 text-red-800">Overdue</span>
+              </td>
+              <td class="px-6 py-4">
+                <div class="flex space-x-3">
+                  <button class="text-gray-500 hover:text-gray-700"><i data-lucide="eye" class="h-4 w-4"></i></button>
+                  <button class="text-gray-500 hover:text-gray-700"><i data-lucide="download" class="h-4 w-4"></i></button>
+                  <button class="text-gray-500 hover:text-gray-700"><i data-lucide="send" class="h-4 w-4"></i></button>
+                </div>
+              </td>
+            </tr>
+            <tr>
+              <td class="px-6 py-4">
+                <span class="font-medium">INV-2025-004</span>
+                <p class="text-xs text-gray-500">Consultation</p>
+              </td>
+              <td class="px-6 py-4 flex items-center space-x-2">
+                <i data-lucide="smile" class="h-5 w-5 text-gray-600"></i>
+                <span>Robert Wilson</span>
+              </td>
+              <td class="px-6 py-4">$150.00</td>
+              <td class="px-6 py-4">Jan 16, 2025</td>
+              <td class="px-6 py-4">
+                <span class="px-2 py-1 text-xs rounded-full bg-green-100 text-green-800">Paid</span>
+              </td>
+              <td class="px-6 py-4">
+                <div class="flex space-x-3">
+                  <button class="text-gray-500 hover:text-gray-700"><i data-lucide="eye" class="h-4 w-4"></i></button>
+                  <button class="text-gray-500 hover:text-gray-700"><i data-lucide="download" class="h-4 w-4"></i></button>
+                  <button class="text-gray-500 hover:text-gray-700"><i data-lucide="send" class="h-4 w-4"></i></button>
+                </div>
+              </td>
+            </tr>
+          </tbody>
+        </table>
+
+        <!-- Footer -->
+        <div class="flex items-center justify-between px-6 py-3 bg-white border-t text-sm">
+          <p>Showing 4 of 23 invoices</p>
+          <nav class="inline-flex space-x-1">
+            <button class="px-3 py-1 rounded border text-gray-600 hover:bg-gray-50">Previous</button>
+            <button class="px-3 py-1 rounded border bg-gray-900 text-white">1</button>
+            <button class="px-3 py-1 rounded border hover:bg-gray-50">2</button>
+            <button class="px-3 py-1 rounded border hover:bg-gray-50">3</button>
+            <button class="px-3 py-1 rounded border text-gray-600 hover:bg-gray-50">Next</button>
+          </nav>
+        </div>
+      </div>
+    </section>
+  </main>
+
+  <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.min.js"></script>
+  <script>
+    lucide.createIcons();
+  </script>
+</body>
+</html>
\ No newline at end of file
diff --git a/assets/html/9. Settings.html b/assets/html/9. Settings.html
new file mode 100644
index 0000000..0f86625
--- /dev/null
+++ b/assets/html/9. Settings.html	
@@ -0,0 +1,244 @@
+<!DOCTYPE html>
+<html lang="en" class="h-full">
+<head>
+<meta charset="UTF-8">
+<meta name="viewport" content="width=device-width, initial-scale=1.0">
+<title>ClinicPro ‑ Settings</title>
+<link rel="preconnect" href="https://fonts.googleapis.com">
+<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
+<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
+<script src="https://cdn.tailwindcss.com?plugins=forms,typography"></script>
+</head>
+<body class="h-full bg-gray-50 font-[Inter] text-gray-900 antialiased">
+<div class="flex h-full">
+  <!-- Sidebar -->
+  <aside class="hidden lg:flex lg:flex-col lg:w-64 bg-white border-r">
+    <div class="flex items-center gap-2 px-6 py-4 border-b">
+      <div class="w-7 h-7 rounded-md bg-gray-900 flex items-center justify-center">
+        <i data-lucide="shield" class="w-4 h-4 text-white"></i>
+      </div>
+      <span class="text-lg font-semibold">ClinicPro</span>
+    </div>
+    <nav class="flex-1 overflow-y-auto">
+      <ul class="space-y-px px-2 py-4">
+        <li>
+          <a href="#" class="flex items-center gap-3 rounded-md px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+            <i data-lucide="home" class="w-4 h-4"></i> Home
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 rounded-md px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+            <i data-lucide="calendar" class="w-4 h-4"></i> Appointments
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 rounded-md px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+            <i data-lucide="users" class="w-4 h-4"></i> Patients
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 rounded-md px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+            <i data-lucide="file-plus" class="w-4 h-4"></i> Prescriptions
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 rounded-md px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+            <i data-lucide="flask-conical" class="w-4 h-4"></i> Lab Orders
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 rounded-md px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100">
+            <i data-lucide="credit-card" class="w-4 h-4"></i> Billing
+          </a>
+        </li>
+        <li>
+          <a href="#" class="flex items-center gap-3 rounded-md px-3 py-2 text-sm font-medium text-white bg-gray-900">
+            <i data-lucide="settings" class="w-4 h-4 text-white"></i> Settings
+          </a>
+        </li>
+      </ul>
+    </nav>
+    <div class="px-6 py-4 text-xs text-gray-500 border-t space-y-1">
+      <p>© 2025 ClinicPro. All rights reserved.</p>
+      <div class="flex gap-4">
+        <a href="#" class="hover:underline">Support</a>
+        <a href="#" class="hover:underline">Privacy</a>
+      </div>
+    </div>
+  </aside>
+
+  <!-- Main -->
+  <main class="flex-1 overflow-y-auto">
+    <header class="flex items-center justify-between border-b bg-white px-4 py-4 lg:px-10">
+      <h1 class="text-lg font-semibold">Settings</h1>
+      <button id="saveBtn" class="inline-flex items-center gap-2 rounded-md bg-gray-800 px-4 py-2 text-sm font-medium text-white hover:bg-gray-700 transition">
+        <i data-lucide="save" class="w-4 h-4"></i>
+        Save Changes
+      </button>
+    </header>
+
+    <section class="mx-auto max-w-5xl px-4 py-8 lg:px-10">
+      <!-- Tabs -->
+      <div class="border-b mb-6">
+        <nav class="-mb-px flex flex-wrap gap-6 text-sm font-medium">
+          <button data-tab="profile" class="tab-btn border-b-2 border-gray-900 text-gray-900 pb-3 flex items-center gap-2">
+            <i data-lucide="user" class="w-4 h-4"></i>
+            Profile
+          </button>
+          <button data-tab="clinic" class="tab-btn border-b-2 border-transparent hover:text-gray-900 pb-3 flex items-center gap-2">
+            <i data-lucide="building" class="w-4 h-4"></i>
+            Clinic Information
+          </button>
+          <button data-tab="staff" class="tab-btn border-b-2 border-transparent hover:text-gray-900 pb-3 flex items-center gap-2">
+            <i data-lucide="shield-plus" class="w-4 h-4"></i>
+            Staff & Permissions
+          </button>
+          <button data-tab="notifications" class="tab-btn border-b-2 border-transparent hover:text-gray-900 pb-3 flex items-center gap-2">
+            <i data-lucide="bell" class="w-4 h-4"></i>
+            Notifications
+          </button>
+        </nav>
+      </div>
+
+      <!-- Profile Tab -->
+      <div id="profile" class="tab-panel space-y-8">
+        <div class="space-y-6 bg-white rounded-lg border p-6">
+          <h2 class="font-medium">Profile Information</h2>
+          <div class="flex flex-col sm:flex-row gap-6">
+            <div class="flex-shrink-0">
+              <img src="https://avatars.githubusercontent.com/u/9919?s=200&v=4" alt="Avatar" class="h-24 w-24 rounded-md object-cover">
+            </div>
+            <div class="space-y-3">
+              <button class="rounded-md border px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 transition">
+                Change Photo
+              </button>
+              <p class="text-xs text-gray-500">JPG, PNG or GIF. Max size 2MB.</p>
+            </div>
+          </div>
+
+          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
+            <div>
+              <label class="block text-sm font-medium mb-1" for="firstName">First Name</label>
+              <input id="firstName" type="text" value="Dr. John" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-900 focus:ring-gray-900 sm:text-sm">
+            </div>
+            <div>
+              <label class="block text-sm font-medium mb-1" for="lastName">Last Name</label>
+              <input id="lastName" type="text" value="Smith" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-900 focus:ring-gray-900 sm:text-sm">
+            </div>
+            <div>
+              <label class="block text-sm font-medium mb-1" for="email">Email</label>
+              <input id="email" type="email" value="dr.smith@clinicpro.com" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-900 focus:ring-gray-900 sm:text-sm">
+            </div>
+            <div>
+              <label class="block text-sm font-medium mb-1" for="phone">Phone</label>
+              <input id="phone" type="tel" value="+1 (555) 123-4567" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-900 focus:ring-gray-900 sm:text-sm">
+            </div>
+            <div>
+              <label class="block text-sm font-medium mb-1" for="specialty">Specialty</label>
+              <select id="specialty" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-900 focus:ring-gray-900 sm:text-sm">
+                <option>General Practice</option>
+                <option>Pediatrics</option>
+                <option>Dermatology</option>
+              </select>
+            </div>
+            <div>
+              <label class="block text-sm font-medium mb-1" for="license">License Number</label>
+              <input id="license" type="text" value="MD12345678" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-900 focus:ring-gray-900 sm:text-sm">
+            </div>
+            <div class="md:col-span-2">
+              <label class="block text-sm font-medium mb-1" for="bio">Bio</label>
+              <textarea id="bio" rows="4" class="block w-full rounded-md border-gray-300 shadow-sm focus:border-gray-900 focus:ring-gray-900 sm:text-sm">Dr. John Smith is a board-certified physician with over 15 years of experience in general practice.</textarea>
+            </div>
+          </div>
+        </div>
+
+        <!-- Working Hours -->
+        <div class="space-y-4 bg-white rounded-lg border p-6">
+          <h2 class="font-medium">Working Hours</h2>
+          <div class="space-y-3">
+            <!-- Day Row -->
+            <template id="day-row">
+              <div class="grid grid-cols-1 lg:grid-cols-7 gap-3 items-center">
+                <!-- Checkbox -->
+                <div class="flex items-center gap-3 lg:col-span-2">
+                  <label class="relative flex items-center cursor-pointer">
+                    <input type="checkbox" class="peer sr-only">
+                    <span class="h-4 w-4 rounded border border-gray-300 flex items-center justify-center peer-checked:bg-gray-900 peer-checked:border-gray-900 peer-checked:[&>svg]:block">
+                      <svg class="hidden w-3 h-3 text-white" viewBox="0 0 16 16" fill="none" stroke="currentColor" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"><polyline points="4 8.5 7 11.5 12 5.5"></polyline></svg>
+                    </span>
+                  </label>
+                  <span class="text-sm font-medium day-name"></span>
+                </div>
+                <!-- Start -->
+                <div class="flex items-center gap-2">
+                  <input type="time" value="09:00" class="h-9 w-full rounded-md border-gray-300 text-sm shadow-sm focus:border-gray-900 focus:ring-gray-900">
+                  <span class="text-sm">to</span>
+                  <input type="time" value="17:00" class="h-9 w-full rounded-md border-gray-300 text-sm shadow-sm focus:border-gray-900 focus:ring-gray-900">
+                </div>
+              </div>
+            </template>
+            <!-- Rows inserted by JS -->
+            <div id="hours-container" class="space-y-3"></div>
+          </div>
+        </div>
+      </div>
+
+      <!-- Placeholder panels for other tabs -->
+      <div id="clinic" class="tab-panel hidden">
+        <div class="bg-white rounded-lg border p-6 text-sm text-gray-500">Clinic Information settings will appear here.</div>
+      </div>
+      <div id="staff" class="tab-panel hidden">
+        <div class="bg-white rounded-lg border p-6 text-sm text-gray-500">Staff & Permissions settings will appear here.</div>
+      </div>
+      <div id="notifications" class="tab-panel hidden">
+        <div class="bg-white rounded-lg border p-6 text-sm text-gray-500">Notification settings will appear here.</div>
+      </div>
+    </section>
+  </main>
+</div>
+
+<script src="https://unpkg.com/lucide@latest/dist/umd/lucide.min.js"></script>
+<script>
+  lucide.createIcons();
+
+  // Tab handling
+  document.querySelectorAll('.tab-btn').forEach(btn=>{
+    btn.addEventListener('click',()=>{
+      document.querySelectorAll('.tab-btn').forEach(b=>b.classList.remove('border-gray-900','text-gray-900'));
+      btn.classList.add('border-gray-900','text-gray-900');
+
+      const id = btn.dataset.tab;
+      document.querySelectorAll('.tab-panel').forEach(p=>p.classList.add('hidden'));
+      document.getElementById(id).classList.remove('hidden');
+    })
+  });
+
+  // Working hours rows
+  const days = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];
+  const container = document.getElementById('hours-container');
+  const tmpl = document.getElementById('day-row').content;
+  days.forEach((day,i)=>{
+    const node = tmpl.cloneNode(true);
+    node.querySelector('.day-name').textContent = day;
+    const checkbox = node.querySelector('input[type=checkbox]');
+    if([0,2,4].includes(i)){ checkbox.checked = true; checkbox.parentElement.querySelector('svg').style.display='block'; checkbox.parentElement.parentElement.parentElement.querySelectorAll('input[type=time]').forEach(t=>t.disabled=false); }
+    else{ checkbox.parentElement.parentElement.parentElement.querySelectorAll('input[type=time]').forEach(t=>t.disabled=true); }
+    checkbox.addEventListener('change',e=>{
+      const times = e.target.parentElement.parentElement.parentElement.querySelectorAll('input[type=time]');
+      times.forEach(t=>t.disabled=!e.target.checked);
+    });
+    container.appendChild(node);
+  });
+
+  // Downloadable file (optional trigger via save)
+  document.getElementById('saveBtn').addEventListener('click',()=>{
+    const blob = new Blob([document.documentElement.outerHTML],{type:'text/html'});
+    const a = document.createElement('a');
+    a.href = URL.createObjectURL(blob);
+    a.download = 'clinicpro-settings.html';
+    a.click();
+    URL.revokeObjectURL(a.href);
+  });
+</script>
+</body>
+</html>
diff --git a/assets/html/Dashboard.html b/assets/html/Dashboard.html
new file mode 100644
index 0000000..c6b8199
--- /dev/null
+++ b/assets/html/Dashboard.html
@@ -0,0 +1,223 @@
+<!DOCTYPE html>
+<html lang="en" class="h-full">
+<head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width,initial-scale=1.0">
+  <title>ClinicPro Dashboard</title>
+  <link rel="preconnect" href="https://fonts.bunny.net">
+  <link href="https://fonts.bunny.net/css?family=inter:400,500,600,700" rel="stylesheet" />
+  <script src="https://cdn.tailwindcss.com?plugins=forms,typography,aspect-ratio"></script>
+  <script>
+    tailwind.config = { theme: { fontFamily: { sans: ['Inter', 'ui-sans-serif', 'system-ui'] } } }
+  </script>
+</head>
+<body class="h-full bg-gray-50 text-gray-900">
+  <div class="flex h-full">
+    <!-- Sidebar -->
+    <aside class="hidden lg:flex lg:flex-col w-60 border-r bg-white">
+      <div class="flex items-center gap-3 px-6 py-5">
+        <div class="w-9 h-9 bg-gray-800 rounded-md flex items-center justify-center">
+          <i data-lucide="eye" class="w-5 h-5 text-white"></i>
+        </div>
+        <span class="font-semibold text-lg tracking-tight">ClinicPro</span>
+      </div>
+      <nav class="flex-1 space-y-1 px-3">
+        <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md bg-gray-100 font-medium text-gray-900">
+          <i data-lucide="home" class="w-4 h-4"></i><span>Home</span>
+        </button>
+        <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md text-gray-700 hover:bg-gray-100">
+          <i data-lucide="calendar" class="w-4 h-4"></i><span>Appointments</span>
+        </button>
+        <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md text-gray-700 hover:bg-gray-100">
+          <i data-lucide="users" class="w-4 h-4"></i><span>Patients</span>
+        </button>
+        <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md text-gray-700 hover:bg-gray-100">
+          <i data-lucide="book-open" class="w-4 h-4"></i><span>Prescriptions</span>
+        </button>
+        <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md text-gray-700 hover:bg-gray-100">
+          <i data-lucide="flask-conical" class="w-4 h-4"></i><span>Lab Orders</span>
+        </button>
+        <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md text-gray-700 hover:bg-gray-100">
+          <i data-lucide="credit-card" class="w-4 h-4"></i><span>Billing</span>
+        </button>
+        <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md text-gray-700 hover:bg-gray-100">
+          <i data-lucide="settings" class="w-4 h-4"></i><span>Settings</span>
+        </button>
+      </nav>
+      <div class="px-6 py-4">
+        <p class="text-xs text-gray-400">&copy; 2025 ClinicPro. All rights reserved.</p>
+      </div>
+    </aside>
+
+    <!-- Mobile sidebar trigger -->
+    <header class="lg:hidden flex items-center justify-between px-4 py-3 bg-white border-b w-full">
+      <button id="mobileMenuBtn" class="p-2 rounded-md border text-gray-600">
+        <i data-lucide="menu" class="w-5 h-5"></i>
+      </button>
+      <span class="font-semibold">ClinicPro</span>
+      <button class="relative p-2 rounded-md border text-gray-600">
+        <i data-lucide="bell" class="w-5 h-5"></i>
+        <span class="absolute -top-1 -right-1 inline-flex h-2 w-2 rounded-full bg-red-500"></span>
+      </button>
+    </header>
+
+    <!-- Drawer -->
+    <div id="drawer" class="fixed inset-0 bg-black/40 z-40 hidden">
+      <div class="relative w-64 bg-white h-full shadow-lg">
+        <div class="flex items-center gap-3 px-6 py-5 border-b">
+          <div class="w-9 h-9 bg-gray-800 rounded-md flex items-center justify-center">
+            <i data-lucide="eye" class="w-5 h-5 text-white"></i>
+          </div>
+          <span class="font-semibold text-lg">ClinicPro</span>
+        </div>
+        <nav class="flex-1 space-y-1 px-3 pt-4">
+          <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md bg-gray-100 font-medium text-gray-900">
+            <i data-lucide="home" class="w-4 h-4"></i><span>Home</span>
+          </button>
+          <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md text-gray-700 hover:bg-gray-100">
+            <i data-lucide="calendar" class="w-4 h-4"></i><span>Appointments</span>
+          </button>
+          <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md text-gray-700 hover:bg-gray-100">
+            <i data-lucide="users" class="w-4 h-4"></i><span>Patients</span>
+          </button>
+          <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md text-gray-700 hover:bg-gray-100">
+            <i data-lucide="book-open" class="w-4 h-4"></i><span>Prescriptions</span>
+          </button>
+          <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md text-gray-700 hover:bg-gray-100">
+            <i data-lucide="flask-conical" class="w-4 h-4"></i><span>Lab Orders</span>
+          </button>
+          <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md text-gray-700 hover:bg-gray-100">
+            <i data-lucide="credit-card" class="w-4 h-4"></i><span>Billing</span>
+          </button>
+          <button class="w-full flex items-center gap-3 px-3 py-2 rounded-md text-gray-700 hover:bg-gray-100">
+            <i data-lucide="settings" class="w-4 h-4"></i><span>Settings</span>
+          </button>
+        </nav>
+      </div>
+    </div>
+
+    <!-- Main content -->
+    <main class="flex-1 overflow-y-auto">
+      <div class="px-6 py-6">
+        <div class="flex items-center justify-between">
+          <h1 class="text-2xl font-semibold">Dashboard</h1>
+          <button class="flex items-center gap-2 rounded-md bg-gray-800 text-white text-sm font-medium px-3 py-2">
+            <i data-lucide="plus" class="w-4 h-4"></i><span>Quick Add</span>
+          </button>
+        </div>
+
+        <!-- Stats -->
+        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mt-6">
+          <div class="rounded-lg border bg-white p-5 flex justify-between">
+            <div>
+              <p class="text-sm text-gray-500">Today's Appointments</p>
+              <p class="text-2xl font-semibold mt-1">12</p>
+            </div>
+            <div class="w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center">
+              <i data-lucide="calendar-check" class="w-5 h-5 text-gray-600"></i>
+            </div>
+          </div>
+          <div class="rounded-lg border bg-white p-5 flex justify-between">
+            <div>
+              <p class="text-sm text-gray-500">Pending Payments</p>
+              <p class="text-2xl font-semibold mt-1">5</p>
+            </div>
+            <div class="w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center">
+              <i data-lucide="clock" class="w-5 h-5 text-gray-600"></i>
+            </div>
+          </div>
+          <div class="rounded-lg border bg-white p-5 flex justify-between">
+            <div>
+              <p class="text-sm text-gray-500">Lab Results</p>
+              <p class="text-2xl font-semibold mt-1">3</p>
+            </div>
+            <div class="w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center">
+              <i data-lucide="flask-conical" class="w-5 h-5 text-gray-600"></i>
+            </div>
+          </div>
+          <div class="rounded-lg border bg-white p-5 flex justify-between">
+            <div>
+              <p class="text-sm text-gray-500">Revenue Today</p>
+              <p class="text-2xl font-semibold mt-1">$2,450</p>
+            </div>
+            <div class="w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center">
+              <i data-lucide="dollar-sign" class="w-5 h-5 text-gray-600"></i>
+            </div>
+          </div>
+        </div>
+
+        <!-- Schedule -->
+        <section class="mt-8">
+          <div class="flex items-center justify-between">
+            <h2 class="text-lg font-semibold">Today's Schedule</h2>
+            <div class="inline-flex rounded-md shadow-sm">
+              <button class="px-3 py-1.5 text-sm font-medium border border-gray-300 rounded-l-md text-gray-600 hover:bg-gray-100" id="viewWeek">Week</button>
+              <button class="px-3 py-1.5 text-sm font-medium border border-gray-300 bg-gray-800 text-white rounded-r-md" id="viewDay">Day</button>
+            </div>
+          </div>
+
+          <div class="mt-4 space-y-3">
+            <!-- Item -->
+            <div class="flex items-center justify-between bg-white border rounded-lg p-4">
+              <div class="flex items-center gap-3">
+                <img src="https://api.dicebear.com/6.x/personas/svg?seed=Sarah" alt="Sarah" class="w-10 h-10 rounded-full" />
+                <div>
+                  <p class="font-medium">Sarah Johnson</p>
+                  <p class="text-sm text-gray-500">9:00 AM - General Checkup</p>
+                </div>
+              </div>
+              <div class="flex items-center gap-3">
+                <span class="text-xs bg-gray-100 text-gray-700 px-2 py-0.5 rounded-full">Paid</span>
+                <button class="text-xs font-medium bg-gray-800 text-white px-3 py-2 rounded-md">Join Call</button>
+              </div>
+            </div>
+            <!-- Item -->
+            <div class="flex items-center justify-between bg-white border rounded-lg p-4">
+              <div class="flex items-center gap-3">
+                <img src="https://api.dicebear.com/6.x/personas/svg?seed=Michael" alt="Michael" class="w-10 h-10 rounded-full" />
+                <div>
+                  <p class="font-medium">Michael Chen</p>
+                  <p class="text-sm text-gray-500">10:30 AM - Follow-up</p>
+                </div>
+              </div>
+              <div class="flex items-center gap-3">
+                <span class="text-xs bg-gray-100 text-gray-700 px-2 py-0.5 rounded-full">Pending</span>
+                <button class="text-xs font-medium bg-gray-100 text-gray-700 px-3 py-2 rounded-md">Awaiting Payment</button>
+              </div>
+            </div>
+            <!-- Item -->
+            <div class="flex items-center justify-between bg-white border rounded-lg p-4">
+              <div class="flex items-center gap-3">
+                <img src="https://api.dicebear.com/6.x/personas/svg?seed=Emily" alt="Emily" class="w-10 h-10 rounded-full" />
+                <div>
+                  <p class="font-medium">Emily Davis</p>
+                  <p class="text-sm text-gray-500">2:00 PM - Consultation</p>
+                </div>
+              </div>
+              <div class="flex items-center gap-3">
+                <span class="text-xs bg-gray-100 text-gray-700 px-2 py-0.5 rounded-full">Overdue</span>
+                <button class="text-xs font-medium bg-gray-800 text-white px-3 py-2 rounded-md">Send Reminder</button>
+              </div>
+            </div>
+          </div>
+        </section>
+      </div>
+    </main>
+  </div>
+
+  <script src="https://unpkg.com/lucide@latest"></script>
+  <script>
+    lucide.createIcons();
+
+    // Mobile drawer
+    const drawer = document.getElementById('drawer');
+    const btn = document.getElementById('mobileMenuBtn');
+    btn.addEventListener('click', () => {
+      drawer.classList.toggle('hidden');
+    });
+    drawer.addEventListener('click', (e) => {
+      if (e.target === drawer) drawer.classList.add('hidden');
+    });
+  </script>
+</body>
+</html>
diff --git a/assets/html/New Appointment with AI.html b/assets/html/New Appointment with AI.html
new file mode 100644
index 0000000..eeaa938
--- /dev/null
+++ b/assets/html/New Appointment with AI.html	
@@ -0,0 +1,176 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+<meta charset="UTF-8">
+<meta name="viewport" content="width=device-width,initial-scale=1">
+<title>ClinicPro – New Appointment</title>
+<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet">
+<script src="https://cdn.tailwindcss.com?plugins=forms,typography"></script>
+<script src="https://unpkg.com/lucide@latest"></script>
+<style>html{font-family:'Inter',sans-serif}</style>
+</head>
+<body class="bg-gray-50 text-gray-900">
+<div class="flex h-screen">
+  <!-- Sidebar -->
+  <aside class="w-64 bg-white border-r flex flex-col">
+    <div class="h-14 flex items-center px-6 border-b">
+      <span class="text-lg font-semibold">ClinicPro</span>
+    </div>
+    <nav class="flex-1 overflow-y-auto py-4">
+      <ul class="space-y-1 px-2">
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100"><i data-lucide="home" class="w-5 h-5"></i><span>Home</span></a></li>
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md bg-gray-100 font-medium"><i data-lucide="calendar-plus" class="w-5 h-5"></i><span>Appointments</span></a></li>
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100"><i data-lucide="users" class="w-5 h-5"></i><span>Patients</span></a></li>
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100"><i data-lucide="file-text" class="w-5 h-5"></i><span>Prescriptions</span></a></li>
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100"><i data-lucide="flask-conical" class="w-5 h-5"></i><span>Lab Orders</span></a></li>
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100"><i data-lucide="credit-card" class="w-5 h-5"></i><span>Billing</span></a></li>
+        <li><a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md hover:bg-gray-100"><i data-lucide="settings" class="w-5 h-5"></i><span>Settings</span></a></li>
+      </ul>
+    </nav>
+  </aside>
+
+  <!-- Main Content -->
+  <main class="flex-1 relative overflow-y-auto">
+    <div class="p-8">
+      <button onclick="openModal()" class="inline-flex items-center gap-2 bg-indigo-600 text-white px-4 py-2 rounded-md shadow hover:bg-indigo-700 transition">
+        <i data-lucide="plus" class="w-4 h-4"></i><span>New Appointment</span>
+      </button>
+    </div>
+
+    <!-- Overlay -->
+    <div id="modalOverlay" class="fixed inset-0 bg-black/40 flex items-start justify-center pt-8 overflow-y-auto z-20 hidden">
+      <!-- Modal -->
+      <div class="bg-white rounded-lg shadow-xl w-full max-w-3xl mx-4 md:mx-0">
+        <!-- Header -->
+        <div class="flex items-center justify-between px-6 py-4 border-b">
+          <h2 class="text-lg font-semibold">New Appointment</h2>
+          <button onclick="closeModal()" class="text-gray-500 hover:text-gray-700">
+            <i data-lucide="x" class="w-5 h-5"></i>
+          </button>
+        </div>
+
+        <!-- Body -->
+        <div class="p-6 space-y-6">
+          <!-- AI Assistant -->
+          <section class="border rounded-lg">
+            <header class="flex items-center gap-2 px-4 py-3 border-b">
+              <i data-lucide="bot" class="w-5 h-5 text-indigo-600"></i>
+              <span class="font-medium">AI Assistant – Quick Form Fill</span>
+            </header>
+            <div class="p-4 space-y-3">
+              <textarea id="aiPrompt" rows="3" placeholder="Describe the appointment in natural language… e.g., 'Schedule Sarah Johnson for a follow-up on January 20th at 2 PM for her diabetes checkup'" class="w-full resize-none rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500"></textarea>
+              <div class="flex items-center justify-end">
+                <button onclick="autoFill()" class="inline-flex items-center gap-2 bg-gray-900 text-white px-3 py-1.5 rounded-md text-sm hover:bg-gray-800">
+                  <i data-lucide="wand-2" class="w-4 h-4"></i><span>Auto-Fill</span>
+                </button>
+              </div>
+              <p class="text-xs text-gray-500">AI will automatically fill the form fields below</p>
+            </div>
+          </section>
+
+          <!-- Appointment Details -->
+          <section class="grid grid-cols-1 md:grid-cols-2 gap-4">
+            <div>
+              <label class="block text-sm font-medium mb-1" for="date">Appointment Date</label>
+              <div class="relative">
+                <input id="date" type="date" class="peer w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 pl-3 pr-10">
+                <i data-lucide="calendar" class="absolute right-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none"></i>
+              </div>
+            </div>
+            <div>
+              <label class="block text-sm font-medium mb-1" for="time">Time</label>
+              <div class="relative">
+                <select id="time" class="w-full appearance-none rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 pr-10">
+                  <option>8:00 AM</option><option selected>9:00 AM</option><option>10:00 AM</option><option>11:00 AM</option><option>2:00 PM</option><option>3:00 PM</option>
+                </select>
+                <i data-lucide="chevron-down" class="absolute right-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none"></i>
+              </div>
+            </div>
+          </section>
+
+          <!-- Patient -->
+          <section>
+            <label class="block text-sm font-medium mb-1" for="patientSearch">Patient</label>
+            <div class="relative">
+              <input id="patientSearch" type="text" placeholder="Search existing patient or add new…" oninput="filterPatients(this.value)" class="w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 pl-10">
+              <i data-lucide="search" class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400"></i>
+            </div>
+            <ul id="patientList" class="mt-2 max-h-36 overflow-y-auto border rounded-md divide-y">
+              <li class="flex items-center gap-3 px-4 py-2 cursor-pointer hover:bg-gray-50" onclick="selectPatient('Sarah Johnson')">
+                <i data-lucide="user" class="w-4 h-4"></i>
+                <div>
+                  <p class="font-medium leading-none">Sarah Johnson</p>
+                  <p class="text-xs text-gray-500">sarah_j@email.com</p>
+                </div>
+              </li>
+              <li class="flex items-center gap-3 px-4 py-2 cursor-pointer hover:bg-gray-50" onclick="selectPatient('Michael Chen')">
+                <i data-lucide="user" class="w-4 h-4"></i>
+                <div>
+                  <p class="font-medium leading-none">Michael Chen</p>
+                  <p class="text-xs text-gray-500">m.chen@email.com</p>
+                </div>
+              </li>
+              <li class="flex items-center gap-3 px-4 py-2 cursor-pointer hover:bg-gray-50" onclick="addNewPatient()">
+                <i data-lucide="user-plus" class="w-4 h-4"></i>
+                <p class="font-medium">Add New Patient</p>
+              </li>
+            </ul>
+          </section>
+
+          <!-- New Patient Info -->
+          <section id="newPatientSection" class="border rounded-lg hidden">
+            <header class="flex items-center justify-between px-4 py-3 border-b">
+              <span class="font-medium">New Patient Information</span>
+              <button onclick="smartFill()" class="inline-flex items-center gap-1 text-sm bg-gray-900 text-white px-2.5 py-1.5 rounded-md hover:bg-gray-800">
+                <i data-lucide="wand-2" class="w-3.5 h-3.5"></i><span>Smart Fill</span>
+              </button>
+            </header>
+            <div class="p-4 grid grid-cols-1 md:grid-cols-2 gap-4">
+              <div>
+                <label class="block text-sm font-medium mb-1">First Name</label>
+                <input type="text" class="w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500">
+              </div>
+              <div>
+                <label class="block text-sm font-medium mb-1">Last Name</label>
+                <input type="text" class="w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500">
+              </div>
+              <div>
+                <label class="block text-sm font-medium mb-1">Email</label>
+                <input type="email" class="w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500">
+              </div>
+              <div>
+                <label class="block text-sm font-medium mb-1">Phone</label>
+                <input type="tel" class="w-full rounded-md border-gray-300 focus:border-indigo-500 focus:ring-indigo-500">
+              </div>
+            </div>
+          </section>
+        </div>
+
+        <!-- Footer -->
+        <div class="px-6 py-4 border-t flex justify-end gap-3">
+          <button onclick="closeModal()" class="px-4 py-2 rounded-md border text-gray-700 hover:bg-gray-50">Cancel</button>
+          <button class="px-4 py-2 rounded-md bg-indigo-600 text-white hover:bg-indigo-700">Save Appointment</button>
+        </div>
+      </div>
+    </div>
+  </main>
+</div>
+
+<script>
+function openModal(){document.getElementById('modalOverlay').classList.remove('hidden')}
+function closeModal(){document.getElementById('modalOverlay').classList.add('hidden')}
+function autoFill(){document.getElementById('aiPrompt').value='';alert('AI auto-filled the form!')}
+function smartFill(){alert('Smart filled patient info!')}
+function selectPatient(name){document.getElementById('patientSearch').value=name}
+function addNewPatient(){document.getElementById('newPatientSection').classList.remove('hidden')}
+function filterPatients(query){
+  const items=[...document.querySelectorAll('#patientList li')];
+  items.forEach(li=>{
+    const text=li.innerText.toLowerCase();
+    li.classList.toggle('hidden',!text.includes(query.toLowerCase()))
+  })
+}
+lucide.createIcons();
+</script>
+</body>
+</html>
\ No newline at end of file
diff --git a/assets/html/Patients.html b/assets/html/Patients.html
new file mode 100644
index 0000000..b0ef90f
--- /dev/null
+++ b/assets/html/Patients.html
@@ -0,0 +1,837 @@
+<html lang="en" class="h-full"><head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width, initial-scale=1.0">
+  <title>Patients – ClinicPro</title>
+  <script src="https://cdn.tailwindcss.com"></script>
+  <script src="https://unpkg.com/lucide@latest"></script>
+  <link rel="preconnect" href="https://fonts.googleapis.com">
+  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="">
+  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&amp;display=swap" rel="stylesheet">
+  <style>
+    body { font-family: 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, 'Noto Sans', sans-serif; }
+    ::-webkit-scrollbar { width: 6px; height: 6px; }
+    ::-webkit-scrollbar-thumb { background: #c4c4c4; border-radius: 3px; }
+  </style>
+</head>
+<body class="h-full bg-gray-50 text-gray-800">
+  <div class="flex h-full">
+    <!-- Sidebar -->
+    <aside class="fixed inset-y-0 left-0 z-50 w-64 shrink-0 bg-white border-r transform lg:translate-x-0 transition-transform duration-200 flex flex-col">
+      <div class="flex items-center gap-2 h-16 px-6 border-b">
+        <div class="w-8 h-8 bg-indigo-600 rounded-md flex items-center justify-center">
+          <i data-lucide="heart-pulse" class="w-4 h-4 text-white"></i>
+        </div>
+        <span class="font-semibold text-lg tracking-tight">ClinicPro</span>
+      </div>
+      <div class="flex-1 overflow-y-auto py-4">
+        <nav class="space-y-1 px-4">
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-gray-600 hover:bg-gray-100">
+            <i data-lucide="home" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Home</span>
+          </a>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-gray-600 hover:bg-gray-100">
+            <i data-lucide="calendar" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Appointments</span>
+          </a>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md bg-indigo-50 text-indigo-700">
+            <i data-lucide="users" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Patients</span>
+          </a>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-gray-600 hover:bg-gray-100">
+            <i data-lucide="pill" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Prescriptions</span>
+          </a>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-gray-600 hover:bg-gray-100">
+            <i data-lucide="flask-conical" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Lab Orders</span>
+          </a>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-gray-600 hover:bg-gray-100">
+            <i data-lucide="credit-card" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Billing</span>
+          </a>
+          <a href="#" class="flex items-center gap-3 px-3 py-2 rounded-md text-gray-600 hover:bg-gray-100">
+            <i data-lucide="settings" class="w-5 h-5"></i>
+            <span class="text-sm font-medium">Settings</span>
+          </a>
+        </nav>
+      </div>
+      <div class="flex items-center gap-3 h-16 px-6 border-t">
+        <img src="https://api.dicebear.com/7.x/personas/svg?seed=doctor" alt="" class="w-8 h-8 rounded-full">
+        <div class="min-w-0">
+          <p class="text-sm font-medium truncate">Dr. Taylor</p>
+          <p class="text-xs text-gray-500 truncate">Administrator</p>
+        </div>
+      </div>
+    </aside>
+
+    <!-- Main Content -->
+    <div class="flex-1 flex flex-col overflow-hidden lg:ml-64">
+      <!-- Patients Table View -->
+      <div id="patientsTable" class="flex-1 flex flex-col">
+        <!-- Header -->
+        <header class="flex items-center justify-between h-16 px-4 sm:px-6 lg:px-8 border-b bg-white">
+          <div class="flex items-center gap-3">
+            <h1 class="text-xl font-semibold tracking-tight">Patients</h1>
+          </div>
+          <div class="flex items-center gap-4">
+            <button class="relative text-gray-600 hover:text-gray-900">
+              <i data-lucide="bell" class="w-5 h-5"></i>
+              <span class="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full text-xs text-white flex items-center justify-center" style="font-size: 10px;">3</span>
+            </button>
+            <img src="https://api.dicebear.com/7.x/personas/svg?seed=doctor" alt="" class="w-8 h-8 rounded-full">
+          </div>
+        </header>
+
+        <!-- Content -->
+        <main class="flex-1 overflow-y-auto p-4 sm:p-6 lg:p-8">
+          <div class="max-w-7xl mx-auto">
+            <!-- Actions Bar -->
+            <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-6">
+              <div class="flex items-center gap-3">
+                <button class="inline-flex items-center gap-2 bg-gray-900 hover:bg-gray-800 text-white text-sm font-medium px-4 py-2 rounded-md">
+                  <i data-lucide="plus" class="w-4 h-4"></i>
+                  Add Patient
+                </button>
+                <button class="inline-flex items-center gap-2 bg-white hover:bg-gray-50 text-gray-900 text-sm font-medium px-4 py-2 rounded-md border">
+                  <i data-lucide="download" class="w-4 h-4"></i>
+                  Export
+                </button>
+              </div>
+              <div class="flex items-center gap-3">
+                <div class="relative">
+                  <i data-lucide="search" class="w-4 h-4 absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
+                  <input type="text" placeholder="Search patients..." class="pl-10 pr-4 py-2 border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
+                </div>
+                <button class="inline-flex items-center gap-2 bg-white hover:bg-gray-50 text-gray-900 text-sm font-medium px-4 py-2 rounded-md border">
+                  <i data-lucide="filter" class="w-4 h-4"></i>
+                  Filter
+                </button>
+              </div>
+            </div>
+
+            <!-- Patients Table -->
+            <div class="bg-white rounded-lg border shadow-sm">
+              <div class="overflow-x-auto">
+                <table class="w-full">
+                  <thead class="bg-gray-50 border-b">
+                    <tr>
+                      <th class="text-left py-3 px-4 font-medium text-sm text-gray-900">Patient</th>
+                      <th class="text-left py-3 px-4 font-medium text-sm text-gray-900">Age</th>
+                      <th class="text-left py-3 px-4 font-medium text-sm text-gray-900">Contact</th>
+                      <th class="text-left py-3 px-4 font-medium text-sm text-gray-900">Last Visit</th>
+                      <th class="text-left py-3 px-4 font-medium text-sm text-gray-900">Status</th>
+                      <th class="text-left py-3 px-4 font-medium text-sm text-gray-900">Actions</th>
+                    </tr>
+                  </thead>
+                  <tbody class="divide-y divide-gray-200">
+                    <tr class="hover:bg-gray-50">
+                      <td class="py-4 px-4">
+                        <div class="flex items-center gap-3">
+                          <img src="https://api.dicebear.com/7.x/personas/svg?seed=patient1" alt="" class="w-8 h-8 rounded-full">
+                          <div>
+                            <p class="font-medium text-sm cursor-pointer hover:text-indigo-600" onclick="showPatientDetails('patient1')">Sarah Johnson</p>
+                            <p class="text-xs text-gray-500">ID: P-2025-001</p>
+                          </div>
+                        </div>
+                      </td>
+                      <td class="py-4 px-4 text-sm">34</td>
+                      <td class="py-4 px-4">
+                        <p class="text-sm">sarah.j@email.com</p>
+                        <p class="text-xs text-gray-500">(555) 123-4567</p>
+                      </td>
+                      <td class="py-4 px-4 text-sm">Jan 15, 2025</td>
+                      <td class="py-4 px-4">
+                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Active</span>
+                      </td>
+                      <td class="py-4 px-4">
+                        <div class="flex items-center gap-2">
+                          <button onclick="showPatientDetails('patient1')" class="text-gray-600 hover:text-gray-900" title="View Details">
+                            <i data-lucide="eye" class="w-4 h-4"></i>
+                          </button>
+                          <button class="text-gray-600 hover:text-gray-900" title="Edit">
+                            <i data-lucide="edit-3" class="w-4 h-4"></i>
+                          </button>
+                          <button class="text-gray-600 hover:text-gray-900" title="More">
+                            <i data-lucide="more-horizontal" class="w-4 h-4"></i>
+                          </button>
+                        </div>
+                      </td>
+                    </tr>
+                    <tr class="hover:bg-gray-50">
+                      <td class="py-4 px-4">
+                        <div class="flex items-center gap-3">
+                          <img src="https://api.dicebear.com/7.x/personas/svg?seed=patient2" alt="" class="w-8 h-8 rounded-full">
+                          <div>
+                            <p class="font-medium text-sm cursor-pointer hover:text-indigo-600" onclick="showPatientDetails('patient2')">Michael Chen</p>
+                            <p class="text-xs text-gray-500">ID: P-2025-002</p>
+                          </div>
+                        </div>
+                      </td>
+                      <td class="py-4 px-4 text-sm">28</td>
+                      <td class="py-4 px-4">
+                        <p class="text-sm">m.chen@email.com</p>
+                        <p class="text-xs text-gray-500">(555) 987-6543</p>
+                      </td>
+                      <td class="py-4 px-4 text-sm">Jan 12, 2025</td>
+                      <td class="py-4 px-4">
+                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Active</span>
+                      </td>
+                      <td class="py-4 px-4">
+                        <div class="flex items-center gap-2">
+                          <button onclick="showPatientDetails('patient2')" class="text-gray-600 hover:text-gray-900" title="View Details">
+                            <i data-lucide="eye" class="w-4 h-4"></i>
+                          </button>
+                          <button class="text-gray-600 hover:text-gray-900" title="Edit">
+                            <i data-lucide="edit-3" class="w-4 h-4"></i>
+                          </button>
+                          <button class="text-gray-600 hover:text-gray-900" title="More">
+                            <i data-lucide="more-horizontal" class="w-4 h-4"></i>
+                          </button>
+                        </div>
+                      </td>
+                    </tr>
+                    <tr class="hover:bg-gray-50">
+                      <td class="py-4 px-4">
+                        <div class="flex items-center gap-3">
+                          <img src="https://api.dicebear.com/7.x/personas/svg?seed=patient3" alt="" class="w-8 h-8 rounded-full">
+                          <div>
+                            <p class="font-medium text-sm cursor-pointer hover:text-indigo-600" onclick="showPatientDetails('patient3')">Emily Rodriguez</p>
+                            <p class="text-xs text-gray-500">ID: P-2025-003</p>
+                          </div>
+                        </div>
+                      </td>
+                      <td class="py-4 px-4 text-sm">42</td>
+                      <td class="py-4 px-4">
+                        <p class="text-sm">e.rodriguez@email.com</p>
+                        <p class="text-xs text-gray-500">(555) 456-7890</p>
+                      </td>
+                      <td class="py-4 px-4 text-sm">Jan 10, 2025</td>
+                      <td class="py-4 px-4">
+                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">Pending</span>
+                      </td>
+                      <td class="py-4 px-4">
+                        <div class="flex items-center gap-2">
+                          <button onclick="showPatientDetails('patient3')" class="text-gray-600 hover:text-gray-900" title="View Details">
+                            <i data-lucide="eye" class="w-4 h-4"></i>
+                          </button>
+                          <button class="text-gray-600 hover:text-gray-900" title="Edit">
+                            <i data-lucide="edit-3" class="w-4 h-4"></i>
+                          </button>
+                          <button class="text-gray-600 hover:text-gray-900" title="More">
+                            <i data-lucide="more-horizontal" class="w-4 h-4"></i>
+                          </button>
+                        </div>
+                      </td>
+                    </tr>
+                  </tbody>
+                </table>
+              </div>
+            </div>
+          </div>
+        </main>
+      </div>
+
+      <!-- Patient Details View -->
+      <div id="patientDetails" class="flex-1 flex-col hidden">
+        <!-- Header -->
+        <header class="flex items-center justify-between h-16 px-4 sm:px-6 lg:px-8 border-b bg-white">
+          <div class="flex items-center gap-3">
+            <button onclick="showPatientsTable()" class="text-gray-600 hover:text-gray-900">
+              <i data-lucide="arrow-left" class="w-5 h-5"></i>
+            </button>
+            <h1 class="text-xl font-semibold tracking-tight">Patient Profile</h1>
+          </div>
+          <div class="flex items-center gap-4">
+            <button class="relative text-gray-600 hover:text-gray-900">
+              <i data-lucide="bell" class="w-5 h-5"></i>
+              <span class="absolute -top-1 -right-1 w-3 h-3 bg-red-500 rounded-full text-xs text-white flex items-center justify-center" style="font-size: 10px;">3</span>
+            </button>
+            <img src="https://api.dicebear.com/7.x/personas/svg?seed=doctor" alt="" class="w-8 h-8 rounded-full">
+          </div>
+        </header>
+
+        <!-- Content -->
+        <main class="flex-1 overflow-y-auto p-4 sm:p-6 lg:p-8">
+          <div class="max-w-7xl mx-auto space-y-6">
+            <!-- Header Actions -->
+            <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4">
+              <div class="flex items-center gap-3">
+                <button onclick="showPatientsTable()" class="inline-flex items-center gap-2 bg-white hover:bg-gray-50 text-gray-900 text-sm font-medium px-4 py-2 rounded-md border">
+                  <i data-lucide="arrow-left" class="w-4 h-4"></i>
+                  Back to Patients
+                </button>
+              </div>
+              <div class="flex items-center gap-3">
+                <button class="inline-flex items-center gap-2 bg-white hover:bg-gray-50 text-gray-900 text-sm font-medium px-4 py-2 rounded-md border">
+                  <i data-lucide="edit-3" class="w-4 h-4"></i>
+                  Edit
+                </button>
+                <button onclick="showBookAppointmentModal()" class="inline-flex items-center gap-2 bg-gray-900 hover:bg-gray-800 text-white text-sm font-medium px-4 py-2 rounded-md">
+                  <i data-lucide="calendar-plus" class="w-4 h-4"></i>
+                  Book Appointment
+                </button>
+              </div>
+            </div>
+
+            <div class="grid lg:grid-cols-3 gap-6">
+              <!-- Patient Card -->
+              <section class="col-span-1 bg-white border rounded-lg">
+                <div class="p-6 flex flex-col items-center text-center gap-4">
+                  <img id="patientAvatar" src="https://api.dicebear.com/7.x/personas/svg?seed=patient1" alt="" class="w-20 h-20 rounded-full">
+                  <div>
+                    <h2 id="patientName" class="font-semibold text-lg tracking-tight">Sarah Johnson</h2>
+                    <p id="patientId" class="text-sm text-gray-500">ID: P-2025-001</p>
+                  </div>
+                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Active Patient</span>
+                </div>
+                <div class="border-t px-6 py-4 text-sm space-y-4">
+                  <div>
+                    <p class="font-medium">Email</p>
+                    <p id="patientEmail" class="text-gray-600">sarah.j@email.com</p>
+                  </div>
+                  <div>
+                    <p class="font-medium">Phone</p>
+                    <p id="patientPhone" class="text-gray-600">(555) 123-4567</p>
+                  </div>
+                  <div>
+                    <p class="font-medium">Date of Birth</p>
+                    <p id="patientDob" class="text-gray-600">March 15, 1991 (34 years)</p>
+                  </div>
+                  <div>
+                    <p class="font-medium">Address</p>
+                    <p id="patientAddress" class="text-gray-600 leading-snug">123 Main St, Anytown, ST 12345</p>
+                  </div>
+                  <div>
+                    <p class="font-medium">Emergency Contact</p>
+                    <p id="patientEmergency" class="text-gray-600 leading-snug">John Johnson<br>(555) 323-4568</p>
+                  </div>
+                  <div>
+                    <p class="font-medium">Allergies</p>
+                    <div id="patientAllergies" class="flex flex-wrap gap-1">
+                      <span class="bg-red-100 text-red-700 text-xs px-2 py-0.5 rounded">Penicillin</span>
+                      <span class="bg-red-100 text-red-700 text-xs px-2 py-0.5 rounded">Shellfish</span>
+                    </div>
+                  </div>
+                  <div>
+                    <p class="font-medium">Insurance</p>
+                    <p id="patientInsurance" class="text-gray-600 leading-snug">Blue Cross Blue Shield<br>Policy: 8923456789</p>
+                  </div>
+                </div>
+              </section>
+
+              <!-- Right Column -->
+              <div class="col-span-2 space-y-6">
+                <!-- Recent Appointments -->
+                <section class="bg-white border rounded-lg">
+                  <div class="flex items-center justify-between px-6 py-4 border-b">
+                    <h3 class="font-medium">Recent Appointments</h3>
+                    <a href="#" class="text-sm text-indigo-600 hover:underline">View All</a>
+                  </div>
+                  <ul class="divide-y text-sm">
+                    <li class="flex items-center justify-between px-6 py-4">
+                      <div>
+                        <p class="font-medium">Annual Checkup</p>
+                        <p class="text-gray-500">Jan 15, 2025 at 10:00 AM</p>
+                      </div>
+                      <div class="flex items-center gap-4">
+                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Completed</span>
+                        <i data-lucide="chevron-right" class="w-4 h-4 text-gray-400"></i>
+                      </div>
+                    </li>
+                    <li class="flex items-center justify-between px-6 py-4">
+                      <div>
+                        <p class="font-medium">Follow-up Visit</p>
+                        <p class="text-gray-500">Dec 20, 2024 at 2:30 PM</p>
+                      </div>
+                      <div class="flex items-center gap-4">
+                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Completed</span>
+                        <i data-lucide="chevron-right" class="w-4 h-4 text-gray-400"></i>
+                      </div>
+                    </li>
+                    <li class="flex items-center justify-between px-6 py-4">
+                      <div>
+                        <p class="font-medium">Consultation</p>
+                        <p class="text-gray-500">Jan 25, 2025 at 3:00 PM</p>
+                      </div>
+                      <div class="flex items-center gap-4">
+                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800">Scheduled</span>
+                        <i data-lucide="chevron-right" class="w-4 h-4 text-gray-400"></i>
+                      </div>
+                    </li>
+                  </ul>
+                </section>
+
+                <!-- Prescriptions -->
+                <section class="bg-white border rounded-lg">
+                  <div class="flex items-center justify-between px-6 py-4 border-b">
+                    <h3 class="font-medium">Prescriptions</h3>
+                    <button class="inline-flex items-center gap-2 bg-white hover:bg-gray-50 text-gray-900 text-sm font-medium px-3 py-1.5 rounded-md border">
+                      <i data-lucide="plus" class="w-4 h-4"></i>
+                      New Prescription
+                    </button>
+                  </div>
+                  <ul class="divide-y text-sm">
+                    <li class="flex items-start justify-between px-6 py-4">
+                      <div>
+                        <p class="font-medium">Amoxicillin 500mg</p>
+                        <p class="text-gray-500">Take 3 times daily for 7 days<br>Prescribed: Jan 15, 2025</p>
+                      </div>
+                      <div class="flex items-center gap-4">
+                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Active</span>
+                        <i data-lucide="download" class="w-4 h-4 text-gray-400"></i>
+                      </div>
+                    </li>
+                    <li class="flex items-start justify-between px-6 py-4">
+                      <div>
+                        <p class="font-medium">Ibuprofen 400mg</p>
+                        <p class="text-gray-500">As needed for pain, max 3 per day<br>Prescribed: Dec 20, 2024</p>
+                      </div>
+                      <div class="flex items-center gap-4">
+                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">Completed</span>
+                        <i data-lucide="download" class="w-4 h-4 text-gray-400"></i>
+                      </div>
+                    </li>
+                  </ul>
+                </section>
+
+                <!-- Lab Orders -->
+                <section class="bg-white border rounded-lg">
+                  <div class="flex items-center justify-between px-6 py-4 border-b">
+                    <h3 class="font-medium">Lab Orders</h3>
+                    <button class="inline-flex items-center gap-2 bg-white hover:bg-gray-50 text-gray-900 text-sm font-medium px-3 py-1.5 rounded-md border">
+                      <i data-lucide="plus" class="w-4 h-4"></i>
+                      New Lab Order
+                    </button>
+                  </div>
+                  <ul class="divide-y text-sm">
+                    <li class="flex items-start justify-between px-6 py-4">
+                      <div>
+                        <p class="font-medium">Complete Blood Count (CBC)</p>
+                        <p class="text-gray-500">Ordered: Jan 15, 2025<br>Lab: Quest Diagnostics</p>
+                      </div>
+                      <div class="flex items-center gap-4">
+                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">Pending</span>
+                        <i data-lucide="chevron-right" class="w-4 h-4 text-gray-400"></i>
+                      </div>
+                    </li>
+                    <li class="flex items-start justify-between px-6 py-4">
+                      <div>
+                        <p class="font-medium">Lipid Panel</p>
+                        <p class="text-gray-500">Ordered: Dec 20, 2024<br>Lab: LabCorp</p>
+                      </div>
+                      <div class="flex items-center gap-4">
+                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">Completed</span>
+                        <i data-lucide="chevron-right" class="w-4 h-4 text-gray-400"></i>
+                      </div>
+                    </li>
+                  </ul>
+                </section>
+
+                <!-- Medical History -->
+                <section class="bg-white border rounded-lg">
+                  <div class="px-6 py-4 border-b">
+                    <h3 class="font-medium">Medical History</h3>
+                  </div>
+                  <div class="p-6 text-sm space-y-4">
+                    <div>
+                      <p class="font-medium mb-2">Chronic Conditions</p>
+                      <div class="flex flex-wrap gap-2">
+                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-orange-100 text-orange-800">Hypertension</span>
+                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-orange-100 text-orange-800">Type 2 Diabetes</span>
+                      </div>
+                    </div>
+                    <div>
+                      <p class="font-medium mb-1">Previous Surgeries</p>
+                      <p class="text-gray-600">Appendectomy (2018)</p>
+                    </div>
+                    <div>
+                      <p class="font-medium mb-1">Family History</p>
+                      <p class="text-gray-600">Heart Disease (Father), Diabetes (Mother)</p>
+                    </div>
+                    <div>
+                      <p class="font-medium mb-1">Current Medications</p>
+                      <p class="text-gray-600">Lisinopril 10mg daily, Metformin 500mg twice daily</p>
+                    </div>
+                  </div>
+                </section>
+              </div>
+            </div>
+          </div>
+        </main>
+      </div>
+    </div>
+  </div>
+
+  <!-- Book Appointment Modal -->
+  <div id="bookAppointmentModal" class="fixed inset-0 z-50 hidden">
+    <div class="fixed inset-0 bg-black bg-opacity-50" onclick="closeBookAppointmentModal()"></div>
+    <div class="fixed inset-0 flex items-center justify-center p-4">
+      <div class="bg-white rounded-lg shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
+        
+        <!-- Step 1: Appointment Details -->
+        <div id="appointmentStep1" class="p-6">
+          <div class="flex items-center justify-between mb-6">
+            <h2 class="text-xl font-semibold">Book Appointment</h2>
+            <button onclick="closeBookAppointmentModal()" class="text-gray-400 hover:text-gray-600">
+              <i data-lucide="x" class="w-6 h-6"></i>
+            </button>
+          </div>
+
+          <!-- Progress Bar -->
+          <div class="mb-6">
+            <div class="flex items-center justify-between mb-2">
+              <span class="text-sm font-medium text-indigo-600">Step 1 of 2</span>
+              <span class="text-sm text-gray-500">Appointment Details</span>
+            </div>
+            <div class="w-full bg-gray-200 rounded-full h-2">
+              <div class="bg-indigo-600 h-2 rounded-full" style="width: 50%"></div>
+            </div>
+          </div>
+
+          <!-- Patient Info -->
+          <div class="bg-gray-50 rounded-lg p-4 mb-6">
+            <div class="flex items-center gap-3">
+              <img id="modalPatientAvatar" src="https://api.dicebear.com/7.x/personas/svg?seed=patient1" alt="" class="w-12 h-12 rounded-full">
+              <div>
+                <h3 id="modalPatientName" class="font-medium">Sarah Johnson</h3>
+                <p id="modalPatientId" class="text-sm text-gray-500">ID: P-2025-001</p>
+              </div>
+            </div>
+          </div>
+
+          <!-- Appointment Form -->
+          <form class="space-y-4">
+            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
+              <div>
+                <label class="block text-sm font-medium text-gray-700 mb-1">Appointment Type</label>
+                <select class="w-full border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500">
+                  <option>Consultation</option>
+                  <option>Follow-up</option>
+                  <option>Annual Checkup</option>
+                  <option>Lab Review</option>
+                  <option>Urgent Care</option>
+                </select>
+              </div>
+              <div>
+                <label class="block text-sm font-medium text-gray-700 mb-1">Doctor</label>
+                <select class="w-full border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500">
+                  <option>Dr. Taylor (Primary)</option>
+                  <option>Dr. Martinez</option>
+                  <option>Dr. Wilson</option>
+                </select>
+              </div>
+            </div>
+
+            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
+              <div>
+                <label class="block text-sm font-medium text-gray-700 mb-1">Date</label>
+                <input type="date" class="w-full border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500">
+              </div>
+              <div>
+                <label class="block text-sm font-medium text-gray-700 mb-1">Time</label>
+                <select class="w-full border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500">
+                  <option>9:00 AM</option>
+                  <option>10:00 AM</option>
+                  <option>11:00 AM</option>
+                  <option>2:00 PM</option>
+                  <option>3:00 PM</option>
+                  <option>4:00 PM</option>
+                </select>
+              </div>
+            </div>
+
+            <div>
+              <label class="block text-sm font-medium text-gray-700 mb-1">Duration</label>
+              <select class="w-full border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500">
+                <option>30 minutes</option>
+                <option>45 minutes</option>
+                <option>60 minutes</option>
+                <option>90 minutes</option>
+              </select>
+            </div>
+
+            <div>
+              <label class="block text-sm font-medium text-gray-700 mb-1">Reason for Visit</label>
+              <textarea rows="3" class="w-full border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500" placeholder="Describe the reason for this appointment..."></textarea>
+            </div>
+
+            <div>
+              <label class="block text-sm font-medium text-gray-700 mb-1">Special Instructions</label>
+              <textarea rows="2" class="w-full border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500" placeholder="Any special instructions or requirements..."></textarea>
+            </div>
+
+            <div class="flex items-center gap-3">
+              <input type="checkbox" id="sendReminder" class="rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
+              <label for="sendReminder" class="text-sm text-gray-700">Send appointment reminder to patient</label>
+            </div>
+          </form>
+
+          <!-- Step 1 Actions -->
+          <div class="flex justify-between pt-6 border-t mt-6">
+            <button onclick="closeBookAppointmentModal()" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50">
+              Cancel
+            </button>
+            <button onclick="showAppointmentStep2()" class="px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-700">
+              Next: Payment Details
+            </button>
+          </div>
+        </div>
+
+        <!-- Step 2: Payment Details -->
+        <div id="appointmentStep2" class="p-6 hidden">
+          <div class="flex items-center justify-between mb-6">
+            <h2 class="text-xl font-semibold">Payment Details</h2>
+            <button onclick="closeBookAppointmentModal()" class="text-gray-400 hover:text-gray-600">
+              <i data-lucide="x" class="w-6 h-6"></i>
+            </button>
+          </div>
+
+          <!-- Progress Bar -->
+          <div class="mb-6">
+            <div class="flex items-center justify-between mb-2">
+              <span class="text-sm font-medium text-indigo-600">Step 2 of 2</span>
+              <span class="text-sm text-gray-500">Payment Information</span>
+            </div>
+            <div class="w-full bg-gray-200 rounded-full h-2">
+              <div class="bg-indigo-600 h-2 rounded-full" style="width: 100%"></div>
+            </div>
+          </div>
+
+          <!-- Appointment Summary -->
+          <div class="bg-gray-50 rounded-lg p-4 mb-6">
+            <h3 class="font-medium mb-3">Appointment Summary</h3>
+            <div class="space-y-2 text-sm">
+              <div class="flex justify-between">
+                <span class="text-gray-600">Patient:</span>
+                <span class="font-medium">Sarah Johnson</span>
+              </div>
+              <div class="flex justify-between">
+                <span class="text-gray-600">Type:</span>
+                <span>Consultation</span>
+              </div>
+              <div class="flex justify-between">
+                <span class="text-gray-600">Date &amp; Time:</span>
+                <span>Jan 28, 2025 at 10:00 AM</span>
+              </div>
+              <div class="flex justify-between">
+                <span class="text-gray-600">Duration:</span>
+                <span>30 minutes</span>
+              </div>
+              <div class="flex justify-between">
+                <span class="text-gray-600">Doctor:</span>
+                <span>Dr. Taylor</span>
+              </div>
+            </div>
+          </div>
+
+          <!-- Insurance Information -->
+          <div class="mb-6">
+            <h3 class="font-medium mb-3">Insurance Information</h3>
+            <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
+              <div class="flex items-center gap-2 mb-2">
+                <i data-lucide="shield-check" class="w-5 h-5 text-blue-600"></i>
+                <span class="font-medium text-blue-900">Blue Cross Blue Shield</span>
+              </div>
+              <p class="text-sm text-blue-700">Policy: 8923456789</p>
+              <p class="text-sm text-blue-700">Copay: $25.00</p>
+            </div>
+          </div>
+
+          <!-- Payment Method -->
+          <div class="mb-6">
+            <h3 class="font-medium mb-3">Payment Method</h3>
+            <div class="space-y-3">
+              <label class="flex items-center gap-3 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer">
+                <input type="radio" name="paymentMethod" value="insurance" class="text-indigo-600 focus:ring-indigo-500" checked="">
+                <div class="flex-1">
+                  <p class="font-medium">Insurance Copay</p>
+                  <p class="text-sm text-gray-500">$25.00 copay will be charged</p>
+                </div>
+              </label>
+              <label class="flex items-center gap-3 p-3 border rounded-lg hover:bg-gray-50 cursor-pointer">
+                <input type="radio" name="paymentMethod" value="self" class="text-indigo-600 focus:ring-indigo-500">
+                <div class="flex-1">
+                  <p class="font-medium">Self Pay</p>
+                  <p class="text-sm text-gray-500">$150.00 consultation fee</p>
+                </div>
+              </label>
+            </div>
+          </div>
+
+          <!-- Payment Summary -->
+          <div class="bg-gray-50 rounded-lg p-4 mb-6">
+            <h3 class="font-medium mb-3">Payment Summary</h3>
+            <div class="space-y-2 text-sm">
+              <div class="flex justify-between">
+                <span>Consultation Fee:</span>
+                <span>$150.00</span>
+              </div>
+              <div class="flex justify-between">
+                <span>Insurance Coverage:</span>
+                <span class="text-green-600">-$125.00</span>
+              </div>
+              <div class="flex justify-between font-medium text-lg border-t pt-2">
+                <span>Total Due:</span>
+                <span>$25.00</span>
+              </div>
+            </div>
+          </div>
+
+          <!-- Payment Details -->
+          <div class="mb-6">
+            <h3 class="font-medium mb-3">Payment Details</h3>
+            <div class="space-y-4">
+              <div>
+                <label class="block text-sm font-medium text-gray-700 mb-1">Card Number</label>
+                <input type="text" placeholder="1234 5678 9012 3456" class="w-full border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500">
+              </div>
+              <div class="grid grid-cols-2 gap-4">
+                <div>
+                  <label class="block text-sm font-medium text-gray-700 mb-1">Expiry Date</label>
+                  <input type="text" placeholder="MM/YY" class="w-full border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500">
+                </div>
+                <div>
+                  <label class="block text-sm font-medium text-gray-700 mb-1">CVV</label>
+                  <input type="text" placeholder="123" class="w-full border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500">
+                </div>
+              </div>
+              <div>
+                <label class="block text-sm font-medium text-gray-700 mb-1">Cardholder Name</label>
+                <input type="text" placeholder="Sarah Johnson" class="w-full border rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-indigo-500">
+              </div>
+            </div>
+          </div>
+
+          <!-- Step 2 Actions -->
+          <div class="flex justify-between pt-6 border-t">
+            <button onclick="showAppointmentStep1()" class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50">
+              Back
+            </button>
+            <button onclick="confirmAppointment()" class="px-4 py-2 text-sm font-medium text-white bg-indigo-600 border border-transparent rounded-md hover:bg-indigo-700">
+              Confirm Appointment
+            </button>
+          </div>
+        </div>
+      </div>
+    </div>
+  </div>
+
+  <!-- Success Modal -->
+  <div id="successModal" class="fixed inset-0 z-50 hidden">
+    <div class="fixed inset-0 bg-black bg-opacity-50"></div>
+    <div class="fixed inset-0 flex items-center justify-center p-4">
+      <div class="bg-white rounded-lg shadow-xl max-w-md w-full p-6 text-center">
+        <div class="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4">
+          <i data-lucide="check" class="w-8 h-8 text-green-600"></i>
+        </div>
+        <h3 class="text-lg font-medium text-gray-900 mb-2">Appointment Confirmed!</h3>
+        <p class="text-sm text-gray-600 mb-6">The appointment has been successfully booked and a confirmation email has been sent to the patient.</p>
+        <button onclick="closeSuccessModal()" class="w-full bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 font-medium">
+          Close
+        </button>
+      </div>
+    </div>
+  </div>
+
+  <script>
+    // Initialize Lucide icons
+    lucide.createIcons();
+
+    // Patient data
+    const patients = {
+      patient1: {
+        name: 'Sarah Johnson',
+        id: 'P-2025-001',
+        email: 'sarah.j@email.com',
+        phone: '(555) 123-4567',
+        age: 34,
+        avatar: 'https://api.dicebear.com/7.x/personas/svg?seed=patient1'
+      },
+      patient2: {
+        name: 'Michael Chen',
+        id: 'P-2025-002',
+        email: 'm.chen@email.com',
+        phone: '(555) 987-6543',
+        age: 28,
+        avatar: 'https://api.dicebear.com/7.x/personas/svg?seed=patient2'
+      },
+      patient3: {
+        name: 'Emily Rodriguez',
+        id: 'P-2025-003',
+        email: 'e.rodriguez@email.com',
+        phone: '(555) 456-7890',
+        age: 42,
+        avatar: 'https://api.dicebear.com/7.x/personas/svg?seed=patient3'
+      }
+    };
+
+    let currentPatient = null;
+
+    // Show patient details
+    function showPatientDetails(patientId) {
+      const patient = patients[patientId];
+      if (!patient) return;
+
+      currentPatient = patient;
+      
+      // Update patient details
+      document.getElementById('patientName').textContent = patient.name;
+      document.getElementById('patientId').textContent = `ID: ${patient.id}`;
+      document.getElementById('patientEmail').textContent = patient.email;
+      document.getElementById('patientPhone').textContent = patient.phone;
+      document.getElementById('patientAvatar').src = patient.avatar;
+
+      // Hide table view and show details view
+      document.getElementById('patientsTable').classList.add('hidden');
+      document.getElementById('patientDetails').classList.remove('hidden');
+      document.getElementById('patientDetails').classList.add('flex');
+    }
+
+    // Show patients table
+    function showPatientsTable() {
+      document.getElementById('patientDetails').classList.add('hidden');
+      document.getElementById('patientDetails').classList.remove('flex');
+      document.getElementById('patientsTable').classList.remove('hidden');
+    }
+
+    // Show book appointment modal
+    function showBookAppointmentModal() {
+      if (currentPatient) {
+        document.getElementById('modalPatientName').textContent = currentPatient.name;
+        document.getElementById('modalPatientId').textContent = `ID: ${currentPatient.id}`;
+        document.getElementById('modalPatientAvatar').src = currentPatient.avatar;
+      }
+      document.getElementById('bookAppointmentModal').classList.remove('hidden');
+    }
+
+    // Close book appointment modal
+    function closeBookAppointmentModal() {
+      document.getElementById('bookAppointmentModal').classList.add('hidden');
+      showAppointmentStep1();
+    }
+
+    // Show appointment step 1
+    function showAppointmentStep1() {
+      document.getElementById('appointmentStep1').classList.remove('hidden');
+      document.getElementById('appointmentStep2').classList.add('hidden');
+    }
+
+    // Show appointment step 2
+    function showAppointmentStep2() {
+      document.getElementById('appointmentStep1').classList.add('hidden');
+      document.getElementById('appointmentStep2').classList.remove('hidden');
+    }
+
+    // Confirm appointment
+    function confirmAppointment() {
+      closeBookAppointmentModal();
+      document.getElementById('successModal').classList.remove('hidden');
+    }
+
+    // Close success modal
+    function closeSuccessModal() {
+      document.getElementById('successModal').classList.add('hidden');
+    }
+  </script>
+
+</body></html>
\ No newline at end of file
diff --git a/assets/html/invoice.html b/assets/html/invoice.html
new file mode 100644
index 0000000..c2e237f
--- /dev/null
+++ b/assets/html/invoice.html
@@ -0,0 +1,295 @@
+<html lang="en"><head>
+  <meta charset="UTF-8">
+  <meta name="viewport" content="width=device-width, initial-scale=1.0">
+  <title>Invoice #1846325 - Flowbite</title>
+  <script src="https://cdn.tailwindcss.com"></script>
+  <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.js"></script>
+  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&amp;display=swap" rel="stylesheet">
+  <style>
+    * { font-family: 'Inter', sans-serif; }
+    .animate-fade-in { animation: fadeIn 0.6s ease-out forwards; }
+    .animate-slide-up { animation: slideUp 0.8s ease-out forwards; }
+    @keyframes fadeIn { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }
+    @keyframes slideUp { from { opacity: 0; transform: translateY(30px); } to { opacity: 1; transform: translateY(0); } }
+  </style>
+</head>
+<body class="bg-gray-50 min-h-screen">
+  <div class="max-w-7xl mx-auto p-4 lg:p-8">
+    <!-- Header -->
+    <div class="mb-8 animate-fade-in" style="animation-delay: 0.1s">
+      <button class="flex items-center gap-2 text-sm text-gray-600 hover:text-gray-900 mb-4 transition-colors">
+        <i data-lucide="arrow-left" class="w-4 h-4"></i>
+        Back to invoices
+      </button>
+      <div class="flex items-center justify-between">
+        <h1 class="text-2xl font-semibold text-gray-900 tracking-tight">Invoice Details</h1>
+        <div class="flex items-center gap-3">
+          <button class="inline-flex items-center gap-2 px-4 py-2 bg-white border border-gray-300 rounded-lg text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors">
+            <i data-lucide="printer" class="w-4 h-4"></i>
+            Print
+          </button>
+          <button class="inline-flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg text-sm font-medium hover:bg-blue-700 transition-colors">
+            <i data-lucide="download" class="w-4 h-4"></i>
+            Download
+          </button>
+        </div>
+      </div>
+    </div>
+
+    <!-- Main Content -->
+    <div class="grid lg:grid-cols-3 gap-8">
+      <!-- Invoice Content -->
+      <div class="lg:col-span-2 animate-slide-up" style="animation-delay: 0.2s">
+        <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
+          <!-- Invoice Header -->
+          <div class="px-8 py-6 border-b border-gray-200">
+            <div class="flex items-center justify-between mb-6">
+              <div class="flex items-center gap-3">
+                <div class="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center">
+                  <i data-lucide="zap" class="w-5 h-5 text-blue-600"></i>
+                </div>
+                <div>
+                  <h2 class="text-xl font-semibold text-gray-900">Flowbite</h2>
+                  <p class="text-sm text-gray-500">Invoice #1846325</p>
+                </div>
+              </div>
+              <div class="text-right">
+                <p class="text-sm text-gray-500">Date: <span class="text-gray-900 font-medium">05/07/2025</span></p>
+                <div class="flex items-center gap-2 px-3 py-2 bg-green-50 border border-green-200 rounded-lg">
+            <i data-lucide="check-circle" class="w-4 h-4 text-green-600"></i>
+            <span class="text-sm font-medium text-green-700">Invoice: Unpaid, Pending, Paid</span>
+            Click to trigger STK push
+          </div>
+
+              </div>
+            </div>
+
+            <!-- Billing Information -->
+            <div class="grid md:grid-cols-2 gap-8">
+              <div>
+                <h3 class="text-sm font-medium text-gray-900 mb-3">Pay to:</h3>
+                <div class="text-sm text-gray-600 leading-6">
+                  <p class="font-medium text-gray-900">Flowbite LLC</p>
+                  <p>LOUISVILLE, Selby</p>
+                  <p>3864 Johnson Street</p>
+                  <p>United States of America</p>
+                  <p class="mt-2">VAT Code: AA-1234567890</p>
+                </div>
+              </div>
+              <div>
+                <h3 class="text-sm font-medium text-gray-900 mb-3">Invoice to:</h3>
+                <div class="text-sm text-gray-600 leading-6">
+                  <p class="font-medium text-gray-900">Bonnie Green</p>
+                  <p>Carolina, Selby</p>
+                  <p>3864 Johnson Street</p>
+                  <p>United States of America</p>
+                  <p class="mt-2 text-blue-600">name@company.com</p>
+                </div>
+              </div>
+            </div>
+          </div>
+
+          <!-- Invoice Items -->
+          <div class="px-8 py-6">
+            <div class="overflow-x-auto">
+              <table class="w-full">
+                <thead>
+                  <tr class="text-left border-b border-gray-200">
+                    <th class="pb-3 text-xs font-medium text-gray-500 uppercase tracking-wider">Product name</th>
+                    <th class="pb-3 text-xs font-medium text-gray-500 uppercase tracking-wider text-right">Qty</th>
+                    <th class="pb-3 text-xs font-medium text-gray-500 uppercase tracking-wider text-right">Price</th>
+                    <th class="pb-3 text-xs font-medium text-gray-500 uppercase tracking-wider text-right">Discount</th>
+                    <th class="pb-3 text-xs font-medium text-gray-500 uppercase tracking-wider text-right">Total price</th>
+                  </tr>
+                </thead>
+                <tbody class="divide-y divide-gray-100">
+                  <tr class="hover:bg-gray-50 transition-colors">
+                    <td class="py-4">
+                      <div class="font-medium text-gray-900">Flowbite Developer Edition</div>
+                      <div class="text-sm text-gray-500">HTML, Figma, JS</div>
+                    </td>
+                    <td class="py-4 text-right text-gray-900">2</td>
+                    <td class="py-4 text-right text-gray-900">$269</td>
+                    <td class="py-4 text-right text-gray-900">50%</td>
+                    <td class="py-4 text-right font-medium text-gray-900">$269</td>
+                  </tr>
+                  <tr class="hover:bg-gray-50 transition-colors">
+                    <td class="py-4">
+                      <div class="font-medium text-gray-900">Flowbite Designer Edition</div>
+                      <div class="text-sm text-gray-500">Figma Design System</div>
+                    </td>
+                    <td class="py-4 text-right text-gray-900">3</td>
+                    <td class="py-4 text-right text-gray-900">$149</td>
+                    <td class="py-4 text-right text-gray-900">0%</td>
+                    <td class="py-4 text-right font-medium text-gray-900">$447</td>
+                  </tr>
+                  <tr class="hover:bg-gray-50 transition-colors">
+                    <td class="py-4">
+                      <div class="font-medium text-gray-900">Flowbite Open Source</div>
+                      <div class="text-sm text-gray-500">Open source components</div>
+                    </td>
+                    <td class="py-4 text-right text-gray-900">1</td>
+                    <td class="py-4 text-right text-gray-900">$0</td>
+                    <td class="py-4 text-right text-gray-900">0%</td>
+                    <td class="py-4 text-right font-medium text-gray-900">$0</td>
+                  </tr>
+                  <tr class="hover:bg-gray-50 transition-colors">
+                    <td class="py-4">
+                      <div class="font-medium text-gray-900">2 Years Support</div>
+                      <div class="text-sm text-gray-500">Premium support</div>
+                    </td>
+                    <td class="py-4 text-right text-gray-900">1</td>
+                    <td class="py-4 text-right text-gray-900">$199</td>
+                    <td class="py-4 text-right text-gray-900">0%</td>
+                    <td class="py-4 text-right font-medium text-gray-900">$199</td>
+                  </tr>
+                  <tr class="hover:bg-gray-50 transition-colors">
+                    <td class="py-4">
+                      <div class="font-medium text-gray-900">Flowbite Developer (Team License)</div>
+                      <div class="text-sm text-gray-500">HTML, Figma, JS</div>
+                    </td>
+                    <td class="py-4 text-right text-gray-900">2</td>
+                    <td class="py-4 text-right text-gray-900">$799</td>
+                    <td class="py-4 text-right text-gray-900">0%</td>
+                    <td class="py-4 text-right font-medium text-gray-900">$1,598</td>
+                  </tr>
+                </tbody>
+              </table>
+            </div>
+
+            <!-- Order Summary -->
+            <div class="mt-8 flex justify-end">
+              <div class="w-80">
+                <div class="bg-gray-50 rounded-lg p-6">
+                  <h3 class="font-medium text-gray-900 mb-4">Order summary</h3>
+                  <div class="space-y-3">
+                    <div class="flex justify-between text-sm">
+                      <span class="text-gray-600">Subtotal</span>
+                      <span class="text-gray-900">$320</span>
+                    </div>
+                    <div class="flex justify-between text-sm">
+                      <span class="text-gray-600">Tax</span>
+                      <span class="text-gray-900">$477</span>
+                    </div>
+                    <div class="flex justify-between text-sm">
+                      <span class="text-gray-600">Shipping estimate</span>
+                      <span class="text-gray-900">$0</span>
+                    </div>
+                    <div class="border-t border-gray-200 pt-3">
+                      <div class="flex justify-between">
+                        <span class="text-base font-medium text-gray-900">Order total</span>
+                        <span class="text-base font-semibold text-gray-900">$2,990</span>
+                      </div>
+                    </div>
+                  </div>
+                </div>
+              </div>
+            </div>
+          </div>
+        </div>
+      </div>
+
+      <!-- Right Sidebar -->
+      <div class="animate-slide-up" style="animation-delay: 0.3s">
+        <div class="bg-white rounded-xl shadow-sm border border-gray-200 p-6 space-y-6">
+          <!-- Status Badge -->
+          <div class="flex items-center gap-2 px-3 py-2 bg-green-50 border border-green-200 rounded-lg">
+            <i data-lucide="check-circle" class="w-4 h-4 text-green-600"></i>
+            <span class="text-sm font-medium text-green-700">Invoice paid</span>
+          </div>
+
+          <!-- Info Section -->
+          <div>
+            <h3 class="text-sm font-medium text-gray-900 mb-3">Info</h3>
+            <div class="space-y-4">
+              <div>
+                <p class="text-sm text-gray-600 mb-1">Details:</p>
+                <p class="text-2xl font-semibold text-gray-900">$2,999</p>
+              </div>
+
+              <div>
+                <label class="block text-sm text-gray-600 mb-2">Select an option</label>
+                <select class="w-full px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent">
+                  <option>Paid</option>
+                  <option>Pending</option>
+                  <option>Overdue</option>
+                </select>
+              </div>
+            </div>
+          </div>
+
+          <!-- Details -->
+          <div class="space-y-4 text-sm">
+            <div class="flex items-center gap-3">
+              <i data-lucide="user" class="w-4 h-4 text-gray-400"></i>
+              <div>
+                <span class="text-gray-600">Created by:</span>
+                <span class="ml-2 text-gray-900 font-medium">Jese Leos</span>
+              </div>
+            </div>
+            <div class="flex items-center gap-3">
+              <i data-lucide="calendar" class="w-4 h-4 text-gray-400"></i>
+              <div>
+                <span class="text-gray-600">Due date:</span>
+                <span class="ml-2 text-gray-900 font-medium">08 July 2025</span>
+              </div>
+            </div>
+            <div class="flex items-center gap-3">
+              <i data-lucide="credit-card" class="w-4 h-4 text-gray-400"></i>
+              <div>
+                <span class="text-gray-600">Pay by Bank Transfer</span>
+              </div>
+            </div>
+            <div class="flex items-center gap-3">
+              <i data-lucide="dollar-sign" class="w-4 h-4 text-gray-400"></i>
+              <div>
+                <span class="text-gray-600">Currency:</span>
+                <span class="ml-2 text-gray-900 font-medium">American Dollar</span>
+              </div>
+            </div>
+          </div>
+
+          <!-- Timeline -->
+          <div class="space-y-3">
+            <div class="flex items-center gap-3 text-sm">
+              <div class="w-2 h-2 bg-blue-500 rounded-full"></div>
+              <span class="text-gray-600">Invoice created:</span>
+              <span class="ml-auto text-gray-900 font-medium">05/07/2025</span>
+            </div>
+            <div class="flex items-center gap-3 text-sm">
+              <div class="w-2 h-2 bg-yellow-500 rounded-full"></div>
+              <span class="text-gray-600">Invoice sent:</span>
+              <span class="ml-auto text-gray-900 font-medium">06/07/2025</span>
+            </div>
+            <div class="flex items-center gap-3 text-sm">
+              <div class="w-2 h-2 bg-green-500 rounded-full"></div>
+              <span class="text-gray-600">Invoice paid:</span>
+              <span class="ml-auto text-gray-900 font-medium">08/07/2025</span>
+            </div>
+          </div>
+
+          <!-- Promotion Card -->
+          <div class="bg-blue-50 border border-blue-200 rounded-lg p-4 relative">
+            <button class="absolute top-2 right-2 text-gray-400 hover:text-gray-600">
+              <i data-lucide="x" class="w-4 h-4"></i>
+            </button>
+            <div class="mb-2">
+              <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
+                Version 2.0
+              </span>
+            </div>
+            <p class="text-sm text-gray-700 mb-3">Get paid 3x faster with our PRO plan for online payments!</p>
+            <button class="text-sm font-medium text-blue-600 hover:text-blue-700 underline">
+              Upgrade now for free
+            </button>
+          </div>
+        </div>
+      </div>
+    </div>
+  </div>
+
+  <script>
+    lucide.createIcons();
+  </script>
+
+</body></html>
\ No newline at end of file
diff --git a/assets/js/hooks/index.js b/assets/js/hooks/index.js
new file mode 100644
index 0000000..122b7b5
--- /dev/null
+++ b/assets/js/hooks/index.js
@@ -0,0 +1,6 @@
+// assets/js/hooks/index.js
+import MedicationSearch from "./medication_search";
+
+export const Hooks = {
+  MedicationSearch
+};
diff --git a/config/test.exs b/config/test.exs
index 5a5bbee..4548562 100644
--- a/config/test.exs
+++ b/config/test.exs
@@ -11,19 +11,19 @@ config :clinicpro, Clinicpro.Repo,
   hostname: "localhost",
   database: "clinicpro_test#{System.get_env("MIX_TEST_PARTITION")}",
   pool: Ecto.Adapters.SQL.Sandbox,
-  pool_size: System.schedulers_online() * 2
+  pool_size: 10
 
 # We don't run a server during test. If one is required,
 # you can enable the server option below.
 config :clinicpro, ClinicproWeb.Endpoint,
   http: [ip: {127, 0, 0, 1}, port: 4002],
-  secret_key_base: "PdBs5WMFxWYf2INXa1R8rodSpgX536iv+sxU6O+aEOYrkJtWcpvsOJI7bkwPHLaj",
+  secret_key_base: "Dn0Uf+oDMIwVFQGQNLLBxnXkZQJYRMdnqVGJXcXxCvKrZPLZZnKnQJXZMDnQGQJZ",
   server: false
 
-# In test we don't send emails
+# In test we don't send emails.
 config :clinicpro, Clinicpro.Mailer, adapter: Swoosh.Adapters.Test
 
-# Disable swoosh api client as it is only required for production adapters
+# Disable swoosh api client as it is only required for production adapters.
 config :swoosh, :api_client, false
 
 # Print only warnings and errors during test
@@ -32,6 +32,18 @@ config :logger, level: :warning
 # Initialize plugs at runtime for faster test compilation
 config :phoenix, :plug_init_mode, :runtime
 
+# Configure M-Pesa mock modules for testing
+config :clinicpro, :mpesa_stk_push_module, Clinicpro.MPesa.STKPushMock
+config :clinicpro, :payment_processor_module, Clinicpro.Invoices.PaymentProcessorMock
+
+# Configure the default clinic ID for tests
+config :clinicpro, :default_clinic_id, "test-clinic-id"
+
+# Configure the OTP rate limiter for tests
+config :clinicpro, Clinicpro.Auth.OTPRateLimiter,
+  max_attempts_per_hour: 10,
+  lockout_minutes: 5
+
 # Enable helpful, but potentially expensive runtime checks
 config :phoenix_live_view,
   enable_expensive_runtime_checks: true
@@ -42,11 +54,6 @@ config :clinicpro, :token_signing_secret, "test_secret_key_for_ash_authenticatio
 # Enable test bypass mode
 config :clinicpro, :test_bypass_enabled, true
 
-# Configure mock modules for tests
-config :clinicpro, :accounts_api, Clinicpro.Mocks.Accounts
-config :clinicpro, :appointments_api, Clinicpro.Mocks.Appointments
-config :clinicpro, :auth_module, Clinicpro.Mocks.Accounts
-
 # Bypass AshAuthentication compilation in tests
 config :ash_authentication, :bypass_compile_time_checks, true
 
diff --git a/lib/clinicpro/admin_bypass/invoice.ex b/lib/clinicpro/admin_bypass/invoice.ex
index b55e561..797b6f3 100644
--- a/lib/clinicpro/admin_bypass/invoice.ex
+++ b/lib/clinicpro/admin_bypass/invoice.ex
@@ -169,7 +169,7 @@ defmodule Clinicpro.AdminBypass.Invoice do
     payment_reference = invoice.payment_reference || generate_payment_reference(invoice)
 
     # Update invoice with payment reference
-    {:ok, updated_invoice} = update_invoice(invoice, %{payment_reference: payment_reference})
+    {:ok, _updated_invoice} = update_invoice(invoice, %{payment_reference: payment_reference})
 
     # Initiate M-Pesa payment
     Clinicpro.MPesa.initiate_stk_push(
diff --git a/lib/clinicpro/appointment.ex b/lib/clinicpro/appointment.ex
index 73af1fa..a2745bd 100644
--- a/lib/clinicpro/appointment.ex
+++ b/lib/clinicpro/appointment.ex
@@ -5,6 +5,7 @@ defmodule Clinicpro.Appointment do
   alias Clinicpro.Repo
   alias Clinicpro.Doctor
   alias Clinicpro.Patient
+  alias Clinicpro.Clinic
 
   schema "appointments" do
     field :status, :string, default: "Scheduled"
@@ -13,9 +14,13 @@ defmodule Clinicpro.Appointment do
     field :start_time, :time
     field :end_time, :time
     field :notes, :string
+    field :meeting_link, :string
+    # "onsite" or "virtual"
+    field :appointment_type, :string, default: "onsite"
 
     belongs_to :doctor, Doctor
     belongs_to :patient, Patient
+    belongs_to :clinic, Clinic
 
     timestamps(type: :utc_datetime)
   end
@@ -25,13 +30,34 @@ defmodule Clinicpro.Appointment do
   """
   def changeset(appointment, attrs) do
     appointment
-    |> cast(attrs, [:date, :start_time, :end_time, :status, :type, :notes, :doctor_id, :patient_id])
-    |> validate_required([:date, :start_time, :end_time, :type, :doctor_id, :patient_id])
+    |> cast(attrs, [
+      :date,
+      :start_time,
+      :end_time,
+      :status,
+      :type,
+      :notes,
+      :doctor_id,
+      :patient_id,
+      :clinic_id,
+      :meeting_link,
+      :appointment_type
+    ])
+    |> validate_required([
+      :date,
+      :start_time,
+      :end_time,
+      :type,
+      :doctor_id,
+      :patient_id,
+      :appointment_type
+    ])
     |> validate_time_range()
     |> foreign_key_constraint(:doctor_id)
     |> foreign_key_constraint(:patient_id)
+    |> foreign_key_constraint(:clinic_id)
   end
-  
+
   @doc """
   Returns a changeset for tracking appointment changes.
   """
@@ -44,8 +70,12 @@ defmodule Clinicpro.Appointment do
   """
   defp validate_time_range(changeset) do
     case {get_field(changeset, :start_time), get_field(changeset, :end_time)} do
-      {nil, _} -> changeset
-      {_, nil} -> changeset
+      {nil, _} ->
+        changeset
+
+      {_, nil} ->
+        changeset
+
       {start_time, end_time} ->
         if Time.compare(end_time, start_time) == :gt do
           changeset
@@ -66,7 +96,7 @@ defmodule Clinicpro.Appointment do
   def get_with_associations(id) do
     __MODULE__
     |> Repo.get(id)
-    |> Repo.preload([:doctor, :patient])
+    |> Repo.preload([:doctor, :patient, :clinic])
   end
 
   @doc """
@@ -75,14 +105,14 @@ defmodule Clinicpro.Appointment do
   def list do
     __MODULE__
     |> Repo.all()
-    |> Repo.preload([:doctor, :patient])
+    |> Repo.preload([:doctor, :patient, :clinic])
   end
-  
+
   @doc """
   Lists appointments with optional filtering.
-  
+
   ## Options
-  
+
   * `:limit` - Limits the number of results
   * `:status` - Filter by appointment status
   * `:date` - Filter by specific date
@@ -99,32 +129,38 @@ defmodule Clinicpro.Appointment do
     |> filter_by_type(opts)
     |> limit_query(opts)
     |> Repo.all()
-    |> Repo.preload([:doctor, :patient])
+    |> Repo.preload([:doctor, :patient, :clinic])
   end
-  
+
   # Private filter functions
-  defp filter_by_status(query, %{status: status}) when is_binary(status) and status != "", 
+  defp filter_by_status(query, %{status: status}) when is_binary(status) and status != "",
     do: where(query, [a], a.status == ^status)
+
   defp filter_by_status(query, _), do: query
-  
-  defp filter_by_date(query, %{date: date}) when not is_nil(date), 
+
+  defp filter_by_date(query, %{date: date}) when not is_nil(date),
     do: where(query, [a], a.date == ^date)
+
   defp filter_by_date(query, _), do: query
-  
-  defp filter_by_doctor_id(query, %{doctor_id: doctor_id}) when not is_nil(doctor_id), 
+
+  defp filter_by_doctor_id(query, %{doctor_id: doctor_id}) when not is_nil(doctor_id),
     do: where(query, [a], a.doctor_id == ^doctor_id)
+
   defp filter_by_doctor_id(query, _), do: query
-  
-  defp filter_by_patient_id(query, %{patient_id: patient_id}) when not is_nil(patient_id), 
+
+  defp filter_by_patient_id(query, %{patient_id: patient_id}) when not is_nil(patient_id),
     do: where(query, [a], a.patient_id == ^patient_id)
+
   defp filter_by_patient_id(query, _), do: query
-  
-  defp filter_by_type(query, %{type: type}) when is_binary(type) and type != "", 
+
+  defp filter_by_type(query, %{type: type}) when is_binary(type) and type != "",
     do: where(query, [a], a.type == ^type)
+
   defp filter_by_type(query, _), do: query
-  
-  defp limit_query(query, %{limit: limit}) when is_integer(limit) and limit > 0, 
+
+  defp limit_query(query, %{limit: limit}) when is_integer(limit) and limit > 0,
     do: limit(query, ^limit)
+
   defp limit_query(query, _), do: query
 
   @doc """
@@ -134,7 +170,7 @@ defmodule Clinicpro.Appointment do
     __MODULE__
     |> where(date: ^date)
     |> Repo.all()
-    |> Repo.preload([:doctor, :patient])
+    |> Repo.preload([:doctor, :patient, :clinic])
   end
 
   @doc """
@@ -144,7 +180,7 @@ defmodule Clinicpro.Appointment do
     __MODULE__
     |> where(doctor_id: ^doctor_id)
     |> Repo.all()
-    |> Repo.preload([:doctor, :patient])
+    |> Repo.preload([:doctor, :patient, :clinic])
   end
 
   @doc """
@@ -154,16 +190,16 @@ defmodule Clinicpro.Appointment do
     __MODULE__
     |> where(patient_id: ^patient_id)
     |> Repo.all()
-    |> Repo.preload([:doctor, :patient])
+    |> Repo.preload([:doctor, :patient, :clinic])
   end
-  
+
   @doc """
   Lists all appointments with doctor and patient associations preloaded.
   """
   def list_with_associations do
     __MODULE__
     |> Repo.all()
-    |> Repo.preload([:doctor, :patient])
+    |> Repo.preload([:doctor, :patient, :clinic])
   end
 
   @doc """
diff --git a/lib/clinicpro/behaviours.ex b/lib/clinicpro/behaviours.ex
new file mode 100644
index 0000000..93b8305
--- /dev/null
+++ b/lib/clinicpro/behaviours.ex
@@ -0,0 +1,109 @@
+defmodule Clinicpro.MPesa.STKPushBehaviour do
+  @moduledoc """
+  Behaviour definition for the M-Pesa STK Push module.
+  This allows for easy mocking in tests.
+  """
+
+  @doc """
+  Initiates an STK Push request to the M-Pesa API.
+
+  ## Parameters
+
+  - `phone_number` - The phone number to send the STK push to
+  - `amount` - The amount to charge
+  - `reference` - The reference number for the transaction
+  - `clinic_id` - The ID of the clinic (for multi-tenant support)
+
+  ## Returns
+
+  - `{:ok, response}` - If the request was successful
+  - `{:error, reason}` - If the request failed
+  """
+  @callback request(String.t(), Decimal.t() | number(), String.t(), String.t()) ::
+    {:ok, map()} | {:error, String.t()}
+end
+
+defmodule Clinicpro.Invoices.PaymentProcessorBehaviour do
+  @moduledoc """
+  Behaviour definition for the PaymentProcessor module.
+  This allows for easy mocking in tests.
+  """
+
+  alias Clinicpro.Invoices.Invoice
+
+  @doc """
+  Checks the payment status of an invoice.
+
+  ## Parameters
+
+  - `invoice` - The invoice to check payment status for
+
+  ## Returns
+
+  - `{:ok, status}` - Where status is one of `:completed`, `:pending`, or `:failed`
+  - `{:error, reason}` - If status check failed
+  """
+  @callback check_payment_status(Invoice.t()) :: {:ok, atom()} | {:error, String.t()}
+
+  @doc """
+  Processes a payment for an invoice using M-Pesa.
+
+  ## Parameters
+
+  - `invoice` - The invoice to process payment for
+  - `phone_number` - The phone number to send the STK push to
+  - `opts` - Additional options (reserved for future use)
+
+  ## Returns
+
+  - `{:ok, transaction}` - If payment was initiated successfully
+  - `{:error, reason}` - If payment initiation failed
+  """
+  @callback process_mpesa_payment(Invoice.t(), String.t(), keyword()) :: {:ok, map()} | {:error, String.t()}
+
+  @doc """
+  Marks an invoice as paid and updates related records.
+
+  ## Parameters
+
+  - `invoice` - The invoice to mark as paid
+  - `transaction_id` - The M-Pesa transaction ID
+  - `opts` - Additional options (reserved for future use)
+
+  ## Returns
+
+  - `{:ok, updated_invoice}` - If invoice was updated successfully
+  - `{:error, changeset}` - If invoice update failed
+  """
+  @callback mark_invoice_as_paid(Invoice.t(), String.t(), keyword()) :: {:ok, Invoice.t()} | {:error, any()}
+
+  @doc """
+  Handles a completed M-Pesa payment.
+
+  ## Parameters
+
+  - `transaction` - The M-Pesa transaction that was completed
+  - `opts` - Additional options (reserved for future use)
+
+  ## Returns
+
+  - `{:ok, updated_invoice}` - If payment was processed successfully
+  - `{:error, reason}` - If payment processing failed
+  """
+  @callback handle_completed_payment(map(), keyword()) :: {:ok, Invoice.t()} | {:error, any()}
+
+  @doc """
+  Handles a failed M-Pesa payment.
+
+  ## Parameters
+
+  - `transaction` - The M-Pesa transaction that failed
+  - `opts` - Additional options (reserved for future use)
+
+  ## Returns
+
+  - `{:ok, transaction}` - The updated transaction
+  - `{:error, reason}` - If handling the failed payment failed
+  """
+  @callback handle_failed_payment(map(), keyword()) :: {:ok, map()} | {:error, any()}
+end
diff --git a/lib/clinicpro/invoices.ex b/lib/clinicpro/invoices.ex
index e669c72..f484e2a 100644
--- a/lib/clinicpro/invoices.ex
+++ b/lib/clinicpro/invoices.ex
@@ -77,7 +77,7 @@ defmodule Clinicpro.Invoices do
       {:ok, updated_invoice}
     else
       {:error, :not_found} ->
-        Logger.warn("No invoice found for reference: #{transaction.reference}")
+        Logger.warning("No invoice found for reference: #{transaction.reference}")
         {:error, :invoice_not_found}
 
       {:error, reason} ->
diff --git a/lib/clinicpro/invoices/payment_processor.ex b/lib/clinicpro/invoices/payment_processor.ex
new file mode 100644
index 0000000..cbab4b5
--- /dev/null
+++ b/lib/clinicpro/invoices/payment_processor.ex
@@ -0,0 +1,336 @@
+defmodule Clinicpro.Invoices.PaymentProcessor do
+  @moduledoc """
+  Handles invoice-triggered payment status updates linked to M-Pesa transactions.
+  Provides functionality for initiating payments, processing callbacks, and updating invoice statuses.
+  Supports multi-tenant architecture with clinic-specific configurations.
+  """
+
+  alias Clinicpro.Invoices
+  alias Clinicpro.MPesa.STKPush
+  alias Clinicpro.MPesa.Transaction
+  alias Clinicpro.MPesa.Config
+  alias Clinicpro.Appointments
+  alias Clinicpro.Clinics
+  alias Clinicpro.Notifications
+
+  require Logger
+
+  @doc """
+  Initiates an M-Pesa STK push payment request for an invoice.
+
+  ## Parameters
+
+  - invoice: The invoice to process payment for
+  - phone_number: The patient's phone number to send the STK push to
+  - callback_url: Optional callback URL for the STK push response
+
+  ## Returns
+
+  - `{:ok, %{checkout_request_id: String.t(), merchant_request_id: String.t()}}` on success
+  - `{:error, reason}` on failure
+  """
+  @spec initiate_payment(map(), String.t(), String.t() | nil) :: {:ok, map()} | {:error, any()}
+  def initiate_payment(invoice, phone_number, callback_url \\ nil) do
+    # Get the clinic ID from the invoice
+    clinic_id = get_clinic_id_from_invoice(invoice)
+
+    # Format the phone number to ensure it's in the correct format (254XXXXXXXXX)
+    formatted_phone = format_phone_number(phone_number)
+
+    # Get the clinic-specific M-Pesa configuration
+    mpesa_config = Config.get_config_for_clinic(clinic_id)
+
+    # Set up the callback URL (use the provided one or the default for the clinic)
+    final_callback_url = callback_url || mpesa_config.stk_callback_url
+
+    # Prepare the STK push parameters
+    stk_params = %{
+      phone_number: formatted_phone,
+      amount: invoice.amount,
+      reference: invoice.reference_number,
+      description: "Payment for #{invoice.description}",
+      callback_url: final_callback_url,
+      clinic_id: clinic_id
+    }
+
+    # Initiate the STK push
+    case STKPush.initiate(stk_params) do
+      {:ok, %{checkout_request_id: checkout_id, merchant_request_id: merchant_id} = response} ->
+        # Create a transaction record
+        {:ok, _transaction} = Transaction.create(%{
+          checkout_request_id: checkout_id,
+          merchant_request_id: merchant_id,
+          invoice_id: invoice.id,
+          amount: invoice.amount,
+          phone_number: formatted_phone,
+          status: "pending",
+          clinic_id: clinic_id,
+          reference: invoice.reference_number
+        })
+
+        # Update the invoice status to "payment_initiated"
+        {:ok, _updated_invoice} = Invoices.update_invoice(invoice, %{
+          payment_status: "payment_initiated",
+          payment_method: "mpesa",
+          last_payment_attempt: DateTime.utc_now()
+        })
+
+        {:ok, response}
+
+      {:error, reason} = error ->
+        # Log the error
+        Logger.error("Failed to initiate M-Pesa payment for invoice #{invoice.id}: #{inspect(reason)}")
+
+        # Update the invoice with the failed status
+        {:ok, _updated_invoice} = Invoices.update_invoice(invoice, %{
+          payment_status: "payment_failed",
+          payment_method: "mpesa",
+          last_payment_attempt: DateTime.utc_now(),
+          payment_error: inspect(reason)
+        })
+
+        error
+    end
+  end
+
+  @doc """
+  Processes an M-Pesa callback for an STK push transaction.
+  Updates the transaction and invoice status based on the callback result.
+
+  ## Parameters
+
+  - callback_data: The callback data received from M-Pesa
+
+  ## Returns
+
+  - `{:ok, %{invoice: invoice, transaction: transaction}}` on success
+  - `{:error, reason}` on failure
+  """
+  @spec process_callback(map()) :: {:ok, map()} | {:error, any()}
+  def process_callback(callback_data) do
+    # Extract the relevant data from the callback
+    %{
+      "CheckoutRequestID" => checkout_request_id,
+      "MerchantRequestID" => _merchant_request_id,
+      "ResultCode" => result_code
+    } = callback_data
+
+    # Find the transaction by the checkout request ID
+    case Transaction.get_by_checkout_request_id(checkout_request_id) do
+      nil ->
+        {:error, :transaction_not_found}
+
+      transaction ->
+        # Get the invoice associated with the transaction
+        invoice = Invoices.get_invoice(transaction.invoice_id)
+
+        if is_nil(invoice) do
+          {:error, :invoice_not_found}
+        else
+          # Process the result based on the result code
+          if result_code == "0" do
+            # Payment successful
+            process_successful_payment(transaction, invoice, callback_data)
+          else
+            # Payment failed
+            process_failed_payment(transaction, invoice, callback_data)
+          end
+        end
+    end
+  end
+
+  @doc """
+  Checks the status of a pending M-Pesa transaction for an invoice.
+
+  ## Parameters
+
+  - invoice: The invoice to check the payment status for
+
+  ## Returns
+
+  - `{:ok, status}` where status is one of :completed, :pending, or :failed
+  - `{:error, reason}` on failure
+  """
+  @spec check_payment_status(map()) :: {:ok, atom()} | {:error, any()}
+  def check_payment_status(invoice) do
+    # Find the latest transaction for this invoice
+    case Transaction.get_latest_for_invoice(invoice.id) do
+      nil ->
+        {:ok, :no_transaction}
+
+      transaction ->
+        # Get the clinic ID from the transaction
+        clinic_id = transaction.clinic_id
+
+        # Get the clinic-specific M-Pesa configuration
+        mpesa_config = Config.get_config_for_clinic(clinic_id)
+
+        # Check the status of the transaction with M-Pesa
+        case STKPush.query_status(transaction.checkout_request_id, mpesa_config) do
+          {:ok, %{result_code: "0"}} ->
+            # Payment was successful, update the transaction and invoice
+            process_successful_payment(transaction, invoice, %{
+              "ResultCode" => "0",
+              "ResultDesc" => "The service request is processed successfully."
+            })
+
+          {:ok, %{result_code: code, result_desc: desc}} when code != "0" ->
+            # Payment failed
+            process_failed_payment(transaction, invoice, %{
+              "ResultCode" => code,
+              "ResultDesc" => desc
+            })
+
+          {:error, reason} ->
+            # Error checking status, but don't update the transaction yet
+            Logger.error("Error checking M-Pesa transaction status: #{inspect(reason)}")
+            {:error, reason}
+        end
+    end
+  end
+
+  # Private functions
+
+  defp process_successful_payment(transaction, invoice, callback_data) do
+    # Extract additional data from the callback
+    mpesa_receipt = callback_data["MpesaReceiptNumber"] || "N/A"
+    transaction_date = callback_data["TransactionDate"] || DateTime.utc_now() |> DateTime.to_string()
+
+    # Update the transaction status
+    {:ok, updated_transaction} = Transaction.update(transaction, %{
+      status: "completed",
+      mpesa_receipt_number: mpesa_receipt,
+      transaction_date: transaction_date,
+      result_code: "0",
+      result_description: "Success"
+    })
+
+    # Update the invoice status
+    {:ok, updated_invoice} = Invoices.update_invoice(invoice, %{
+      status: "paid",
+      payment_status: "completed",
+      payment_date: DateTime.utc_now(),
+      payment_reference: mpesa_receipt
+    })
+
+    # If this is an appointment invoice, update the appointment status
+    if invoice.appointment_id do
+      appointment = Appointments.get_appointment(invoice.appointment_id)
+
+      if appointment do
+        {:ok, _updated_appointment} = Appointments.update_appointment(appointment, %{
+          payment_status: "paid"
+        })
+
+        # Send confirmation notification to the patient
+        send_payment_confirmation_notification(appointment, updated_invoice)
+      end
+    end
+
+    {:ok, %{invoice: updated_invoice, transaction: updated_transaction}}
+  end
+
+  defp process_failed_payment(transaction, invoice, callback_data) do
+    # Extract data from the callback
+    result_code = callback_data["ResultCode"]
+    result_desc = callback_data["ResultDesc"] || "Payment failed"
+
+    # Update the transaction status
+    {:ok, updated_transaction} = Transaction.update(transaction, %{
+      status: "failed",
+      result_code: result_code,
+      result_description: result_desc
+    })
+
+    # Update the invoice status
+    {:ok, updated_invoice} = Invoices.update_invoice(invoice, %{
+      payment_status: "failed",
+      payment_error: result_desc
+    })
+
+    {:ok, %{invoice: updated_invoice, transaction: updated_transaction}}
+  end
+
+  defp send_payment_confirmation_notification(appointment, invoice) do
+    # Get the patient's phone number
+    phone_number = appointment.patient.phone_number
+
+    # Get the clinic details
+    clinic = Clinics.get_clinic(get_clinic_id_from_appointment(appointment))
+
+    # Prepare the notification message
+    message = """
+    Payment Confirmed: #{invoice.reference_number}
+    Amount: KES #{invoice.amount}
+    For: Appointment with Dr. #{appointment.doctor.name}
+    Date: #{Calendar.strftime(appointment.start_time, "%B %d, %Y at %I:%M %p")}
+    #{if appointment.appointment_type == "virtual", do: "\nVirtual meeting link will be available before your appointment.", else: "\nLocation: #{clinic.name}, #{clinic.address}"}
+
+    Thank you for choosing #{clinic.name}.
+    """
+
+    # Send the SMS notification
+    Notifications.send_sms(phone_number, message, get_clinic_id_from_appointment(appointment))
+  end
+
+  defp get_clinic_id_from_invoice(invoice) do
+    cond do
+      # If the invoice has a clinic_id, use that
+      invoice.clinic_id && invoice.clinic_id != "" ->
+        invoice.clinic_id
+
+      # If the invoice is for an appointment, get the clinic ID from the appointment
+      invoice.appointment_id ->
+        appointment = Appointments.get_appointment(invoice.appointment_id)
+        get_clinic_id_from_appointment(appointment)
+
+      # Otherwise, fall back to a default clinic ID
+      true ->
+        Application.get_env(:clinicpro, :default_clinic_id, "clinic_001")
+    end
+  end
+
+  defp get_clinic_id_from_appointment(appointment) do
+    cond do
+      # If the appointment has a clinic_id, use that
+      appointment.clinic_id && appointment.clinic_id != "" ->
+        appointment.clinic_id
+
+      # If the appointment has a doctor with a clinic association, use that
+      appointment.doctor && appointment.doctor.clinic_id && appointment.doctor.clinic_id != "" ->
+        appointment.doctor.clinic_id
+
+      # Otherwise, fall back to a default clinic ID
+      true ->
+        Application.get_env(:clinicpro, :default_clinic_id, "clinic_001")
+    end
+  end
+
+  defp format_phone_number(phone_number) do
+    # Remove any non-digit characters
+    digits_only = String.replace(phone_number, ~r/\D/, "")
+
+    # Handle different formats
+    cond do
+      # If it starts with "254" (Kenya country code), keep as is
+      String.starts_with?(digits_only, "254") && String.length(digits_only) == 12 ->
+        digits_only
+
+      # If it starts with "0", replace with "254"
+      String.starts_with?(digits_only, "0") && String.length(digits_only) == 10 ->
+        "254" <> String.slice(digits_only, 1..-1)
+
+      # If it starts with "+", remove the "+" and keep the rest
+      String.starts_with?(phone_number, "+") ->
+        String.replace(phone_number, "+", "")
+
+      # Otherwise, assume it's a local number without the leading "0" and add "254"
+      String.length(digits_only) == 9 ->
+        "254" <> digits_only
+
+      # Return as is if none of the above match
+      true ->
+        digits_only
+    end
+  end
+end
diff --git a/lib/clinicpro/medications/medications.ex b/lib/clinicpro/medications/medications.ex
new file mode 100644
index 0000000..4ed4af9
--- /dev/null
+++ b/lib/clinicpro/medications/medications.ex
@@ -0,0 +1,144 @@
+defmodule Clinicpro.Medications do
+  @moduledoc """
+  The Medications context.
+  Handles medication management with Typesense integration for search functionality.
+  Supports multi-tenant architecture with clinic-specific medication collections.
+  """
+
+  alias Clinicpro.Medications.TypesenseConfig
+  alias Clinicpro.Repo
+  alias Ecto.UUID
+
+  @doc """
+  Searches for medications in the clinic's collection.
+  Returns a list of matching medications.
+  """
+  def search(clinic_id, query, options \\ %{}) do
+    case TypesenseConfig.search_medications(clinic_id, query, options) do
+      {:ok, results} ->
+        {:ok, Enum.map(results, fn hit -> hit["document"] end)}
+      {:error, error} ->
+        {:error, error}
+    end
+  end
+
+  @doc """
+  Adds a medication to the clinic's collection.
+  """
+  def add_medication(clinic_id, attrs) do
+    # Generate a UUID if not provided
+    medication = Map.put_new(attrs, "id", UUID.generate())
+
+    case TypesenseConfig.index_medication(clinic_id, medication) do
+      {:ok, result} -> {:ok, result}
+      {:error, error} -> {:error, error}
+    end
+  end
+
+  @doc """
+  Bulk imports medications for a clinic.
+  Useful for initial setup or data migration.
+  """
+  def bulk_import(clinic_id, medications) do
+    # Ensure each medication has an ID
+    medications = Enum.map(medications, fn med ->
+      Map.put_new(med, "id", UUID.generate())
+    end)
+
+    # Create the collection if it doesn't exist
+    TypesenseConfig.create_collection_if_not_exists(clinic_id)
+
+    # Get the collection name
+    collection_name = TypesenseConfig.collection_name(clinic_id)
+
+    # Import the medications
+    TypesenseConfig.client()
+    |> Typesense.import_documents(collection_name, medications)
+  end
+
+  @doc """
+  Returns a list of common medication forms for UI dropdowns.
+  """
+  def medication_forms do
+    [
+      "Tablet",
+      "Capsule",
+      "Liquid",
+      "Injection",
+      "Cream",
+      "Ointment",
+      "Gel",
+      "Patch",
+      "Inhaler",
+      "Spray",
+      "Drops",
+      "Suppository"
+    ]
+  end
+
+  @doc """
+  Returns a list of common medication frequencies for UI dropdowns.
+  """
+  def medication_frequencies do
+    [
+      "Once daily",
+      "Twice daily",
+      "Three times daily",
+      "Four times daily",
+      "Every 4 hours",
+      "Every 6 hours",
+      "Every 8 hours",
+      "Every 12 hours",
+      "As needed",
+      "Before meals",
+      "After meals",
+      "At bedtime"
+    ]
+  end
+
+  @doc """
+  Returns a list of common medication durations for UI dropdowns.
+  """
+  def medication_durations do
+    [
+      "3 days",
+      "5 days",
+      "7 days",
+      "10 days",
+      "14 days",
+      "21 days",
+      "28 days",
+      "30 days",
+      "60 days",
+      "90 days",
+      "6 months",
+      "Indefinitely"
+    ]
+  end
+
+  @doc """
+  Returns a list of common medication categories for UI dropdowns.
+  """
+  def medication_categories do
+    [
+      "Analgesic",
+      "Antibiotic",
+      "Antidepressant",
+      "Antifungal",
+      "Antihistamine",
+      "Antihypertensive",
+      "Anti-inflammatory",
+      "Antimalarial",
+      "Antipsychotic",
+      "Antiviral",
+      "Bronchodilator",
+      "Decongestant",
+      "Diuretic",
+      "Hormone",
+      "Sedative",
+      "Steroid",
+      "Supplement",
+      "Vaccine"
+    ]
+  end
+end
diff --git a/lib/clinicpro/medications/typesense_config.ex b/lib/clinicpro/medications/typesense_config.ex
new file mode 100644
index 0000000..d601cb5
--- /dev/null
+++ b/lib/clinicpro/medications/typesense_config.ex
@@ -0,0 +1,146 @@
+defmodule Clinicpro.Medications.TypesenseConfig do
+  @moduledoc """
+  Configuration for Typesense medication search with multi-tenant support.
+  Each clinic can have its own Typesense collection for medications.
+  """
+  import Ecto.Query
+  alias Clinicpro.Repo
+  alias Clinicpro.Clinics.Clinic
+
+  @doc """
+  Returns the Typesense client for the application.
+  """
+  def client do
+    config = Application.get_env(:clinicpro, :typesense) || %{}
+
+    Typesense.configure(
+      host: config[:host] || "localhost",
+      port: config[:port] || 8108,
+      protocol: config[:protocol] || "http",
+      api_key: config[:api_key] || "xyz"
+    )
+
+    Typesense.client()
+  end
+
+  @doc """
+  Returns the collection name for a specific clinic.
+  This ensures multi-tenant isolation of medication data.
+  """
+  def collection_name(clinic_id) when is_binary(clinic_id) do
+    "medications_#{clinic_id}"
+  end
+
+  @doc """
+  Creates the medication collection for a specific clinic if it doesn't exist.
+  """
+  def create_collection_if_not_exists(clinic_id) when is_binary(clinic_id) do
+    collection_name = collection_name(clinic_id)
+
+    # Check if collection exists
+    case Typesense.collections(client()) do
+      {:ok, collections} ->
+        if Enum.any?(collections, fn c -> c["name"] == collection_name end) do
+          {:ok, :already_exists}
+        else
+          create_collection(collection_name)
+        end
+
+      {:error, _} ->
+        create_collection(collection_name)
+    end
+  end
+
+  defp create_collection(collection_name) do
+    schema = %{
+      "name" => collection_name,
+      "fields" => [
+        %{
+          "name" => "id",
+          "type" => "string",
+          "facet" => false
+        },
+        %{
+          "name" => "name",
+          "type" => "string",
+          "facet" => false
+        },
+        %{
+          "name" => "code",
+          "type" => "string",
+          "facet" => true
+        },
+        %{
+          "name" => "form",
+          "type" => "string",
+          "facet" => true
+        },
+        %{
+          "name" => "strength",
+          "type" => "string",
+          "facet" => true
+        },
+        %{
+          "name" => "controlled_substance",
+          "type" => "bool",
+          "facet" => true
+        },
+        %{
+          "name" => "category",
+          "type" => "string",
+          "facet" => true
+        }
+      ],
+      "default_sorting_field" => "name"
+    }
+
+    Typesense.create_collection(client(), schema)
+  end
+
+  @doc """
+  Indexes a medication in the clinic's Typesense collection.
+  """
+  def index_medication(clinic_id, medication) do
+    collection_name = collection_name(clinic_id)
+
+    # Ensure collection exists
+    create_collection_if_not_exists(clinic_id)
+
+    # Index the medication
+    Typesense.create_document(client(), collection_name, medication)
+  end
+
+  @doc """
+  Searches for medications in the clinic's Typesense collection.
+  """
+  def search_medications(clinic_id, query, options \\ %{}) do
+    collection_name = collection_name(clinic_id)
+
+    # Default search parameters
+    search_params = Map.merge(%{
+      "q" => query,
+      "query_by" => "name,code",
+      "sort_by" => "name:asc",
+      "per_page" => 10
+    }, options)
+
+    case Typesense.search(client(), collection_name, search_params) do
+      {:ok, results} -> {:ok, results["hits"] || []}
+      {:error, error} -> {:error, error}
+    end
+  end
+
+  @doc """
+  Initializes Typesense collections for all clinics.
+  This should be called during application startup.
+  """
+  def initialize_for_all_clinics do
+    # Get all clinic IDs
+    clinic_ids = Repo.all(from(c in Clinic, select: c.id))
+
+    # Create collections for each clinic
+    Enum.each(clinic_ids, fn clinic_id ->
+      create_collection_if_not_exists(clinic_id)
+    end)
+  end
+end
diff --git a/lib/clinicpro/mpesa/auth.ex b/lib/clinicpro/mpesa/auth.ex
index 73b1963..58bffff 100644
--- a/lib/clinicpro/mpesa/auth.ex
+++ b/lib/clinicpro/mpesa/auth.ex
@@ -1,136 +1,153 @@
 defmodule Clinicpro.MPesa.Auth do
   @moduledoc """
-  Handles authentication with the M-Pesa API.
-
-  This module is responsible for:
-  1. Obtaining access tokens from the M-Pesa API
-  2. Caching tokens to reduce API calls
-  3. Handling token expiration and refresh
+  Handles M-Pesa authentication with multi-tenant support.
+  This module manages authentication with the Safaricom Daraja API,
+  ensuring proper isolation between clinics.
   """
 
   require Logger
-  alias Clinicpro.MPesa.Helpers
-
-  @sandbox_auth_url "https://sandbox.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials"
-  @prod_auth_url "https://api.safaricom.co.ke/oauth/v1/generate?grant_type=client_credentials"
-
-  # Token cache with ETS
-  @table_name :mpesa_tokens
+  alias Clinicpro.MPesa.Config
 
   @doc """
-  Gets an access token for the M-Pesa API.
-  Uses cached token if available and not expired.
+  Generates an access token for M-Pesa API calls.
 
   ## Parameters
 
-  - config: M-Pesa configuration for the clinic
+  - `clinic_id` - The ID of the clinic to generate an access token for
 
   ## Returns
 
-  - {:ok, token} on success
-  - {:error, reason} on failure
+  - `{:ok, %{access_token: token, expires_in: seconds}}` - If the token was generated successfully
+  - `{:error, reason}` - If the token generation failed
   """
-  def get_access_token(config) do
-    # Initialize ETS table if not exists
-    ensure_table_exists()
+  def generate_access_token(clinic_id) do
+    # Get the clinic's M-Pesa configuration
+    config = Config.get_config(clinic_id)
 
-    # Generate cache key based on credentials
-    cache_key = "#{config.consumer_key}:#{config.consumer_secret}"
+    # Build the authorization header
+    auth_string = Base.encode64("#{config.consumer_key}:#{config.consumer_secret}")
+    headers = [
+      {"Authorization", "Basic #{auth_string}"},
+      {"Content-Type", "application/json"}
+    ]
 
-    case lookup_token(cache_key) do
-      {:ok, token, _expiry} ->
-        {:ok, token}
+    # Make the request to the M-Pesa API
+    url = "#{config.base_url}/oauth/v1/generate?grant_type=client_credentials"
 
-      :not_found ->
-        # Fetch new token
-        with {:ok, token, expires_in} <- fetch_new_token(config),
-             # Calculate expiry time (slightly before actual expiry)
-             expiry = :os.system_time(:seconds) + expires_in - 60 do
-          # Cache the token
-          :ets.insert(@table_name, {cache_key, token, expiry})
-          {:ok, token}
+    case HTTPoison.get(url, headers) do
+      {:ok, %HTTPoison.Response{status_code: 200, body: body}} ->
+        # Parse the response
+        case Jason.decode(body) do
+          {:ok, %{"access_token" => token, "expires_in" => expires_in}} ->
+            # Cache the token (optional)
+            cache_token(clinic_id, token, expires_in)
+
+            {:ok, %{access_token: token, expires_in: expires_in}}
+
+          {:error, _} = error ->
+            Logger.error("Failed to parse M-Pesa access token response: #{inspect(error)}")
+            {:error, :invalid_response}
         end
+
+      {:ok, %HTTPoison.Response{status_code: status_code, body: body}} ->
+        Logger.error("M-Pesa access token request failed with status #{status_code}: #{body}")
+        {:error, :request_failed}
+
+      {:error, %HTTPoison.Error{reason: reason}} ->
+        Logger.error("M-Pesa access token request failed: #{inspect(reason)}")
+        {:error, :request_failed}
     end
   end
 
   @doc """
-  Invalidates a cached token for a specific configuration.
-  Useful when a token is rejected by the API.
+  Gets a cached access token for a clinic if available, otherwise generates a new one.
 
   ## Parameters
 
-  - config: M-Pesa configuration for the clinic
-  """
-  def invalidate_token(config) do
-    # Initialize ETS table if not exists
-    ensure_table_exists()
+  - `clinic_id` - The ID of the clinic to get an access token for
 
-    # Generate cache key based on credentials
-    cache_key = "#{config.consumer_key}:#{config.consumer_secret}"
+  ## Returns
 
-    # Delete the token from cache
-    :ets.delete(@table_name, cache_key)
+  - `{:ok, token}` - If a valid token was found or generated
+  - `{:error, reason}` - If the token retrieval failed
+  """
+  def get_access_token(clinic_id) do
+    case get_cached_token(clinic_id) do
+      {:ok, token} ->
+        {:ok, token}
 
-    :ok
+      {:error, _} ->
+        # No valid cached token, generate a new one
+        case generate_access_token(clinic_id) do
+          {:ok, %{access_token: token}} -> {:ok, token}
+          error -> error
+        end
+    end
   end
 
-  # Private functions
+  @doc """
+  Generates a password for STK Push requests.
 
-  defp ensure_table_exists do
-    if :ets.whereis(@table_name) == :undefined do
-      :ets.new(@table_name, [:named_table, :set, :public])
-    end
-  end
+  ## Parameters
 
-  defp lookup_token(cache_key) do
-    case :ets.lookup(@table_name, cache_key) do
-      [{^cache_key, token, expiry}] ->
-        if expiry > :os.system_time(:seconds) do
-          {:ok, token, expiry}
-        else
-          :not_found
-        end
+  - `shortcode` - The M-Pesa shortcode
+  - `passkey` - The M-Pesa passkey
+  - `timestamp` - The timestamp to use in the password
 
-      [] ->
-        :not_found
-    end
+  ## Returns
+
+  - The generated password
+  """
+  def generate_password(shortcode, passkey, timestamp) do
+    Base.encode64("#{shortcode}#{passkey}#{timestamp}")
   end
 
-  defp fetch_new_token(config) do
-    url = if config.environment == "production", do: @prod_auth_url, else: @sandbox_auth_url
+  @doc """
+  Generates a timestamp for M-Pesa API calls in the format YYYYMMDDHHmmss.
 
-    auth_header = "Basic " <> Base.encode64("#{config.consumer_key}:#{config.consumer_secret}")
+  ## Returns
 
-    headers = [
-      {"Authorization", auth_header},
-      {"Content-Type", "application/json"}
-    ]
+  - The generated timestamp
+  """
+  def generate_timestamp do
+    DateTime.utc_now()
+    |> DateTime.to_naive()
+    |> NaiveDateTime.to_string()
+    |> String.replace(~r/[^\d]/, "")
+    |> String.slice(0, 14)
+  end
 
-    Logger.debug("Fetching new M-Pesa access token")
+  # Private functions
 
-    case HTTPoison.get(url, headers) do
-      {:ok, response} when is_map(response) and response.status_code == 200 ->
-        case Jason.decode(response.body) do
-          {:ok, %{"access_token" => token, "expires_in" => expires_in}} ->
-            Logger.debug("Successfully obtained M-Pesa access token")
-            {:ok, token, expires_in}
+  # These functions implement a simple in-memory cache for access tokens
+  # In a production environment, you might want to use a more robust caching solution
 
-          {:ok, decoded} ->
-            Logger.error("Invalid token response format: #{inspect(decoded)}")
-            {:error, :invalid_token_response}
+  defp cache_token(clinic_id, token, expires_in) do
+    # Calculate expiry time (subtract a buffer to ensure we don't use an expired token)
+    buffer = 60 # 1 minute buffer
+    expiry = :os.system_time(:second) + expires_in - buffer
 
-          {:error, reason} ->
-            Logger.error("Failed to decode token response: #{inspect(reason)}")
-            {:error, :invalid_token_response}
-        end
+    # Store the token in the process dictionary
+    # In a real application, you would use a proper cache like ETS or Redis
+    Process.put({:mpesa_token, clinic_id}, {token, expiry})
 
-      {:ok, response} when is_map(response) ->
-        Logger.error("Failed to obtain token: #{response.status_code} - #{response.body}")
-        {:error, %{status_code: response.status_code, body: response.body}}
+    :ok
+  end
+
+  defp get_cached_token(clinic_id) do
+    case Process.get({:mpesa_token, clinic_id}) do
+      nil ->
+        {:error, :no_cached_token}
 
-      {:error, error} ->
-        Logger.error("HTTP request failed: #{inspect(error)}")
-        {:error, error}
+      {token, expiry} ->
+        # Check if the token is still valid
+        if :os.system_time(:second) < expiry do
+          {:ok, token}
+        else
+          # Token has expired
+          Process.delete({:mpesa_token, clinic_id})
+          {:error, :token_expired}
+        end
     end
   end
 end
diff --git a/lib/clinicpro/mpesa/c2b.ex b/lib/clinicpro/mpesa/c2b.ex
index e19181a..9793225 100644
--- a/lib/clinicpro/mpesa/c2b.ex
+++ b/lib/clinicpro/mpesa/c2b.ex
@@ -1,110 +1,254 @@
 defmodule Clinicpro.MPesa.C2B do
   @moduledoc """
-  Handles C2B (Customer to Business) payments for M-Pesa.
-
-  This module is responsible for:
-  1. Registering validation and confirmation URLs
-  2. Handling C2B payment requests
-  3. Processing C2B callbacks
+  Handles M-Pesa Customer-to-Business (C2B) operations with multi-tenant support.
+  This module manages C2B URL registration and payment handling for the Safaricom Daraja API,
+  ensuring proper isolation between clinics.
   """
 
   require Logger
-  alias Clinicpro.MPesa.{Auth, Helpers}
-
-  @sandbox_register_url "https://sandbox.safaricom.co.ke/mpesa/c2b/v1/registerurl"
-  @prod_register_url "https://api.safaricom.co.ke/mpesa/c2b/v1/registerurl"
-  @sandbox_simulate_url "https://sandbox.safaricom.co.ke/mpesa/c2b/v1/simulate"
-  @prod_simulate_url "https://api.safaricom.co.ke/mpesa/c2b/v1/simulate"
+  alias Clinicpro.MPesa.{Auth, Config}
 
   @doc """
-  Registers validation and confirmation URLs for C2B payments.
+  Registers C2B URLs for a specific clinic.
 
   ## Parameters
 
-  - config: M-Pesa configuration for the clinic
+  - `clinic_id` - The ID of the clinic to register URLs for
 
   ## Returns
 
-  - {:ok, response} on success
-  - {:error, reason} on failure
+  - `{:ok, response}` - If the registration was successful
+  - `{:error, reason}` - If the registration failed
   """
-  def register_urls(config) do
-    url =
-      if config.environment == "production", do: @prod_register_url, else: @sandbox_register_url
-
-    with {:ok, token} <- Auth.get_access_token(config),
-         payload = build_register_payload(config),
-         {:ok, response} <- Helpers.make_request(url, payload, token) do
-      {:ok, response}
-    else
-      {:error, reason} ->
-        Logger.error("Failed to register C2B URLs: #{inspect(reason)}")
-        {:error, reason}
+  def register_urls(clinic_id) do
+    # Get the clinic's M-Pesa configuration
+    config = Config.get_config(clinic_id)
+
+    # Get access token
+    with {:ok, access_token} <- Auth.get_access_token(clinic_id) do
+      # Build the request payload
+      payload = %{
+        ShortCode: config.shortcode,
+        ResponseType: "Completed",
+        ConfirmationURL: config.confirmation_url,
+        ValidationURL: config.validation_url
+      }
+
+      # Build headers
+      headers = [
+        {"Authorization", "Bearer #{access_token}"},
+        {"Content-Type", "application/json"}
+      ]
+
+      # Make the request
+      url = "#{config.base_url}/mpesa/c2b/v1/registerurl"
+
+      case HTTPoison.post(url, Jason.encode!(payload), headers) do
+        {:ok, %HTTPoison.Response{status_code: 200, body: body}} ->
+          # Parse the response
+          case Jason.decode(body) do
+            {:ok, %{"ResponseCode" => "0", "ResponseDescription" => description}} ->
+              Logger.info("C2B URLs registered successfully for clinic #{clinic_id}: #{description}")
+              {:ok, %{description: description}}
+
+            {:ok, %{"errorCode" => error_code, "errorMessage" => error_message}} ->
+              Logger.error("C2B URL registration failed for clinic #{clinic_id}: #{error_code} - #{error_message}")
+              {:error, %{code: error_code, message: error_message}}
+
+            {:ok, response} ->
+              Logger.error("Unexpected C2B URL registration response for clinic #{clinic_id}: #{inspect(response)}")
+              {:error, :unexpected_response}
+
+            {:error, _} = error ->
+              Logger.error("Failed to parse C2B URL registration response for clinic #{clinic_id}: #{inspect(error)}")
+              {:error, :invalid_response}
+          end
+
+        {:ok, %HTTPoison.Response{status_code: status_code, body: body}} ->
+          Logger.error("C2B URL registration failed for clinic #{clinic_id} with status #{status_code}: #{body}")
+          {:error, :request_failed}
+
+        {:error, %HTTPoison.Error{reason: reason}} ->
+          Logger.error("C2B URL registration failed for clinic #{clinic_id}: #{inspect(reason)}")
+          {:error, :request_failed}
+      end
     end
   end
 
   @doc """
-  Simulates a C2B payment (only works in sandbox environment).
+  Simulates a C2B payment (only available in sandbox environment).
 
   ## Parameters
 
-  - config: M-Pesa configuration for the clinic
-  - phone: Customer's phone number
-  - amount: Amount to be paid
-  - reference: Your reference for this transaction
+  - `phone_number` - The phone number making the payment
+  - `amount` - The amount to pay
+  - `reference` - The reference for the transaction
+  - `clinic_id` - The ID of the clinic receiving the payment
 
   ## Returns
 
-  - {:ok, response} on success
-  - {:error, reason} on failure
+  - `{:ok, response}` - If the simulation was successful
+  - `{:error, reason}` - If the simulation failed
   """
-  def simulate_payment(config, phone, amount, reference) do
+  def simulate_payment(phone_number, amount, reference, clinic_id) do
+    # Get the clinic's M-Pesa configuration
+    config = Config.get_config(clinic_id)
+
+    # Check if we're in sandbox mode
     if config.environment != "sandbox" do
+      Logger.error("C2B simulation is only available in sandbox environment for clinic #{clinic_id}")
       {:error, :simulation_only_in_sandbox}
     else
-      url = @sandbox_simulate_url
-
-      with {:ok, normalized_phone} <- Helpers.validate_phone_number(phone),
-           {:ok, token} <- Auth.get_access_token(config),
-           payload = build_simulate_payload(config, normalized_phone, amount, reference),
-           {:ok, response} <- Helpers.make_request(url, payload, token) do
-        {:ok, response}
-      else
-        {:error, :invalid_phone_number} ->
-          Logger.error("Invalid phone number format: #{phone}")
-          {:error, :invalid_phone_number}
-
-        {:error, reason} ->
-          Logger.error("C2B simulation failed: #{inspect(reason)}")
-          {:error, reason}
+      # Format the phone number
+      formatted_phone = format_phone_number(phone_number)
+
+      # Get access token
+      with {:ok, access_token} <- Auth.get_access_token(clinic_id) do
+        # Build the request payload
+        payload = %{
+          ShortCode: config.shortcode,
+          CommandID: "CustomerPayBillOnline",
+          Amount: amount,
+          Msisdn: formatted_phone,
+          BillRefNumber: reference
+        }
+
+        # Build headers
+        headers = [
+          {"Authorization", "Bearer #{access_token}"},
+          {"Content-Type", "application/json"}
+        ]
+
+        # Make the request
+        url = "#{config.base_url}/mpesa/c2b/v1/simulate"
+
+        case HTTPoison.post(url, Jason.encode!(payload), headers) do
+          {:ok, %HTTPoison.Response{status_code: 200, body: body}} ->
+            # Parse the response
+            case Jason.decode(body) do
+              {:ok, %{"ResponseCode" => "0", "ResponseDescription" => description}} ->
+                Logger.info("C2B payment simulation successful for clinic #{clinic_id}: #{description}")
+                {:ok, %{description: description}}
+
+              {:ok, %{"errorCode" => error_code, "errorMessage" => error_message}} ->
+                Logger.error("C2B payment simulation failed for clinic #{clinic_id}: #{error_code} - #{error_message}")
+                {:error, %{code: error_code, message: error_message}}
+
+              {:ok, response} ->
+                Logger.error("Unexpected C2B payment simulation response for clinic #{clinic_id}: #{inspect(response)}")
+                {:error, :unexpected_response}
+
+              {:error, _} = error ->
+                Logger.error("Failed to parse C2B payment simulation response for clinic #{clinic_id}: #{inspect(error)}")
+                {:error, :invalid_response}
+            end
+
+          {:ok, %HTTPoison.Response{status_code: status_code, body: body}} ->
+            Logger.error("C2B payment simulation failed for clinic #{clinic_id} with status #{status_code}: #{body}")
+            {:error, :request_failed}
+
+          {:error, %HTTPoison.Error{reason: reason}} ->
+            Logger.error("C2B payment simulation failed for clinic #{clinic_id}: #{inspect(reason)}")
+            {:error, :request_failed}
+        end
       end
     end
   end
 
-  # Private functions
+  @doc """
+  Processes a C2B validation request.
+
+  ## Parameters
 
-  defp build_register_payload(config) do
-    # Use the c2b_shortcode if available, otherwise use the regular shortcode
-    shortcode = config.c2b_shortcode || config.shortcode
+  - `params` - The validation request parameters
+  - `clinic_id` - The ID of the clinic receiving the payment
 
-    %{
-      "ShortCode" => shortcode,
-      "ResponseType" => "Completed",
-      "ConfirmationURL" => config.c2b_confirmation_url,
-      "ValidationURL" => config.c2b_validation_url
-    }
+  ## Returns
+
+  - `{:ok, response}` - If the validation was successful
+  - `{:error, reason}` - If the validation failed
+  """
+  def process_validation(params, clinic_id) do
+    # Log the validation request
+    Logger.info("Processing C2B validation request for clinic #{clinic_id}: #{inspect(params)}")
+
+    # Here you would implement your validation logic
+    # For example, check if the account number exists, etc.
+    # For now, we'll just return a success response
+
+    {:ok, %{
+      ResultCode: 0,
+      ResultDesc: "Accepted"
+    }}
   end
 
-  defp build_simulate_payload(config, phone, amount, reference) do
-    # Use the c2b_shortcode if available, otherwise use the regular shortcode
-    shortcode = config.c2b_shortcode || config.shortcode
+  @doc """
+  Processes a C2B confirmation request.
+
+  ## Parameters
 
-    %{
-      "ShortCode" => shortcode,
-      "CommandID" => "CustomerPayBillOnline",
-      "Amount" => amount,
-      "Msisdn" => phone,
-      "BillRefNumber" => reference
+  - `params` - The confirmation request parameters
+  - `clinic_id` - The ID of the clinic receiving the payment
+
+  ## Returns
+
+  - `{:ok, response}` - If the confirmation was processed successfully
+  - `{:error, reason}` - If the confirmation processing failed
+  """
+  def process_confirmation(params, clinic_id) do
+    # Log the confirmation request
+    Logger.info("Processing C2B confirmation request for clinic #{clinic_id}: #{inspect(params)}")
+
+    # Extract relevant information from the params
+    _transaction_data = %{
+      transaction_id: params["TransID"],
+      transaction_time: params["TransTime"],
+      transaction_amount: params["TransAmount"],
+      business_shortcode: params["BusinessShortCode"],
+      bill_ref_number: params["BillRefNumber"],
+      invoice_number: params["InvoiceNumber"],
+      org_account_balance: params["OrgAccountBalance"],
+      third_party_trans_id: params["ThirdPartyTransID"],
+      phone_number: params["MSISDN"],
+      first_name: params["FirstName"],
+      middle_name: params["MiddleName"],
+      last_name: params["LastName"]
     }
+
+    # Here you would implement your confirmation processing logic
+    # For example, update the transaction status, notify the user, etc.
+    # This might involve calling other modules like Transaction or PaymentProcessor
+
+    # For now, we'll just return a success response
+    {:ok, %{
+      ResultCode: 0,
+      ResultDesc: "Confirmation received successfully"
+    }}
+  end
+
+  # Private functions
+
+  defp format_phone_number(phone_number) do
+    # Remove any non-digit characters
+    digits = String.replace(phone_number, ~r/\D/, "")
+
+    # Handle different formats
+    cond do
+      # If it starts with 254, keep it as is
+      String.starts_with?(digits, "254") ->
+        digits
+
+      # If it starts with 0, replace with 254
+      String.starts_with?(digits, "0") ->
+        "254" <> String.slice(digits, 1..-1)
+
+      # If it's 9 digits, assume it's missing the 254 prefix
+      String.length(digits) == 9 ->
+        "254" <> digits
+
+      # Otherwise, return as is
+      true ->
+        digits
+    end
   end
 end
diff --git a/lib/clinicpro/mpesa/callback.ex b/lib/clinicpro/mpesa/callback.ex
index 344c49d..fec7d63 100644
--- a/lib/clinicpro/mpesa/callback.ex
+++ b/lib/clinicpro/mpesa/callback.ex
@@ -1,269 +1,275 @@
 defmodule Clinicpro.MPesa.Callback do
   @moduledoc """
-  Processes callbacks from M-Pesa.
-
-  This module is responsible for:
-  1. Processing STK Push callbacks
-  2. Processing C2B callbacks
-  3. Validating callback payloads
-  4. Updating transaction records
-  5. Broadcasting payment events
+  Handles M-Pesa callback processing with multi-tenant support.
+  This module processes callbacks from Safaricom's M-Pesa API,
+  ensuring proper isolation between clinics.
   """
 
   require Logger
   alias Clinicpro.MPesa.Transaction
-  alias Phoenix.PubSub
+  alias Clinicpro.Invoices.PaymentProcessor
 
   @doc """
   Processes an STK Push callback from M-Pesa.
 
   ## Parameters
 
-  - payload: The callback payload from M-Pesa
+  - `params` - The callback parameters from M-Pesa
 
   ## Returns
 
-  - {:ok, transaction} on success
-  - {:error, reason} on failure
+  - `{:ok, transaction}` - If the callback was processed successfully
+  - `{:error, reason}` - If the callback processing failed
   """
-  def process_stk(payload) do
-    # Extract the Body from the callback payload
-    with %{"Body" => body} <- payload,
-         # Extract the stkCallback from the body
-         %{"stkCallback" => stk_callback} <- body,
-         # Extract the CheckoutRequestID
-         %{"CheckoutRequestID" => checkout_request_id} <- stk_callback do
-
-      # Find the transaction
-      case Transaction.find_by_checkout_request_id(checkout_request_id) do
-        {:ok, transaction} ->
-          # Update transaction with callback data
-          result_code = get_in(stk_callback, ["ResultCode"])
-          result_desc = get_in(stk_callback, ["ResultDesc"])
-
-          # Extract receipt number and other details if successful
-          metadata = if result_code == "0" do
-            item = get_in(stk_callback, ["CallbackMetadata", "Item"]) || []
-
-            %{
-              mpesa_receipt_number: find_item_value(item, "MpesaReceiptNumber"),
-              transaction_date: parse_transaction_date(find_item_value(item, "TransactionDate")),
-              phone: find_item_value(item, "PhoneNumber"),
-              amount: find_item_value(item, "Amount")
-            }
-          else
-            %{}
-          end
-
-          # Update transaction status
-          status = if result_code == "0", do: "completed", else: "failed"
-
-          {:ok, updated_transaction} = Transaction.update(transaction, Map.merge(%{
-            status: status,
-            result_code: result_code,
-            result_desc: result_desc,
-            raw_response: payload
-          }, metadata))
-
-          # Broadcast the event
-          broadcast_transaction_update(updated_transaction)
-          
-          # Process invoice update if payment was successful
-          if status == "completed" do
-            # This will update the invoice and handle appointment-specific actions
-            Clinicpro.Invoices.process_completed_payment(updated_transaction)
-          end
-
-          {:ok, updated_transaction}
-
-        {:error, :not_found} ->
-          # Log unknown transaction
-          Logger.warn("Unknown M-Pesa transaction: #{checkout_request_id}")
-          {:error, :transaction_not_found}
+  def process_stk_callback(params) do
+    # Extract the necessary data from the callback
+    with {:ok, data} <- extract_stk_callback_data(params),
+         {:ok, transaction} <- find_transaction(data),
+         :ok <- validate_clinic_transaction(transaction, data),
+         {:ok, updated_transaction} <- update_transaction_status(transaction, data) do
+
+      # Process payment if successful
+      if data.result_code == "0" do
+        process_successful_payment(updated_transaction)
+      else
+        process_failed_payment(updated_transaction)
       end
+
+      {:ok, updated_transaction}
     else
       error ->
-        Logger.error("Invalid M-Pesa STK callback format: #{inspect(error)}")
-        {:error, :invalid_callback_format}
+        Logger.error("Failed to process STK callback: #{inspect(error)}")
+        error
     end
   end
 
   @doc """
-  Processes a C2B validation callback from M-Pesa.
+  Processes a C2B confirmation callback from M-Pesa.
 
   ## Parameters
 
-  - payload: The callback payload from M-Pesa
+  - `params` - The callback parameters from M-Pesa
 
   ## Returns
 
-  - {:ok, response} - The response to send back to M-Pesa
+  - `{:ok, transaction}` - If the callback was processed successfully
+  - `{:error, reason}` - If the callback processing failed
   """
-  def process_c2b_validation(payload) do
-    # For validation, we typically just accept all transactions
-    # You can add custom validation logic here if needed
+  def process_c2b_confirmation(params) do
+    # Extract the necessary data from the callback
+    with {:ok, data} <- extract_c2b_callback_data(params),
+         {:ok, transaction} <- find_or_create_c2b_transaction(data),
+         :ok <- validate_clinic_transaction(transaction, data),
+         {:ok, updated_transaction} <- update_transaction_status(transaction, data) do
 
-    Logger.info("C2B validation received: #{inspect(payload)}")
+      # Process payment (C2B confirmations are always successful)
+      process_successful_payment(updated_transaction)
 
-    # Return a success response
-    {:ok, %{
-      "ResultCode" => 0,
-      "ResultDesc" => "Accepted"
-    }}
+      {:ok, updated_transaction}
+    else
+      error ->
+        Logger.error("Failed to process C2B confirmation: #{inspect(error)}")
+        error
+    end
   end
 
-  @doc """
-  Processes a C2B confirmation callback from M-Pesa.
+  # Private functions
 
-  ## Parameters
+  defp extract_stk_callback_data(params) do
+    body = params["Body"] || %{}
+    stkCallback = body["stkCallback"] || %{}
 
-  - payload: The callback payload from M-Pesa
+    # Extract metadata to get clinic_id and invoice_id
+    metadata =
+      case stkCallback["CallbackMetadata"] do
+        %{"Item" => items} -> extract_metadata_items(items)
+        _ -> %{}
+      end
 
-  ## Returns
+    # Extract merchant request ID and checkout request ID
+    merchant_request_id = stkCallback["MerchantRequestID"]
+    checkout_request_id = stkCallback["CheckoutRequestID"]
+    result_code = to_string(stkCallback["ResultCode"])
+    result_description = stkCallback["ResultDesc"]
 
-  - {:ok, transaction} on success
-  - {:error, reason} on failure
-  """
-  def process_c2b(payload) do
-    # Extract transaction details from the payload
-    with %{
-           "TransID" => trans_id,
-           "TransAmount" => amount,
-           "BillRefNumber" => reference,
-           "MSISDN" => phone,
-           "TransactionType" => transaction_type,
-           "BusinessShortCode" => shortcode
-         } <- payload do
-
-      # Try to find an existing transaction by reference
-      case Transaction.find_by_reference(reference) do
-        nil ->
-          # This is a new C2B payment, not linked to an existing transaction
-          # We need to find which clinic this payment belongs to
-          case find_clinic_by_shortcode(shortcode) do
-            {:ok, clinic_id} ->
-              # Create a new transaction record
-              {:ok, transaction} = Transaction.create_pending(%{
-                clinic_id: clinic_id,
-                reference: reference,
-                phone: phone,
-                amount: amount,
-                type: "c2b",
-                description: "C2B Payment: #{transaction_type}"
-              })
-
-              # Update with the payment details
-              {:ok, updated_transaction} = Transaction.update(transaction, %{
-                status: "completed",
-                mpesa_receipt_number: trans_id,
-                transaction_date: DateTime.utc_now(),
-                raw_response: payload
-              })
-
-              # Broadcast the event
-              broadcast_transaction_update(updated_transaction)
-              
-              # Try to find and update an invoice with this reference
-              Clinicpro.Invoices.process_completed_payment(updated_transaction)
-
-              {:ok, updated_transaction}
-
-            {:error, reason} ->
-              Logger.error("Could not determine clinic for C2B payment: #{inspect(reason)}")
-              {:error, :clinic_not_found}
-          end
-
-        transaction ->
-          # This is a C2B payment for an existing transaction
-          # Update the transaction with payment details
-          {:ok, updated_transaction} = Transaction.update(transaction, %{
-            status: "completed",
-            mpesa_receipt_number: trans_id,
-            transaction_date: DateTime.utc_now(),
-            raw_response: payload
-          })
-
-          # Broadcast the event
-          broadcast_transaction_update(updated_transaction)
-          
-          # Process invoice update
-          Clinicpro.Invoices.process_completed_payment(updated_transaction)
-
-          {:ok, updated_transaction}
-      end
+    # Return the extracted data
+    {:ok, %{
+      merchant_request_id: merchant_request_id,
+      checkout_request_id: checkout_request_id,
+      result_code: result_code,
+      result_description: result_description,
+      transaction_id: metadata["TransID"],
+      transaction_date: metadata["TransactionDate"],
+      phone_number: metadata["PhoneNumber"],
+      amount: metadata["Amount"]
+    }}
+  end
+
+  defp extract_c2b_callback_data(params) do
+    # Extract the necessary data from the C2B callback
+    transaction_type = params["TransactionType"]
+    transaction_id = params["TransID"]
+    transaction_time = params["TransTime"]
+    amount = params["TransAmount"]
+    phone_number = params["MSISDN"]
+    shortcode = params["BusinessShortCode"]
+    reference = params["BillRefNumber"]
+    invoice_id = reference
+
+    # Determine clinic_id from the shortcode
+    # This assumes you have a way to map shortcodes to clinic_ids
+    clinic_id = get_clinic_id_from_shortcode(shortcode)
+
+    if clinic_id do
+      {:ok, %{
+        transaction_type: transaction_type,
+        transaction_id: transaction_id,
+        transaction_date: transaction_time,
+        amount: amount,
+        phone_number: phone_number,
+        shortcode: shortcode,
+        reference: reference,
+        invoice_id: invoice_id,
+        clinic_id: clinic_id,
+        result_code: "0", # C2B confirmations are always successful
+        result_description: "Success"
+      }}
     else
-      error ->
-        Logger.error("Invalid M-Pesa C2B callback format: #{inspect(error)}")
-        {:error, :invalid_callback_format}
+      {:error, :invalid_shortcode}
     end
   end
 
-  # Private functions
-
-  defp find_item_value(items, name) do
-    Enum.find_value(items, fn item ->
-      if item["Name"] == name, do: item["Value"], else: nil
+  defp extract_metadata_items(items) do
+    Enum.reduce(items, %{}, fn item, acc ->
+      name = item["Name"]
+      value = item["Value"]
+      Map.put(acc, name, value)
     end)
   end
 
-  defp parse_transaction_date(nil), do: nil
-  defp parse_transaction_date(timestamp) do
-    # Parse the timestamp from M-Pesa format (YYYYMMDDHHmmss) to DateTime
-    case Regex.run(~r/^(\d{4})(\d{2})(\d{2})(\d{2})(\d{2})(\d{2})$/, "#{timestamp}") do
-      [_, year, month, day, hour, minute, second] ->
-        {:ok, datetime} = NaiveDateTime.new(
-          String.to_integer(year),
-          String.to_integer(month),
-          String.to_integer(day),
-          String.to_integer(hour),
-          String.to_integer(minute),
-          String.to_integer(second)
-        )
-        DateTime.from_naive!(datetime, "Africa/Nairobi")
-
-      _ ->
-        nil
+  defp find_transaction(%{checkout_request_id: checkout_request_id, merchant_request_id: merchant_request_id}) do
+    # Try to find by checkout request ID first
+    case Transaction.get_by_checkout_request_id(checkout_request_id, nil) do
+      nil ->
+        # If not found, try by merchant request ID
+        case Transaction.get_by_merchant_request_id(merchant_request_id, nil) do
+          nil -> {:error, :transaction_not_found}
+          transaction -> {:ok, transaction}
+        end
+      transaction ->
+        {:ok, transaction}
     end
   end
 
-  defp broadcast_transaction_update(transaction) do
-    # Broadcast to clinic-specific channel
-    PubSub.broadcast(
-      Clinicpro.PubSub,
-      "mpesa:transactions:#{transaction.clinic_id}",
-      {:mpesa_transaction_updated, transaction}
-    )
+  defp find_or_create_c2b_transaction(%{transaction_id: transaction_id, clinic_id: clinic_id} = data) do
+    # Try to find by transaction ID first
+    case Transaction.get_by_transaction_id(transaction_id, clinic_id) do
+      nil ->
+        # If not found, create a new transaction
+        attrs = %{
+          clinic_id: data.clinic_id,
+          invoice_id: data.invoice_id,
+          patient_id: get_patient_id_from_invoice(data.invoice_id, data.clinic_id),
+          amount: data.amount,
+          phone_number: data.phone_number,
+          status: "completed",
+          transaction_id: data.transaction_id,
+          reference: data.reference,
+          result_code: data.result_code,
+          result_description: data.result_description,
+          merchant_request_id: "C2B-#{data.transaction_id}",
+          checkout_request_id: "C2B-#{data.transaction_id}"
+        }
+
+        case Transaction.create(attrs) do
+          {:ok, transaction} -> {:ok, transaction}
+          {:error, _} = error -> error
+        end
+      transaction ->
+        {:ok, transaction}
+    end
+  end
 
-    # Broadcast to reference-specific channel
-    PubSub.broadcast(
-      Clinicpro.PubSub,
-      "mpesa:transaction:#{transaction.reference}",
-      {:mpesa_transaction_updated, transaction}
-    )
+  defp validate_clinic_transaction(transaction, %{clinic_id: clinic_id}) when not is_nil(clinic_id) do
+    if transaction.clinic_id == clinic_id do
+      :ok
+    else
+      {:error, :clinic_mismatch}
+    end
+  end
+
+  defp validate_clinic_transaction(_transaction, _data), do: :ok
+
+  defp update_transaction_status(transaction, %{result_code: "0"} = data) do
+    # Update transaction for successful payment
+    attrs = %{
+      status: "completed",
+      transaction_id: data.transaction_id,
+      result_code: data.result_code,
+      result_description: data.result_description
+    }
 
-    # Broadcast to global channel
-    PubSub.broadcast(
-      Clinicpro.PubSub,
-      "mpesa:transactions",
-      {:mpesa_transaction_updated, transaction}
+    Transaction.update(transaction, attrs)
+  end
+
+  defp update_transaction_status(transaction, data) do
+    # Update transaction for failed payment
+    attrs = %{
+      status: "failed",
+      result_code: data.result_code,
+      result_description: data.result_description
+    }
+
+    Transaction.update(transaction, attrs)
+  end
+
+  defp process_successful_payment(transaction) do
+    # Get the payment processor module
+    payment_processor = Application.get_env(:clinicpro, :payment_processor, PaymentProcessor)
+
+    # Process the payment
+    payment_processor.process_completed_payment(
+      transaction.invoice_id,
+      transaction.clinic_id,
+      %{
+        transaction_id: transaction.transaction_id,
+        amount: transaction.amount,
+        phone_number: transaction.phone_number
+      }
     )
   end
 
-  defp find_clinic_by_shortcode(shortcode) do
-    # This function would look up which clinic the shortcode belongs to
-    # For now, we'll implement a simple lookup using the mpesa_configs table
+  defp process_failed_payment(transaction) do
+    # Get the payment processor module
+    payment_processor = Application.get_env(:clinicpro, :payment_processor, PaymentProcessor)
+
+    # Process the failed payment
+    payment_processor.process_failed_payment(
+      transaction.invoice_id,
+      transaction.clinic_id,
+      %{
+        result_code: transaction.result_code,
+        result_description: transaction.result_description
+      }
+    )
+  end
 
+  defp get_clinic_id_from_shortcode(shortcode) do
+    # Query the database to find the clinic with this shortcode
+    # This is a simplified example - you would need to implement this based on your schema
     import Ecto.Query
-    alias Clinicpro.MPesa.Config
-
-    query = from c in Config,
-      where: c.shortcode == ^shortcode or c.c2b_shortcode == ^shortcode,
-      select: c.clinic_id,
-      limit: 1
+    case Clinicpro.Repo.one(from c in Clinicpro.MPesa.Config, where: c.shortcode == ^shortcode) do
+      nil -> nil
+      config -> config.clinic_id
+    end
+  end
 
-    case Clinicpro.Repo.one(query) do
-      nil -> {:error, :shortcode_not_found}
-      clinic_id -> {:ok, clinic_id}
+  defp get_patient_id_from_invoice(invoice_id, clinic_id) do
+    # Query the database to find the patient ID associated with this invoice
+    # This is a simplified example - you would need to implement this based on your schema
+    case Clinicpro.Invoices.get_invoice(invoice_id, clinic_id) do
+      nil -> nil
+      invoice -> invoice.patient_id
     end
   end
 end
diff --git a/lib/clinicpro/mpesa/callback_log.ex b/lib/clinicpro/mpesa/callback_log.ex
new file mode 100644
index 0000000..68c0487
--- /dev/null
+++ b/lib/clinicpro/mpesa/callback_log.ex
@@ -0,0 +1,185 @@
+defmodule Clinicpro.MPesa.CallbackLog do
+  @moduledoc """
+  Schema and functions for M-Pesa callback logs with multi-tenant support.
+  
+  This module provides a schema and functions for storing and retrieving M-Pesa callback logs,
+  ensuring proper isolation between clinics in a multi-tenant environment.
+  """
+
+  use Ecto.Schema
+  import Ecto.Changeset
+  import Ecto.Query
+
+  alias Clinicpro.Repo
+  alias __MODULE__
+
+  schema "mpesa_callback_logs" do
+    field :clinic_id, :integer
+    field :type, :string # stk_push, c2b_validation, c2b_confirmation, transaction_status
+    field :status, :string # success, failed
+    field :reference, :string
+    field :shortcode, :string
+    field :url, :string
+    field :request_payload, :string
+    field :response_payload, :string
+    field :response_code, :string
+    field :response_description, :string
+    field :processing_time, :integer
+    field :transaction_id, :string
+
+    timestamps()
+  end
+
+  @doc """
+  Creates a new M-Pesa callback log.
+
+  ## Parameters
+
+  * `attrs` - Map of attributes for the callback log
+
+  ## Returns
+
+  * `{:ok, callback_log}` - On success
+  * `{:error, changeset}` - On failure
+  """
+  def create(attrs) do
+    %CallbackLog{}
+    |> changeset(attrs)
+    |> Repo.insert()
+  end
+
+  @doc """
+  Gets a callback log by ID.
+
+  ## Parameters
+
+  * `id` - The ID of the callback log to get
+  * `clinic_id` - The clinic ID to ensure proper isolation
+
+  ## Returns
+
+  * `callback_log` - If found and belongs to the clinic
+  * `nil` - If not found or doesn't belong to the clinic
+  """
+  def get_by_id_and_clinic(id, clinic_id) do
+    Repo.get_by(CallbackLog, id: id, clinic_id: clinic_id)
+  end
+
+  @doc """
+  Lists all callback logs for a specific clinic with optional filtering.
+
+  ## Parameters
+
+  * `clinic_id` - The ID of the clinic to list callback logs for
+  * `filters` - Map of filters to apply (type, status, from_date, to_date)
+  * `page` - Page number for pagination
+  * `per_page` - Number of items per page
+
+  ## Returns
+
+  * `{callback_logs, pagination}` - List of callback logs and pagination info
+  """
+  def paginate_by_clinic(clinic_id, filters \\ %{}, page \\ 1, per_page \\ 20) do
+    query = CallbackLog
+    |> where(clinic_id: ^clinic_id)
+    |> apply_filters(filters)
+    |> order_by(desc: :inserted_at)
+
+    # Get total count for pagination
+    total_count = Repo.aggregate(query, :count, :id)
+    total_pages = ceil(total_count / per_page)
+
+    # Apply pagination
+    callback_logs = query
+    |> limit(^per_page)
+    |> offset(^((page - 1) * per_page))
+    |> Repo.all()
+
+    # Return callback logs with pagination info
+    {callback_logs, %{
+      page: page,
+      per_page: per_page,
+      total_count: total_count,
+      total_pages: total_pages
+    }}
+  end
+
+  @doc """
+  Lists callback logs for a specific transaction.
+
+  ## Parameters
+
+  * `transaction_id` - The ID of the transaction to list callback logs for
+  * `clinic_id` - The clinic ID to ensure proper isolation
+
+  ## Returns
+
+  * List of callback logs
+  """
+  def list_by_transaction(transaction_id, clinic_id) do
+    CallbackLog
+    |> where(transaction_id: ^transaction_id)
+    |> where(clinic_id: ^clinic_id)
+    |> order_by(desc: :inserted_at)
+    |> Repo.all()
+  end
+
+  @doc """
+  Lists callback logs by type for a specific clinic.
+
+  ## Parameters
+
+  * `type` - The type of callback logs to list
+  * `clinic_id` - The clinic ID to ensure proper isolation
+
+  ## Returns
+
+  * List of callback logs
+  """
+  def list_by_type(type, clinic_id) do
+    CallbackLog
+    |> where(type: ^type)
+    |> where(clinic_id: ^clinic_id)
+    |> order_by(desc: :inserted_at)
+    |> Repo.all()
+  end
+
+  # Private functions
+
+  defp changeset(callback_log, attrs) do
+    callback_log
+    |> cast(attrs, [
+      :clinic_id, :type, :status, :reference, :shortcode, :url, 
+      :request_payload, :response_payload, :response_code, 
+      :response_description, :processing_time, :transaction_id
+    ])
+    |> validate_required([:clinic_id, :type, :status, :request_payload])
+    |> validate_inclusion(:type, ["stk_push", "c2b_validation", "c2b_confirmation", "transaction_status"])
+    |> validate_inclusion(:status, ["success", "failed"])
+  end
+
+  defp apply_filters(query, filters) do
+    Enum.reduce(filters, query, fn
+      {:type, nil}, query -> query
+      {:type, ""}, query -> query
+      {:type, type}, query -> where(query, [c], c.type == ^type)
+      
+      {:status, nil}, query -> query
+      {:status, ""}, query -> query
+      {:status, status}, query -> where(query, [c], c.status == ^status)
+      
+      {:from_date, nil}, query -> query
+      {:from_date, from_date}, query -> where(query, [c], c.inserted_at >= ^from_date)
+      
+      {:to_date, nil}, query -> query
+      {:to_date, to_date}, query -> 
+        # Add a day to include the entire end date
+        to_date = 
+          to_date
+          |> NaiveDateTime.add(86400, :second)
+        where(query, [c], c.inserted_at <= ^to_date)
+      
+      _, query -> query
+    end)
+  end
+end
diff --git a/lib/clinicpro/mpesa/config.ex b/lib/clinicpro/mpesa/config.ex
index 6ff0486..1696216 100644
--- a/lib/clinicpro/mpesa/config.ex
+++ b/lib/clinicpro/mpesa/config.ex
@@ -1,11 +1,9 @@
 defmodule Clinicpro.MPesa.Config do
   @moduledoc """
-  Manages M-Pesa configurations for multiple clinics.
+  Module for handling M-Pesa configurations with multi-tenant support.
 
-  This module handles:
-  1. Storing and retrieving clinic-specific M-Pesa credentials
-  2. Encrypting sensitive data in the database
-  3. Falling back to environment variables when clinic-specific config is missing
+  This module provides functions for creating, updating, and retrieving M-Pesa configurations
+  for different clinics, ensuring proper isolation in a multi-tenant environment.
   """
 
   use Ecto.Schema
@@ -13,173 +11,249 @@ defmodule Clinicpro.MPesa.Config do
   import Ecto.Query
 
   alias Clinicpro.Repo
-  alias Clinicpro.AdminBypass.Doctor
+  alias __MODULE__
 
   schema "mpesa_configs" do
+    field :clinic_id, :integer
     field :consumer_key, :string
     field :consumer_secret, :string
     field :passkey, :string
     field :shortcode, :string
-    # May differ from STK shortcode
-    field :c2b_shortcode, :string
     field :environment, :string, default: "sandbox"
-    field :stk_callback_url, :string
-    field :c2b_validation_url, :string
-    field :c2b_confirmation_url, :string
+    field :base_url, :string
+    field :callback_url, :string
+    field :validation_url, :string
+    field :confirmation_url, :string
     field :active, :boolean, default: true
 
-    belongs_to :clinic, Doctor, foreign_key: :clinic_id
-
     timestamps()
   end
 
   @doc """
-  Creates a changeset for M-Pesa configuration.
-  Validates required fields and formats.
+  Creates a new M-Pesa configuration for a clinic.
+
+  ## Parameters
+
+  * `attrs` - Map of attributes for the configuration
+
+  ## Returns
+
+  * `{:ok, config}` - On success
+  * `{:error, changeset}` - On failure
   """
-  def changeset(config, attrs) do
+  def create(attrs) do
+    %Config{}
+    |> changeset(attrs)
+    |> Repo.insert()
+  end
+
+  @doc """
+  Updates an existing M-Pesa configuration.
+
+  ## Parameters
+
+  * `config` - The configuration to update
+  * `attrs` - Map of attributes to update
+
+  ## Returns
+
+  * `{:ok, config}` - On success
+  * `{:error, changeset}` - On failure
+  """
+  def update(config, attrs) do
     config
-    |> cast(attrs, [
-      :consumer_key,
-      :consumer_secret,
-      :passkey,
-      :shortcode,
-      :c2b_shortcode,
-      :environment,
-      :stk_callback_url,
-      :c2b_validation_url,
-      :c2b_confirmation_url,
-      :active,
-      :clinic_id
-    ])
-    |> validate_required([
-      :consumer_key,
-      :consumer_secret,
-      :passkey,
-      :shortcode,
-      :environment,
-      :clinic_id
-    ])
-    |> validate_inclusion(:environment, ["sandbox", "production"])
-    |> foreign_key_constraint(:clinic_id)
-    |> maybe_encrypt_sensitive_fields()
+    |> changeset(attrs)
+    |> Repo.update()
   end
 
   @doc """
-  Gets the M-Pesa configuration for a specific clinic.
-  Falls back to environment variables if no clinic-specific config exists.
+  Gets a configuration by ID.
+
+  ## Parameters
+
+  * `id` - The ID of the configuration to get
+
+  ## Returns
+
+  * `config` - If found
+  * `nil` - If not found
+  """
+  def get_by_id(id) do
+    Repo.get(Config, id)
+  end
+
+  @doc """
+  Gets the active configuration for a clinic.
+
+  ## Parameters
+
+  * `clinic_id` - The ID of the clinic to get the configuration for
+
+  ## Returns
+
+  * `{:ok, config}` - If an active configuration was found
+  * `{:error, :no_active_config}` - If no active configuration was found
   """
-  def get_for_clinic(clinic_id) do
-    case Repo.get_by(__MODULE__, clinic_id: clinic_id, active: true) do
-      nil -> get_from_env()
-      config -> {:ok, decrypt_config(config)}
+  def get_active_config(clinic_id) do
+    case Repo.get_by(Config, clinic_id: clinic_id, active: true) do
+      nil -> {:error, :no_active_config}
+      config -> {:ok, config}
     end
   end
 
   @doc """
-  Creates or updates M-Pesa configuration for a clinic.
-  Encrypts sensitive fields before storing.
+  Gets any configuration for a clinic (active or inactive).
+
+  ## Parameters
+
+  * `clinic_id` - The ID of the clinic to get the configuration for
+
+  ## Returns
+
+  * `config` - If found
+  * `nil` - If not found
   """
-  def upsert_config(clinic_id, attrs) do
-    # Check if config exists for this clinic
-    config =
-      case Repo.get_by(__MODULE__, clinic_id: clinic_id) do
-        nil -> %__MODULE__{clinic_id: clinic_id}
-        existing -> existing
-      end
-
-    # Update or insert
-    config
-    |> changeset(Map.put(attrs, "clinic_id", clinic_id))
-    |> Repo.insert_or_update()
+  def get_config(clinic_id) do
+    Repo.get_by(Config, clinic_id: clinic_id)
+  end
+
+  @doc """
+  Lists all configurations.
+
+  ## Returns
+
+  * List of configurations
+  """
+  def list_configs do
+    Config
+    |> order_by(asc: :clinic_id)
+    |> Repo.all()
   end
 
   @doc """
-  Returns the default callback URLs based on the application's URL.
+  Lists all configurations for a specific clinic.
+
+  ## Parameters
+
+  * `clinic_id` - The ID of the clinic to list configurations for
+
+  ## Returns
+
+  * List of configurations
   """
-  def default_callback_urls do
-    base_url = System.get_env("APP_URL") || "https://clinicpro.example.com"
-
-    %{
-      stk_callback_url: "#{base_url}/api/mpesa/stk/callback",
-      c2b_validation_url: "#{base_url}/api/mpesa/c2b/validation",
-      c2b_confirmation_url: "#{base_url}/api/mpesa/c2b/confirmation"
-    }
+  def list_configs(clinic_id) do
+    Config
+    |> where(clinic_id: ^clinic_id)
+    |> order_by(desc: :inserted_at)
+    |> Repo.all()
   end
 
   @doc """
-  Gets M-Pesa configuration from environment variables.
-  Used as a fallback when clinic-specific configuration is not found.
-  
+  Activates a configuration.
+
+  This will deactivate all other configurations for the same clinic.
+
+  ## Parameters
+
+  * `id` - The ID of the configuration to activate
+
   ## Returns
-  
-  - {:ok, config} - Configuration from environment variables
-  - {:error, :config_not_found} - Required environment variables not set
+
+  * `{:ok, config}` - On success
+  * `{:error, changeset}` - On failure
   """
-  def get_from_env do
-    # Check if required env vars are set
-    case System.get_env("MPESA_CONSUMER_KEY") do
-      nil ->
-        {:error, :config_not_found}
-
-      _ ->
-        {:ok,
-         %{
-           consumer_key: System.get_env("MPESA_CONSUMER_KEY"),
-           consumer_secret: System.get_env("MPESA_CONSUMER_SECRET"),
-           passkey: System.get_env("MPESA_PASSKEY"),
-           shortcode: System.get_env("MPESA_SHORTCODE"),
-           c2b_shortcode: System.get_env("MPESA_C2B_SHORTCODE"),
-           environment: System.get_env("MPESA_ENVIRONMENT") || "sandbox",
-           stk_callback_url: System.get_env("MPESA_STK_CALLBACK_URL"),
-           c2b_validation_url: System.get_env("MPESA_C2B_VALIDATION_URL"),
-           c2b_confirmation_url: System.get_env("MPESA_C2B_CONFIRMATION_URL"),
-           active: true
-         }}
+  def activate(id) do
+    config = get_by_id(id)
+
+    if config do
+      # Deactivate all other configs for this clinic
+      from(c in Config, where: c.clinic_id == ^config.clinic_id and c.id != ^id)
+      |> Repo.update_all(set: [active: false])
+
+      # Activate this config
+      config
+      |> Ecto.Changeset.change(%{active: true})
+      |> Repo.update()
+    else
+      {:error, :not_found}
     end
   end
 
-  # Encrypt sensitive fields before saving to database
-  defp maybe_encrypt_sensitive_fields(changeset) do
-    if changeset.valid? do
-      sensitive_fields = [:consumer_key, :consumer_secret, :passkey]
-
-      Enum.reduce(sensitive_fields, changeset, fn field, acc ->
-        case get_change(acc, field) do
-          nil -> acc
-          value -> put_change(acc, field, encrypt_value(value))
-        end
-      end)
+  @doc """
+  Deactivates a configuration.
+
+  ## Parameters
+
+  * `id` - The ID of the configuration to deactivate
+
+  ## Returns
+
+  * `{:ok, config}` - On success
+  * `{:error, changeset}` - On failure
+  """
+  def deactivate(id) do
+    config = get_by_id(id)
+
+    if config do
+      config
+      |> Ecto.Changeset.change(%{active: false})
+      |> Repo.update()
     else
-      changeset
+      {:error, :not_found}
     end
   end
 
-  # Encrypt a value using Phoenix's secret_key_base
-  defp encrypt_value(value) do
-    # In a real app, use a proper encryption library
-    # This is a simple placeholder that simulates encryption
-    # by prepending "encrypted:" to the value
-    "encrypted:" <> value
+  @doc """
+  Gets the shortcode for a clinic.
+
+  ## Parameters
+
+  * `clinic_id` - The ID of the clinic to get the shortcode for
+
+  ## Returns
+
+  * `{:ok, shortcode}` - If found
+  * `{:error, :no_config}` - If no configuration was found
+  """
+  def get_shortcode(clinic_id) do
+    case get_active_config(clinic_id) do
+      {:ok, config} -> {:ok, config.shortcode}
+      {:error, _} -> {:error, :no_config}
+    end
   end
 
-  # Decrypt a config struct
-  defp decrypt_config(config) do
-    # In a production app, use a proper decryption library
-    sensitive_fields = [:consumer_key, :consumer_secret, :passkey]
+  @doc """
+  Gets the clinic ID for a shortcode.
+
+  ## Parameters
+
+  * `shortcode` - The shortcode to get the clinic ID for
 
-    decrypted =
-      Enum.reduce(sensitive_fields, config, fn field, acc ->
-        encrypted_value = Map.get(acc, field)
-        decrypted_value = decrypt_value(encrypted_value)
-        Map.put(acc, field, decrypted_value)
-      end)
+  ## Returns
 
-    decrypted
+  * `{:ok, clinic_id}` - If found
+  * `{:error, :not_found}` - If not found
+  """
+  def get_clinic_id_from_shortcode(shortcode) do
+    case Repo.get_by(Config, shortcode: shortcode) do
+      nil -> {:error, :not_found}
+      config -> {:ok, config.clinic_id}
+    end
   end
 
-  # Decrypt a value
-  defp decrypt_value(nil), do: nil
-  defp decrypt_value("encrypted:" <> value), do: value
-  defp decrypt_value(value), do: value
+  # Private functions
+
+  defp changeset(config, attrs) do
+    config
+    |> cast(attrs, [
+      :clinic_id, :consumer_key, :consumer_secret, :passkey, :shortcode,
+      :environment, :base_url, :callback_url, :validation_url, :confirmation_url, :active
+    ])
+    |> validate_required([
+      :clinic_id, :consumer_key, :consumer_secret, :passkey, :shortcode,
+      :environment, :base_url
+    ])
+    |> validate_inclusion(:environment, ["sandbox", "production"])
+    |> unique_constraint([:shortcode, :environment])
+  end
 end
diff --git a/lib/clinicpro/mpesa/helpers.ex b/lib/clinicpro/mpesa/helpers.ex
index c17e2b1..21d9e66 100644
--- a/lib/clinicpro/mpesa/helpers.ex
+++ b/lib/clinicpro/mpesa/helpers.ex
@@ -1,147 +1,219 @@
 defmodule Clinicpro.MPesa.Helpers do
   @moduledoc """
-  Helper functions for M-Pesa integration.
-
-  Provides utility functions for:
-  1. Phone number validation and normalization
-  2. HTTP request handling
-  3. Timestamp generation
-  4. Error handling
+  Provides utility functions for the M-Pesa integration.
+  This module contains helper functions used across the M-Pesa modules.
   """
 
   require Logger
 
   @doc """
-  Validates and normalizes a phone number to the format required by M-Pesa.
-
-  ## Examples
+  Validates a phone number and formats it to the required M-Pesa format.
 
-      iex> Clinicpro.MPesa.Helpers.validate_phone_number("0712345678")
-      {:ok, "254712345678"}
+  ## Parameters
 
-      iex> Clinicpro.MPesa.Helpers.validate_phone_number("+254712345678")
-      {:ok, "254712345678"}
+  - `phone_number` - The phone number to validate and format
 
-      iex> Clinicpro.MPesa.Helpers.validate_phone_number("712345678")
-      {:ok, "254712345678"}
+  ## Returns
 
-      iex> Clinicpro.MPesa.Helpers.validate_phone_number("invalid")
-      {:error, :invalid_phone_number}
+  - `{:ok, formatted_phone}` - If the phone number is valid
+  - `{:error, :invalid_phone_number}` - If the phone number is invalid
   """
-  def validate_phone_number(phone) when is_binary(phone) do
+  def validate_phone_number(phone_number) do
     # Remove any non-digit characters
-    digits_only = String.replace(phone, ~r/\D/, "")
+    digits = String.replace(phone_number, ~r/\D/, "")
+
+    # Format based on different patterns
+    formatted =
+      cond do
+        # If it starts with 254, keep it as is
+        String.starts_with?(digits, "254") ->
+          digits
+
+        # If it starts with 0, replace with 254
+        String.starts_with?(digits, "0") ->
+          "254" <> String.slice(digits, 1..-1)
+
+        # If it's 9 digits, assume it's missing the 254 prefix
+        String.length(digits) == 9 ->
+          "254" <> digits
+
+        # Otherwise, return as is
+        true ->
+          digits
+      end
+
+    # Validate the formatted number
+    if String.length(formatted) >= 12 && String.starts_with?(formatted, "254") do
+      {:ok, formatted}
+    else
+      Logger.error("Invalid phone number format: #{phone_number}")
+      {:error, :invalid_phone_number}
+    end
+  end
+
+  @doc """
+  Extracts metadata from an STK Push callback.
 
-    cond do
-      # If starts with 254, assume it's already in the correct format
-      String.starts_with?(digits_only, "254") and String.length(digits_only) == 12 ->
-        {:ok, digits_only}
+  ## Parameters
 
-      # If starts with 0, replace with 254
-      String.starts_with?(digits_only, "0") and String.length(digits_only) == 10 ->
-        {:ok, "254" <> String.slice(digits_only, 1..-1)}
+  - `callback_data` - The callback data from M-Pesa
 
-      # If 9 digits, assume it's missing the leading 0, add 254
-      String.length(digits_only) == 9 ->
-        {:ok, "254" <> digits_only}
+  ## Returns
 
-      # Invalid format
-      true ->
-        {:error, :invalid_phone_number}
+  - `{:ok, metadata}` - If metadata was successfully extracted
+  - `{:error, reason}` - If metadata extraction failed
+  """
+  def extract_stk_push_metadata(callback_data) do
+    try do
+      # Extract the metadata from the callback data
+      metadata =
+        callback_data
+        |> get_in(["Body", "stkCallback", "CallbackMetadata", "Item"])
+        |> Enum.reduce(%{}, fn item, acc ->
+          name = item["Name"]
+          value = item["Value"]
+
+          # Map the metadata fields to our internal representation
+          case name do
+            "Amount" -> Map.put(acc, :amount, value)
+            "MpesaReceiptNumber" -> Map.put(acc, :transaction_id, value)
+            "TransactionDate" -> Map.put(acc, :transaction_date, format_transaction_date(value))
+            "PhoneNumber" -> Map.put(acc, :phone_number, value)
+            _ -> acc
+          end
+        end)
+
+      {:ok, metadata}
+    rescue
+      e ->
+        Logger.error("Failed to extract STK Push metadata: #{inspect(e)}")
+        {:error, :invalid_callback_data}
     end
   end
 
-  def validate_phone_number(_), do: {:error, :invalid_phone_number}
-
   @doc """
-  Makes an HTTP request to the M-Pesa API.
+  Formats a transaction date from M-Pesa format to ISO format.
 
   ## Parameters
 
-  - url: The URL to make the request to
-  - payload: The request payload
-  - token: The access token for authentication
+  - `date_string` - The date string in M-Pesa format (YYYYMMDDHHmmss)
 
   ## Returns
 
-  - {:ok, response} on success
-  - {:error, reason} on failure
+  - The formatted date string in ISO format
   """
-  def make_request(url, payload, token) do
-    headers = [
-      {"Authorization", "Bearer " <> token},
-      {"Content-Type", "application/json"}
-    ]
-
-    # Log request (without sensitive data)
-    sanitized_payload = sanitize_payload(payload)
-    Logger.debug("M-Pesa API request to #{url}: #{inspect(sanitized_payload)}")
-
-    case HTTPoison.post(url, Jason.encode!(payload), headers) do
-      {:ok, response} when is_map(response) and response.status_code in 200..299 ->
-        case Jason.decode(response.body) do
-          {:ok, decoded} ->
-            # Log response (without sensitive data)
-            sanitized_response = sanitize_response(decoded)
-            Logger.debug("M-Pesa API response: #{inspect(sanitized_response)}")
-
-            # Check for M-Pesa API errors
-            if Map.has_key?(decoded, "errorCode") do
-              {:error,
-               %{error_code: decoded["errorCode"], error_message: decoded["errorMessage"]}}
-            else
-              {:ok, decoded}
-            end
-
-          {:error, _} ->
-            Logger.error("Failed to decode M-Pesa API response: #{response.body}")
-            {:error, :invalid_response_format}
-        end
-
-      {:ok, response} when is_map(response) ->
-        Logger.error("M-Pesa API error: #{response.status_code} - #{response.body}")
-        {:error, %{status_code: response.status_code, body: response.body}}
-
-      {:error, error} ->
-        Logger.error("HTTP request failed: #{inspect(error)}")
-        {:error, error}
+  def format_transaction_date(date_string) when is_binary(date_string) do
+    case String.length(date_string) do
+      14 ->
+        # Format: YYYYMMDDHHmmss
+        <<year::binary-size(4), month::binary-size(2), day::binary-size(2),
+          hour::binary-size(2), minute::binary-size(2), second::binary-size(2)>> = date_string
+
+        "#{year}-#{month}-#{day}T#{hour}:#{minute}:#{second}Z"
+
+      _ ->
+        # If the format is unexpected, return as is
+        date_string
     end
   end
 
+  def format_transaction_date(date_value) when is_integer(date_value) do
+    # Convert integer to string and format
+    date_value
+    |> Integer.to_string()
+    |> format_transaction_date()
+  end
+
+  def format_transaction_date(date_value), do: date_value
+
   @doc """
-  Generates a timestamp in the format required by M-Pesa (YYYYMMDDHHmmss).
+  Generates a unique reference for M-Pesa transactions.
+
+  ## Parameters
+
+  - `prefix` - Optional prefix for the reference
 
   ## Returns
 
-  - {:ok, timestamp} on success
+  - A unique reference string
   """
-  def get_timestamp do
-    timestamp =
-      DateTime.utc_now()
-      |> DateTime.to_naive()
-      |> NaiveDateTime.to_string()
-      |> String.replace(~r/[^\d]/, "")
-      |> String.slice(0, 14)
-
-    {:ok, timestamp}
+  def generate_reference(prefix \\ "CP") do
+    timestamp = :os.system_time(:millisecond)
+    random = :rand.uniform(999)
+    "#{prefix}#{timestamp}#{random}"
   end
 
-  # Private functions
+  @doc """
+  Maps a shortcode to a clinic ID.
+
+  ## Parameters
 
-  # Remove sensitive data from logs
-  defp sanitize_payload(payload) do
-    case payload do
-      %{"Password" => _} = p ->
-        Map.put(p, "Password", "[REDACTED]")
+  - `shortcode` - The M-Pesa shortcode
 
-      other ->
-        other
+  ## Returns
+
+  - `{:ok, clinic_id}` - If the mapping was successful
+  - `{:error, :shortcode_not_found}` - If the shortcode was not found
+  """
+  def map_shortcode_to_clinic_id(shortcode) do
+    # This would typically query the database to find the clinic with this shortcode
+    # For now, we'll use a simple implementation that delegates to the Config module
+    alias Clinicpro.MPesa.Config
+
+    case Config.find_by_shortcode(shortcode) do
+      nil ->
+        Logger.error("No clinic found for shortcode: #{shortcode}")
+        {:error, :shortcode_not_found}
+
+      config ->
+        {:ok, config.clinic_id}
+    end
+  end
+
+  @doc """
+  Maps an invoice ID to a patient ID.
+
+  ## Parameters
+
+  - `invoice_id` - The invoice ID
+  - `clinic_id` - The clinic ID
+
+  ## Returns
+
+  - `{:ok, patient_id}` - If the mapping was successful
+  - `{:error, :invoice_not_found}` - If the invoice was not found
+  """
+  def map_invoice_to_patient_id(invoice_id, clinic_id) do
+    # This would typically query the database to find the patient associated with this invoice
+    # For now, we'll use a simple implementation that assumes the Invoice module exists
+    alias Clinicpro.Invoice
+
+    case Invoice.get_by_id(invoice_id, clinic_id) do
+      nil ->
+        Logger.error("No invoice found with ID #{invoice_id} for clinic #{clinic_id}")
+        {:error, :invoice_not_found}
+
+      invoice ->
+        {:ok, invoice.patient_id}
     end
   end
 
-  # Remove sensitive data from logs
-  defp sanitize_response(response) do
-    # Implement based on response structure
-    response
+  @doc """
+  Parses a reference string to extract the invoice ID.
+
+  ## Parameters
+
+  - `reference` - The reference string
+
+  ## Returns
+
+  - `{:ok, invoice_id}` - If the parsing was successful
+  - `{:error, :invalid_reference}` - If the reference was invalid
+  """
+  def parse_reference_for_invoice_id(reference) do
+    # This would parse the reference string to extract the invoice ID
+    # The format depends on how references are generated in your system
+    # For now, we'll assume the reference is the invoice ID
+    {:ok, reference}
   end
 end
diff --git a/lib/clinicpro/mpesa/invoice_integration.ex b/lib/clinicpro/mpesa/invoice_integration.ex
new file mode 100644
index 0000000..9c829f3
--- /dev/null
+++ b/lib/clinicpro/mpesa/invoice_integration.ex
@@ -0,0 +1,150 @@
+defmodule Clinicpro.MPesa.InvoiceIntegration do
+  @moduledoc """
+  Integration between M-Pesa and the Invoice system.
+
+  This module provides functions to connect M-Pesa transactions with invoices,
+  update invoice statuses based on payment status, and trigger STK Push payments
+  from the invoice UI.
+  """
+
+  alias Clinicpro.MPesa
+  alias Clinicpro.MPesa.Transaction
+  alias Clinicpro.Invoices
+
+  @doc """
+  Updates an invoice status based on a successful M-Pesa transaction.
+
+  ## Parameters
+
+  * `transaction` - The M-Pesa transaction
+
+  ## Returns
+
+  * `{:ok, invoice}` - If the invoice was updated successfully
+  * `{:error, reason}` - If the invoice update failed
+  """
+  def update_invoice_status(%Transaction{} = transaction) do
+    with {:ok, invoice} <- Invoices.get_invoice(transaction.invoice_id, transaction.clinic_id),
+         {:ok, updated_invoice} <- do_update_invoice_status(invoice, transaction) do
+      {:ok, updated_invoice}
+    else
+      {:error, reason} -> {:error, reason}
+    end
+  end
+
+  @doc """
+  Initiates an STK Push payment for an invoice.
+
+  ## Parameters
+
+  * `invoice_id` - The ID of the invoice to pay
+  * `clinic_id` - The ID of the clinic
+  * `phone_number` - The phone number to send the STK Push to
+  * `amount` - The amount to pay (optional, defaults to invoice amount)
+
+  ## Returns
+
+  * `{:ok, transaction}` - If the STK Push was initiated successfully
+  * `{:error, reason}` - If the STK Push initiation failed
+  """
+  def initiate_stk_push_for_invoice(invoice_id, clinic_id, phone_number, amount \\ nil) do
+    with {:ok, invoice} <- Invoices.get_invoice(invoice_id, clinic_id),
+         amount = amount || invoice.amount,
+         patient_id = invoice.patient_id,
+         {:ok, transaction} <- MPesa.initiate_stk_push(clinic_id, invoice_id, patient_id, phone_number, amount) do
+      {:ok, transaction}
+    else
+      {:error, reason} -> {:error, reason}
+    end
+  end
+
+  @doc """
+  Gets all transactions for an invoice.
+
+  ## Parameters
+
+  * `invoice_id` - The ID of the invoice
+  * `clinic_id` - The ID of the clinic
+
+  ## Returns
+
+  * List of transactions
+  """
+  def get_invoice_transactions(invoice_id, clinic_id) do
+    Transaction.list_by_invoice(invoice_id, clinic_id)
+  end
+
+  @doc """
+  Gets the payment status of an invoice based on its transactions.
+
+  ## Parameters
+
+  * `invoice_id` - The ID of the invoice
+  * `clinic_id` - The ID of the clinic
+
+  ## Returns
+
+  * `:paid` - If the invoice is fully paid
+  * `:partially_paid` - If the invoice is partially paid
+  * `:pending` - If there are pending transactions
+  * `:unpaid` - If there are no transactions or all have failed
+  """
+  def get_invoice_payment_status(invoice_id, clinic_id) do
+    with {:ok, invoice} <- Invoices.get_invoice(invoice_id, clinic_id) do
+      transactions = get_invoice_transactions(invoice_id, clinic_id)
+
+      cond do
+        Enum.any?(transactions, &(&1.status == "pending")) ->
+          :pending
+
+        total_paid_amount(transactions) >= invoice.amount ->
+          :paid
+
+        total_paid_amount(transactions) > 0 ->
+          :partially_paid
+
+        true ->
+          :unpaid
+      end
+    else
+      {:error, _} -> :error
+    end
+  end
+
+  # Private functions
+
+  defp do_update_invoice_status(invoice, %{status: "completed"} = transaction) do
+    # Calculate the total amount paid for this invoice
+    total_paid = total_paid_amount(get_invoice_transactions(invoice.id, invoice.clinic_id))
+
+    # Determine the new status based on the amount paid
+    new_status = if total_paid >= invoice.amount, do: "paid", else: "partially_paid"
+
+    # Update the invoice status
+    Invoices.update_invoice(invoice, %{
+      payment_status: new_status,
+      last_payment_date: transaction.updated_at,
+      amount_paid: total_paid
+    })
+  end
+
+  defp do_update_invoice_status(invoice, %{status: "failed"}) do
+    # Don't change the invoice status for failed transactions
+    {:ok, invoice}
+  end
+
+  defp do_update_invoice_status(invoice, %{status: "pending"}) do
+    # Update to pending only if the invoice is not already paid or partially paid
+    if invoice.payment_status not in ["paid", "partially_paid"] do
+      Invoices.update_invoice(invoice, %{payment_status: "pending"})
+    else
+      {:ok, invoice}
+    end
+  end
+
+  defp total_paid_amount(transactions) do
+    transactions
+    |> Enum.filter(&(&1.status == "completed"))
+    |> Enum.reduce(0, fn tx, acc -> acc + tx.amount end)
+  end
+end
diff --git a/lib/clinicpro/mpesa/mock_stk_push.ex b/lib/clinicpro/mpesa/mock_stk_push.ex
new file mode 100644
index 0000000..5628199
--- /dev/null
+++ b/lib/clinicpro/mpesa/mock_stk_push.ex
@@ -0,0 +1,175 @@
+defmodule Clinicpro.MPesa.MockSTKPush do
+  @moduledoc """
+  Mock implementation of the M-Pesa STK Push for testing purposes.
+  This module implements the STKPushBehaviour interface but returns
+  predictable responses instead of making actual API calls.
+  """
+
+  require Logger
+  alias Clinicpro.MPesa.Config
+
+  @behaviour Clinicpro.MPesa.STKPushBehaviour
+
+  @doc """
+  Mock implementation of send_stk_push that returns a successful response
+  without making an actual API call.
+
+  ## Parameters
+
+  - `phone_number` - The phone number to send the STK Push to
+  - `amount` - The amount to charge
+  - `reference` - The reference for the transaction (usually invoice number)
+  - `description` - Description of the transaction
+  - `clinic_id` - The ID of the clinic initiating the payment
+
+  ## Returns
+
+  - `{:ok, response}` - A mock successful response
+  """
+  @impl Clinicpro.MPesa.STKPushBehaviour
+  def send_stk_push(phone_number, amount, _reference, _description, clinic_id) do
+    # Log the mock request
+    Logger.info("MOCK: Sending STK Push for clinic #{clinic_id} to #{phone_number} for amount #{amount}")
+
+    # Get the clinic's config to ensure it exists
+    _config = Config.get_config(clinic_id)
+
+    # Generate mock IDs
+    checkout_request_id = "ws_co_#{:rand.uniform(999999999)}"
+    merchant_request_id = "ws_mc_#{:rand.uniform(999999999)}"
+
+    # Return a successful mock response
+    {:ok, %{
+      checkout_request_id: checkout_request_id,
+      merchant_request_id: merchant_request_id
+    }}
+  end
+
+  @doc """
+  Mock implementation of query_stk_push_status that returns a successful response
+  without making an actual API call.
+
+  ## Parameters
+
+  - `checkout_request_id` - The checkout request ID to check
+  - `merchant_request_id` - The merchant request ID
+  - `clinic_id` - The ID of the clinic that initiated the payment
+
+  ## Returns
+
+  - `{:ok, response}` - A mock successful response
+  """
+  @impl Clinicpro.MPesa.STKPushBehaviour
+  def query_stk_push_status(checkout_request_id, _merchant_request_id, clinic_id) do
+    # Log the mock request
+    Logger.info("MOCK: Querying STK Push status for clinic #{clinic_id}, checkout request ID: #{checkout_request_id}")
+
+    # Get the clinic's config to ensure it exists
+    _config = Config.get_config(clinic_id)
+
+    # Return a successful mock response
+    {:ok, %{
+      result_code: "0",
+      result_desc: "The service request is processed successfully."
+    }}
+  end
+
+  @doc """
+  Simulates an STK Push callback for testing purposes.
+
+  ## Parameters
+
+  - `checkout_request_id` - The checkout request ID to simulate a callback for
+  - `merchant_request_id` - The merchant request ID
+  - `phone_number` - The phone number that made the payment
+  - `amount` - The amount paid
+  - `transaction_id` - Optional transaction ID (generated if not provided)
+  - `success` - Whether the transaction was successful
+
+  ## Returns
+
+  - `{:ok, callback_data}` - The simulated callback data
+  """
+  def simulate_callback(checkout_request_id, merchant_request_id, phone_number, amount, transaction_id \\ nil, success \\ true) do
+    # Generate a transaction ID if not provided
+    transaction_id = transaction_id || "WS#{:rand.uniform(999999999)}"
+
+    # Generate a timestamp
+    timestamp = DateTime.utc_now()
+    |> DateTime.to_naive()
+    |> NaiveDateTime.to_string()
+    |> String.replace(~r/[^\d]/, "")
+    |> String.slice(0, 14)
+
+    # Build the callback data
+    result_code = if success, do: "0", else: "1"
+    result_desc = if success, do: "The service request is processed successfully.", else: "Failed"
+
+    callback_data = %{
+      "Body" => %{
+        "stkCallback" => %{
+          "MerchantRequestID" => merchant_request_id,
+          "CheckoutRequestID" => checkout_request_id,
+          "ResultCode" => result_code,
+          "ResultDesc" => result_desc,
+          "CallbackMetadata" => %{
+            "Item" => [
+              %{"Name" => "Amount", "Value" => amount},
+              %{"Name" => "MpesaReceiptNumber", "Value" => transaction_id},
+              %{"Name" => "TransactionDate", "Value" => timestamp},
+              %{"Name" => "PhoneNumber", "Value" => phone_number}
+            ]
+          }
+        }
+      }
+    }
+
+    {:ok, callback_data}
+  end
+
+  @doc """
+  Simulates a C2B callback for testing purposes.
+
+  ## Parameters
+
+  - `shortcode` - The business shortcode
+  - `phone_number` - The phone number that made the payment
+  - `amount` - The amount paid
+  - `reference` - The bill reference number
+  - `transaction_id` - Optional transaction ID (generated if not provided)
+
+  ## Returns
+
+  - `{:ok, callback_data}` - The simulated callback data
+  """
+  def simulate_c2b_callback(shortcode, phone_number, amount, reference, transaction_id \\ nil) do
+    # Generate a transaction ID if not provided
+    transaction_id = transaction_id || "WS#{:rand.uniform(999999999)}"
+
+    # Generate a timestamp in the format YYYYMMDDHHmmss
+    timestamp = DateTime.utc_now()
+    |> DateTime.to_naive()
+    |> NaiveDateTime.to_string()
+    |> String.replace(~r/[^\d]/, "")
+    |> String.slice(0, 14)
+
+    # Build the callback data
+    callback_data = %{
+      "TransactionType" => "Pay Bill",
+      "TransID" => transaction_id,
+      "TransTime" => timestamp,
+      "TransAmount" => amount,
+      "BusinessShortCode" => shortcode,
+      "BillRefNumber" => reference,
+      "InvoiceNumber" => "",
+      "OrgAccountBalance" => "",
+      "ThirdPartyTransID" => "",
+      "MSISDN" => phone_number,
+      "FirstName" => "John",
+      "MiddleName" => "",
+      "LastName" => "Doe"
+    }
+
+    {:ok, callback_data}
+  end
+end
diff --git a/lib/clinicpro/mpesa/mpesa.ex b/lib/clinicpro/mpesa/mpesa.ex
index 87aab68..de8b517 100644
--- a/lib/clinicpro/mpesa/mpesa.ex
+++ b/lib/clinicpro/mpesa/mpesa.ex
@@ -1,229 +1,311 @@
 defmodule Clinicpro.MPesa do
   @moduledoc """
-  Multi-tenant M-Pesa integration service for ClinicPro.
+  Main M-Pesa module that provides a unified interface for M-Pesa operations.
 
-  This module serves as the main entry point for all M-Pesa operations,
-  supporting multiple clinics with their own payment configurations.
-
-  ## Examples
-
-      # Initiate STK Push payment
-      Clinicpro.MPesa.initiate_stk_push(clinic_id, phone, amount, reference, description)
-
-      # Register C2B URLs for a clinic
-      Clinicpro.MPesa.register_c2b_urls(clinic_id)
+  This module coordinates all M-Pesa functionality with multi-tenant support,
+  ensuring proper isolation between clinics. It serves as the primary entry point
+  for M-Pesa operations in the ClinicPro application.
   """
 
-  require Logger
-  alias Clinicpro.MPesa.{Config, Auth, STKPush, C2B, Transaction, Callback}
+  alias Clinicpro.MPesa.{
+    STKPush,
+    Config,
+    Transaction,
+    Callback
+  }
 
   @doc """
-  Initiates an STK push request for a specific clinic.
+  Initiates an STK Push payment request.
 
   ## Parameters
 
-  - clinic_id: The ID of the clinic initiating the payment
-  - phone: Customer's phone number
-  - amount: Amount to be paid
-  - reference: Your reference for this transaction
-  - description: Transaction description
+  - `phone_number` - The phone number to send the STK Push to
+  - `amount` - The amount to charge
+  - `reference` - The reference for the transaction (usually invoice number)
+  - `description` - Description of the transaction
+  - `clinic_id` - The ID of the clinic initiating the payment
 
   ## Returns
 
-  - {:ok, transaction} on success
-  - {:error, reason} on failure
+  - `{:ok, %{checkout_request_id: id, transaction: transaction}}` - If the request was successful
+  - `{:error, reason}` - If the request failed
   """
-  def initiate_stk_push(clinic_id, phone, amount, reference, description) do
-    # Prepare transaction data
-    transaction_data = %{
-      clinic_id: clinic_id,
-      phone: phone,
-      amount: amount,
-      reference: reference,
-      description: description,
-      type: "stk_push"
-    }
-    
-    # First validate the transaction data
-    with {:ok, _valid_changeset} <- Transaction.validate_transaction_data(transaction_data),
-         {:ok, config} <- Config.get_for_clinic(clinic_id),
-         {:ok, transaction} <- Transaction.create_pending(transaction_data),
-         {:ok, response} <- STKPush.request(config, phone, amount, reference, description) do
-
-      # Update transaction with M-Pesa request details
-      Transaction.update(transaction, %{
-        checkout_request_id: response["CheckoutRequestID"],
-        merchant_request_id: response["MerchantRequestID"],
-        raw_request: response
+  def initiate_stk_push(phone_number, amount, reference, description, clinic_id) do
+    # Create a pending transaction
+    with {:ok, transaction} <- create_pending_transaction(phone_number, amount, reference, description, clinic_id),
+         # Get the STK Push module (allows for mocking in tests)
+         stk_push_module <- get_stk_push_module(),
+         # Send the STK Push request
+         {:ok, response} <- stk_push_module.send_stk_push(phone_number, amount, reference, description, clinic_id) do
+
+      # Update the transaction with the checkout request ID and merchant request ID
+      {:ok, updated_transaction} = Transaction.update(transaction, %{
+        checkout_request_id: response.checkout_request_id,
+        merchant_request_id: response.merchant_request_id
       })
-    else
-      {:error, :config_not_found} ->
-        Logger.error("M-Pesa configuration not found for clinic #{clinic_id}")
-        {:error, :mpesa_config_not_found}
 
-      {:error, %Ecto.Changeset{} = changeset} ->
-        Logger.error("Invalid transaction data: #{inspect(changeset.errors)}")
-        {:error, :invalid_transaction_data, changeset}
-
-      {:error, reason} ->
-        Logger.error("M-Pesa STK push failed: #{inspect(reason)}")
-        {:error, reason}
+      # Return the checkout request ID and transaction
+      {:ok, %{
+        checkout_request_id: response.checkout_request_id,
+        transaction: updated_transaction
+      }}
     end
   end
 
   @doc """
-  Registers C2B validation and confirmation URLs for a clinic.
-  Must be called once after setting up a clinic's M-Pesa credentials.
+  Checks the status of an STK Push payment.
 
   ## Parameters
 
-  - clinic_id: The ID of the clinic to register URLs for
+  - `checkout_request_id` - The checkout request ID to check
+  - `clinic_id` - The ID of the clinic that initiated the payment
 
   ## Returns
 
-  - {:ok, response} on success
-  - {:error, reason} on failure
+  - `{:ok, transaction}` - If the transaction was found
+  - `{:error, reason}` - If the transaction was not found or the status check failed
   """
-  def register_c2b_urls(clinic_id) do
-    with {:ok, config} <- Config.get_for_clinic(clinic_id) do
-      C2B.register_urls(config)
-    else
-      {:error, :config_not_found} ->
-        Logger.error("M-Pesa configuration not found for clinic #{clinic_id}")
-        {:error, :mpesa_config_not_found}
-
-      {:error, reason} ->
-        Logger.error("Failed to register C2B URLs: #{inspect(reason)}")
-        {:error, reason}
+  def check_stk_push_status(checkout_request_id, clinic_id) do
+    # Get the transaction
+    case Transaction.get_by_checkout_request_id(checkout_request_id, clinic_id) do
+      nil ->
+        {:error, :transaction_not_found}
+
+      transaction ->
+        # If the transaction is still pending, check with M-Pesa
+        if transaction.status == "pending" do
+          # Get the STK Push module
+          stk_push_module = get_stk_push_module()
+
+          # Check the status with M-Pesa
+          case stk_push_module.query_stk_push_status(checkout_request_id, transaction.merchant_request_id, clinic_id) do
+            {:ok, status_response} ->
+              # Update the transaction based on the status response
+              update_transaction_from_status(transaction, status_response)
+
+            {:error, _reason} ->
+              # If the status check fails, just return the transaction as is
+              {:ok, transaction}
+          end
+        else
+          # If the transaction is not pending, just return it
+          {:ok, transaction}
+        end
     end
   end
 
   @doc """
-  Process a C2B callback from M-Pesa.
+  Processes an STK Push callback from M-Pesa.
+
+  ## Parameters
+
+  - `params` - The callback parameters from M-Pesa
+
+  ## Returns
 
-  This function is called by the callback controller when
-  M-Pesa sends a payment notification.
+  - `{:ok, transaction}` - If the callback was processed successfully
+  - `{:error, reason}` - If the callback processing failed
+  """
+  def process_stk_callback(params) do
+    Callback.process_stk_callback(params)
+  end
+
+  @doc """
+  Processes a C2B confirmation callback from M-Pesa.
 
   ## Parameters
 
-  - payload: The callback payload from M-Pesa
+  - `params` - The callback parameters from M-Pesa
 
   ## Returns
 
-  - {:ok, transaction} on success
-  - {:error, reason} on failure
+  - `{:ok, transaction}` - If the callback was processed successfully
+  - `{:error, reason}` - If the callback processing failed
   """
-  def process_c2b_callback(payload) do
-    Callback.process_c2b(payload)
+  def process_c2b_confirmation(params) do
+    Callback.process_c2b_confirmation(params)
   end
 
   @doc """
-  Process an STK Push callback from M-Pesa.
+  Gets a transaction by its checkout request ID.
+
+  ## Parameters
+
+  - `checkout_request_id` - The checkout request ID to search for
+  - `clinic_id` - The ID of the clinic that initiated the payment
+
+  ## Returns
+
+  - `transaction` - If the transaction was found
+  - `nil` - If the transaction was not found
+  """
+  def get_transaction_by_checkout_request_id(checkout_request_id, clinic_id) do
+    Transaction.get_by_checkout_request_id(checkout_request_id, clinic_id)
+  end
 
-  This function is called by the callback controller when
-  M-Pesa sends an STK push result.
+  @doc """
+  Gets a transaction by its merchant request ID.
 
   ## Parameters
 
-  - payload: The callback payload from M-Pesa
+  - `merchant_request_id` - The merchant request ID to search for
+  - `clinic_id` - The ID of the clinic that initiated the payment
 
   ## Returns
 
-  - {:ok, transaction} on success
-  - {:error, reason} on failure
+  - `transaction` - If the transaction was found
+  - `nil` - If the transaction was not found
   """
-  def process_stk_callback(payload) do
-    Callback.process_stk(payload)
+  def get_transaction_by_merchant_request_id(merchant_request_id, clinic_id) do
+    Transaction.get_by_merchant_request_id(merchant_request_id, clinic_id)
   end
 
   @doc """
-  Query the status of an STK push transaction.
+  Lists all transactions for a specific clinic.
 
   ## Parameters
 
-  - checkout_request_id: The CheckoutRequestID returned by the STK push request
-  - clinic_id: The ID of the clinic that initiated the payment
+  - `clinic_id` - The ID of the clinic to list transactions for
 
   ## Returns
 
-  - {:ok, response} on success
-  - {:error, reason} on failure
+  - List of transactions
   """
-  def query_stk_status(checkout_request_id, clinic_id) do
-    with {:ok, config} <- Config.get_for_clinic(clinic_id),
-         {:ok, transaction} <- Transaction.find_by_checkout_request_id(checkout_request_id),
-         {:ok, response} <- STKPush.query_status(config, checkout_request_id) do
-
-      # Update transaction with status response
-      Transaction.update(transaction, %{
-        result_code: response["ResultCode"],
-        result_desc: response["ResultDesc"],
-        raw_response: Map.merge(transaction.raw_response || %{}, %{"query_response" => response})
-      })
-    end
+  def list_transactions_by_clinic(clinic_id) do
+    Transaction.list_by_clinic_id(clinic_id)
   end
 
   @doc """
-  List transactions for a specific clinic with pagination.
+  Lists all transactions for a specific invoice.
 
   ## Parameters
 
-  - clinic_id: The ID of the clinic to list transactions for
-  - page: Page number (default: 1)
-  - per_page: Number of transactions per page (default: 20)
+  - `invoice_id` - The ID of the invoice to list transactions for
 
   ## Returns
 
   - List of transactions
   """
-  def list_transactions(clinic_id, page \\ 1, per_page \\ 20) do
-    Transaction.list_by_clinic(clinic_id, page, per_page)
+  def list_transactions_by_invoice(invoice_id) do
+    Transaction.list_by_invoice_id(invoice_id)
   end
 
   @doc """
-  Get a transaction by its reference.
+  Lists all transactions for a specific patient within a clinic.
 
   ## Parameters
 
-  - reference: The transaction reference
+  - `patient_id` - The ID of the patient to list transactions for
+  - `clinic_id` - The ID of the clinic (for multi-tenant support)
 
   ## Returns
 
-  - {:ok, transaction} if found
-  - {:error, :not_found} if not found
+  - List of transactions
   """
-  def get_transaction_by_reference(reference) do
-    case Transaction.find_by_reference(reference) do
-      nil -> {:error, :not_found}
-      transaction -> {:ok, transaction}
-    end
+  def list_transactions_by_patient(patient_id, clinic_id) do
+    Transaction.list_by_patient_id(patient_id, clinic_id)
+  end
+
+  @doc """
+  Gets the M-Pesa configuration for a specific clinic.
+
+  ## Parameters
+
+  - `clinic_id` - The ID of the clinic to get the configuration for
+
+  ## Returns
+
+  - `config` - The configuration for the clinic
+  """
+  def get_config(clinic_id) do
+    Config.get_config(clinic_id)
   end
 
   @doc """
-  Creates or updates M-Pesa configuration for a clinic.
+  Updates the M-Pesa configuration for a specific clinic.
 
   ## Parameters
 
-  - attrs: Map containing configuration attributes including:
-    - consumer_key: The M-Pesa API consumer key
-    - consumer_secret: The M-Pesa API consumer secret
-    - passkey: The M-Pesa passkey
-    - shortcode: The M-Pesa shortcode
-    - environment: "sandbox" or "production"
-    - clinic_id: The ID of the clinic this configuration belongs to
+  - `clinic_id` - The ID of the clinic to update the configuration for
+  - `attrs` - Map of attributes to update
 
   ## Returns
 
-  - {:ok, config} on success
-  - {:error, changeset} on validation failure
+  - `{:ok, config}` - If the configuration was updated successfully
+  - `{:error, changeset}` - If the configuration update failed
   """
-  def create_config(attrs) do
-    clinic_id = attrs["clinic_id"] || attrs[:clinic_id]
-    
-    if is_nil(clinic_id) do
-      {:error, :missing_clinic_id}
+  def update_config(clinic_id, attrs) do
+    case Config.get_by_clinic_id(clinic_id) do
+      nil ->
+        # If no configuration exists, create a new one
+        Config.create(Map.put(attrs, :clinic_id, clinic_id))
+
+      config ->
+        # If a configuration exists, update it
+        Config.update(config, attrs)
+    end
+  end
+
+  # Private functions
+
+  defp create_pending_transaction(phone_number, amount, reference, description, clinic_id) do
+    # Extract invoice_id and patient_id from reference
+    # This assumes that reference is the invoice ID
+    invoice_id = reference
+    patient_id = get_patient_id_from_invoice(invoice_id, clinic_id)
+
+    # Create the transaction
+    Transaction.create(%{
+      clinic_id: clinic_id,
+      invoice_id: invoice_id,
+      patient_id: patient_id,
+      amount: amount,
+      phone_number: phone_number,
+      status: "pending",
+      reference: reference,
+      merchant_request_id: "",
+      checkout_request_id: "",
+      result_code: "",
+      result_description: description
+    })
+  end
+
+  defp update_transaction_from_status(transaction, status_response) do
+    # Extract the result code and description
+    result_code = status_response.result_code
+    result_description = status_response.result_desc
+
+    # Determine the new status
+    new_status = if result_code == "0", do: "completed", else: "failed"
+
+    # Update the transaction
+    attrs = %{
+      status: new_status,
+      result_code: result_code,
+      result_description: result_description
+    }
+
+    # Add transaction_id if available
+    attrs = if Map.has_key?(status_response, :transaction_id) do
+      Map.put(attrs, :transaction_id, status_response.transaction_id)
     else
-      Config.upsert_config(clinic_id, attrs)
+      attrs
+    end
+
+    # Update the transaction
+    Transaction.update(transaction, attrs)
+  end
+
+  defp get_stk_push_module do
+    Application.get_env(:clinicpro, :stk_push_module, STKPush)
+  end
+
+  defp get_patient_id_from_invoice(invoice_id, clinic_id) do
+    # Query the database to find the patient ID associated with this invoice
+    # This is a simplified example - you would need to implement this based on your schema
+    case Clinicpro.Invoices.get_invoice(invoice_id, clinic_id) do
+      nil -> nil
+      invoice -> invoice.patient_id
     end
   end
 end
diff --git a/lib/clinicpro/mpesa/stk_push.ex b/lib/clinicpro/mpesa/stk_push.ex
index cbb83d9..9733285 100644
--- a/lib/clinicpro/mpesa/stk_push.ex
+++ b/lib/clinicpro/mpesa/stk_push.ex
@@ -1,125 +1,99 @@
 defmodule Clinicpro.MPesa.STKPush do
   @moduledoc """
-  Handles STK Push requests to M-Pesa.
-
-  This module is responsible for:
-  1. Initiating STK Push requests
-  2. Querying STK Push transaction status
-  3. Handling request formatting and validation
+  Handles M-Pesa STK Push requests with multi-tenant support.
+  This module implements the STKPushBehaviour for production use.
   """
 
-  require Logger
-  alias Clinicpro.MPesa.{Auth, Helpers}
+  @behaviour Clinicpro.MPesa.STKPushBehaviour
 
-  @sandbox_url "https://sandbox.safaricom.co.ke/mpesa/stkpush/v1/processrequest"
-  @prod_url "https://api.safaricom.co.ke/mpesa/stkpush/v1/processrequest"
-  @sandbox_query_url "https://sandbox.safaricom.co.ke/mpesa/stkpushquery/v1/query"
-  @prod_query_url "https://api.safaricom.co.ke/mpesa/stkpushquery/v1/query"
+  alias Clinicpro.MPesa.Auth
+  alias Clinicpro.MPesa.Config
+  alias Clinicpro.MPesa.Helpers
 
   @doc """
-  Sends an STK Push request to M-Pesa.
+  Initiates an STK Push request to the M-Pesa API.
 
   ## Parameters
 
-  - config: M-Pesa configuration for the clinic
-  - phone: Customer's phone number
-  - amount: Amount to be paid
-  - reference: Your reference for this transaction
-  - description: Transaction description
+  - `phone_number` - The phone number to send the STK push to
+  - `amount` - The amount to charge
+  - `reference` - The reference number for the transaction
+  - `clinic_id` - The ID of the clinic (for multi-tenant support)
 
   ## Returns
 
-  - {:ok, response} on success
-  - {:error, reason} on failure
+  - `{:ok, response}` - If the request was successful
+  - `{:error, reason}` - If the request failed
   """
-  def request(config, phone, amount, reference, description) do
-    url = if config.environment == "production", do: @prod_url, else: @sandbox_url
-
-    with {:ok, normalized_phone} <- Helpers.validate_phone_number(phone),
-         {:ok, token} <- Auth.get_access_token(config),
-         {:ok, timestamp} <- Helpers.get_timestamp(),
-         password = generate_password(config, timestamp),
-         payload =
-           build_payload(
-             config,
-             normalized_phone,
-             amount,
-             reference,
-             description,
-             timestamp,
-             password
-           ),
-         {:ok, response} <- Helpers.make_request(url, payload, token) do
-      {:ok, response}
-    else
-      {:error, :invalid_phone_number} ->
-        Logger.error("Invalid phone number format: #{phone}")
-        {:error, :invalid_phone_number}
+  @impl true
+  def request(phone_number, amount, reference, clinic_id) do
+    # Get clinic-specific configuration
+    config = Config.get_config(clinic_id)
 
-      {:error, reason} ->
-        Logger.error("STK Push request failed: #{inspect(reason)}")
-        {:error, reason}
-    end
-  end
+    # Format the phone number if needed
+    phone_number = Helpers.format_phone_number(phone_number)
 
-  @doc """
-  Queries the status of an STK Push transaction.
-
-  ## Parameters
+    # Format the amount to integer (M-Pesa requires amount as integer)
+    amount = Helpers.format_amount(amount)
 
-  - config: M-Pesa configuration for the clinic
-  - checkout_request_id: The CheckoutRequestID returned by the STK push request
+    # Get the timestamp for the request
+    timestamp = Helpers.get_timestamp()
 
-  ## Returns
+    # Generate the password
+    password = Helpers.generate_password(config.shortcode, config.passkey, timestamp)
 
-  - {:ok, response} on success
-  - {:error, reason} on failure
-  """
-  def query_status(config, checkout_request_id) do
-    url = if config.environment == "production", do: @prod_query_url, else: @sandbox_query_url
-
-    with {:ok, token} <- Auth.get_access_token(config),
-         {:ok, timestamp} <- Helpers.get_timestamp(),
-         password = generate_password(config, timestamp),
-         payload = build_query_payload(config, checkout_request_id, timestamp, password),
-         {:ok, response} <- Helpers.make_request(url, payload, token) do
+    # Get the access token
+    with {:ok, token} <- Auth.get_access_token(clinic_id),
+         {:ok, response} <- do_request(token, phone_number, amount, reference, timestamp, password, config) do
       {:ok, response}
     else
-      {:error, reason} ->
-        Logger.error("STK Push status query failed: #{inspect(reason)}")
-        {:error, reason}
+      {:error, reason} -> {:error, reason}
     end
   end
 
   # Private functions
 
-  defp generate_password(config, timestamp) do
-    data = "#{config.shortcode}#{config.passkey}#{timestamp}"
-    Base.encode64(data)
-  end
-
-  defp build_payload(config, phone, amount, reference, description, timestamp, password) do
-    %{
+  defp do_request(token, phone_number, amount, reference, timestamp, password, config) do
+    # Prepare the request body
+    body = %{
       "BusinessShortCode" => config.shortcode,
       "Password" => password,
       "Timestamp" => timestamp,
       "TransactionType" => "CustomerPayBillOnline",
       "Amount" => amount,
-      "PartyA" => phone,
+      "PartyA" => phone_number,
       "PartyB" => config.shortcode,
-      "PhoneNumber" => phone,
-      "CallBackURL" => config.stk_callback_url,
+      "PhoneNumber" => phone_number,
+      "CallBackURL" => "#{config.callback_url}/api/mpesa/callbacks/#{config.clinic_id}/stk_push",
       "AccountReference" => reference,
-      "TransactionDesc" => description
+      "TransactionDesc" => "Payment for #{reference}"
     }
-  end
 
-  defp build_query_payload(config, checkout_request_id, timestamp, password) do
-    %{
-      "BusinessShortCode" => config.shortcode,
-      "Password" => password,
-      "Timestamp" => timestamp,
-      "CheckoutRequestID" => checkout_request_id
-    }
+    # Prepare the headers
+    headers = [
+      {"Authorization", "Bearer #{token}"},
+      {"Content-Type", "application/json"}
+    ]
+
+    # Make the request
+    url = "#{config.base_url}/mpesa/stkpush/v1/processrequest"
+
+    case HTTPoison.post(url, Jason.encode!(body), headers) do
+      {:ok, %HTTPoison.Response{status_code: 200, body: response_body}} ->
+        case Jason.decode(response_body) do
+          {:ok, decoded} -> {:ok, decoded}
+          {:error, _} -> {:error, "Failed to decode response"}
+        end
+
+      {:ok, %HTTPoison.Response{body: response_body}} ->
+        case Jason.decode(response_body) do
+          {:ok, %{"errorMessage" => error}} -> {:error, error}
+          {:ok, decoded} -> {:error, "Unexpected response: #{inspect(decoded)}"}
+          {:error, _} -> {:error, "Failed to decode error response"}
+        end
+
+      {:error, %HTTPoison.Error{reason: reason}} ->
+        {:error, "HTTP request failed: #{inspect(reason)}"}
+    end
   end
 end
diff --git a/lib/clinicpro/mpesa/stk_push_behaviour.ex b/lib/clinicpro/mpesa/stk_push_behaviour.ex
new file mode 100644
index 0000000..ff8dc44
--- /dev/null
+++ b/lib/clinicpro/mpesa/stk_push_behaviour.ex
@@ -0,0 +1,51 @@
+defmodule Clinicpro.MPesa.STKPushBehaviour do
+  @moduledoc """
+  Defines the behaviour for M-Pesa STK Push implementations.
+  This allows for different implementations (e.g., live, mock) to be used
+  interchangeably, facilitating testing and development.
+  """
+
+  @doc """
+  Sends an STK Push request to the M-Pesa API.
+
+  ## Parameters
+
+  - `phone_number` - The phone number to send the STK Push to
+  - `amount` - The amount to charge
+  - `reference` - The reference for the transaction (usually invoice number)
+  - `description` - Description of the transaction
+  - `clinic_id` - The ID of the clinic initiating the payment
+
+  ## Returns
+
+  - `{:ok, response}` - If the request was successful
+  - `{:error, reason}` - If the request failed
+  """
+  @callback send_stk_push(
+    phone_number :: String.t(),
+    amount :: number(),
+    reference :: String.t(),
+    description :: String.t(),
+    clinic_id :: integer()
+  ) :: {:ok, map()} | {:error, any()}
+
+  @doc """
+  Queries the status of an STK Push request.
+
+  ## Parameters
+
+  - `checkout_request_id` - The checkout request ID to check
+  - `merchant_request_id` - The merchant request ID
+  - `clinic_id` - The ID of the clinic that initiated the payment
+
+  ## Returns
+
+  - `{:ok, response}` - If the request was successful
+  - `{:error, reason}` - If the request failed
+  """
+  @callback query_stk_push_status(
+    checkout_request_id :: String.t(),
+    merchant_request_id :: String.t(),
+    clinic_id :: integer()
+  ) :: {:ok, map()} | {:error, any()}
+end
diff --git a/lib/clinicpro/mpesa/transaction.ex b/lib/clinicpro/mpesa/transaction.ex
index ff109d8..c7a94cc 100644
--- a/lib/clinicpro/mpesa/transaction.ex
+++ b/lib/clinicpro/mpesa/transaction.ex
@@ -1,11 +1,9 @@
 defmodule Clinicpro.MPesa.Transaction do
   @moduledoc """
-  Tracks M-Pesa transactions for all clinics.
+  Module for handling M-Pesa transactions with multi-tenant support.
 
-  This module is responsible for:
-  1. Creating and updating transaction records
-  2. Querying transactions by various attributes
-  3. Managing transaction lifecycle
+  This module provides functions for creating, updating, and querying M-Pesa transactions,
+  ensuring proper isolation between clinics in a multi-tenant environment.
   """
 
   use Ecto.Schema
@@ -13,401 +11,488 @@ defmodule Clinicpro.MPesa.Transaction do
   import Ecto.Query
 
   alias Clinicpro.Repo
-  alias Clinicpro.AdminBypass.Doctor
+  alias __MODULE__
 
   schema "mpesa_transactions" do
+    field :clinic_id, :integer
+    field :invoice_id, :string
+    field :patient_id, :string
+    field :phone_number, :string
+    field :amount, :float
+    field :status, :string, default: "pending"
+    field :reference, :string
     field :checkout_request_id, :string
     field :merchant_request_id, :string
-    field :reference, :string
-    field :phone, :string
-    field :amount, :decimal
-    field :description, :string
-    field :status, :string, default: "pending"
+    field :transaction_id, :string
+    field :transaction_date, :naive_datetime
     field :result_code, :string
     field :result_desc, :string
-    field :transaction_date, :utc_datetime
-    field :mpesa_receipt_number, :string
-    # "stk_push" or "c2b"
-    field :type, :string
-    field :raw_request, :map
-    field :raw_response, :map
-
-    belongs_to :clinic, Doctor, foreign_key: :clinic_id
 
     timestamps()
   end
 
   @doc """
-  Validates transaction data without creating a transaction.
-  
+  Creates a new M-Pesa transaction.
+
+  ## Parameters
+
+  * `attrs` - Map of attributes for the transaction
+
+  ## Returns
+
+  * `{:ok, transaction}` - On success
+  * `{:error, changeset}` - On failure
+  """
+  def create(attrs) do
+    %Transaction{}
+    |> changeset(attrs)
+    |> Repo.insert()
+  end
+
+  @doc """
+  Updates an existing M-Pesa transaction.
+
+  ## Parameters
+
+  * `transaction` - The transaction to update
+  * `attrs` - Map of attributes to update
+
+  ## Returns
+
+  * `{:ok, transaction}` - On success
+  * `{:error, changeset}` - On failure
+  """
+  def update(transaction, attrs) do
+    transaction
+    |> changeset(attrs)
+    |> Repo.update()
+  end
+
+  @doc """
+  Updates a transaction with request IDs.
+
   ## Parameters
-  
-  - attrs: Transaction attributes to validate
-  
+
+  * `id` - The ID of the transaction to update
+  * `checkout_request_id` - The checkout request ID from M-Pesa
+  * `merchant_request_id` - The merchant request ID from M-Pesa
+
   ## Returns
-  
-  - {:ok, changeset} - Data is valid
-  - {:error, changeset} - Data is invalid with validation errors
+
+  * `{:ok, transaction}` - On success
+  * `{:error, changeset}` - On failure
   """
-  def validate_transaction_data(attrs) do
-    changeset = %__MODULE__{}
-                |> cast(attrs, [:clinic_id, :phone, :amount, :reference, :description, :type])
-                |> validate_required([:clinic_id, :phone, :amount, :reference, :type])
-                |> validate_inclusion(:type, ["stk_push", "c2b"])
-                |> validate_number(:amount, greater_than: 0)
+  def update_request_ids(id, checkout_request_id, merchant_request_id) do
+    transaction = get_by_id(id)
     
-    if changeset.valid? do
-      {:ok, changeset}
+    if transaction do
+      transaction
+      |> Ecto.Changeset.change(%{
+        checkout_request_id: checkout_request_id,
+        merchant_request_id: merchant_request_id
+      })
+      |> Repo.update()
     else
-      {:error, changeset}
+      {:error, :not_found}
     end
   end
 
   @doc """
-  Creates a pending transaction.
+  Updates a transaction's status.
 
   ## Parameters
 
-  - attrs: Transaction attributes
+  * `id` - The ID of the transaction to update
+  * `status` - The new status ("pending", "completed", "failed")
+  * `result_code` - The result code from M-Pesa
+  * `result_desc` - The result description from M-Pesa
+  * `transaction_id` - (Optional) The transaction ID from M-Pesa
+  * `transaction_date` - (Optional) The transaction date from M-Pesa
 
   ## Returns
 
-  - {:ok, transaction} on success
-  - {:error, changeset} on validation failure
+  * `{:ok, transaction}` - On success
+  * `{:error, changeset}` - On failure
   """
-  def create_pending(attrs) do
-    case validate_transaction_data(attrs) do
-      {:ok, changeset} ->
-        changeset
-        |> put_change(:status, "pending")
-        |> Repo.insert()
-      {:error, changeset} ->
-        {:error, changeset}
+  def update_status(id, status, result_code, result_desc, transaction_id \\ nil, transaction_date \\ nil) do
+    attrs = %{
+      status: status,
+      result_code: result_code,
+      result_desc: result_desc
+    }
+
+    # Add transaction_id if provided
+    attrs = if transaction_id, do: Map.put(attrs, :transaction_id, transaction_id), else: attrs
+
+    # Add transaction_date if provided
+    attrs = if transaction_date, do: Map.put(attrs, :transaction_date, transaction_date), else: attrs
+
+    transaction = get_by_id(id)
+    
+    if transaction do
+      transaction
+      |> Ecto.Changeset.change(attrs)
+      |> Repo.update()
+    else
+      {:error, :not_found}
     end
   end
 
   @doc """
-  Updates a transaction with new attributes.
+  Gets a transaction by ID.
 
   ## Parameters
 
-  - transaction: The transaction to update
-  - attrs: New attributes
+  * `id` - The ID of the transaction to get
 
   ## Returns
 
-  - {:ok, transaction} on success
-  - {:error, changeset} on validation failure
+  * `transaction` - If found
+  * `nil` - If not found
   """
-  def update(transaction, attrs) do
-    transaction
-    |> cast(attrs, [
-      :checkout_request_id,
-      :merchant_request_id,
-      :status,
-      :result_code,
-      :result_desc,
-      :transaction_date,
-      :mpesa_receipt_number,
-      :raw_request,
-      :raw_response
-    ])
-    |> Repo.update()
+  def get_by_id(id) do
+    Repo.get(Transaction, id)
   end
 
   @doc """
-  Finds a transaction by its checkout request ID.
+  Gets a transaction by checkout request ID.
 
   ## Parameters
 
-  - checkout_request_id: The checkout request ID to search for
+  * `checkout_request_id` - The checkout request ID to search for
+  * `clinic_id` - Optional clinic ID to ensure proper isolation
 
   ## Returns
 
-  - {:ok, transaction} if found
-  - {:error, :not_found} if not found
+  * `transaction` - If found
+  * `nil` - If not found
   """
-  def find_by_checkout_request_id(checkout_request_id) do
-    case Repo.get_by(__MODULE__, checkout_request_id: checkout_request_id) do
-      nil -> {:error, :not_found}
-      transaction -> {:ok, transaction}
-    end
+  def get_by_checkout_request_id(checkout_request_id, clinic_id \\ nil) do
+    query = from t in Transaction, where: t.checkout_request_id == ^checkout_request_id
+    query = if clinic_id, do: where(query, [t], t.clinic_id == ^clinic_id), else: query
+    Repo.one(query)
   end
 
   @doc """
-  Finds a transaction by its M-Pesa receipt number.
+  Gets a transaction by merchant request ID.
 
   ## Parameters
 
-  - receipt_number: The M-Pesa receipt number to search for
+  * `merchant_request_id` - The merchant request ID to search for
+  * `clinic_id` - Optional clinic ID to ensure proper isolation
 
   ## Returns
 
-  - {:ok, transaction} if found
-  - {:error, :not_found} if not found
+  * `transaction` - If found
+  * `nil` - If not found
   """
-  def find_by_receipt_number(receipt_number) do
-    case Repo.get_by(__MODULE__, mpesa_receipt_number: receipt_number) do
-      nil -> {:error, :not_found}
-      transaction -> {:ok, transaction}
-    end
+  def get_by_merchant_request_id(merchant_request_id, clinic_id \\ nil) do
+    query = from t in Transaction, where: t.merchant_request_id == ^merchant_request_id
+    query = if clinic_id, do: where(query, [t], t.clinic_id == ^clinic_id), else: query
+    Repo.one(query)
   end
 
   @doc """
-  Finds a transaction by its reference.
+  Gets a transaction by reference and clinic ID.
 
   ## Parameters
 
-  - reference: The transaction reference to search for
+  * `reference` - The reference to search for
+  * `clinic_id` - The clinic ID to search for
 
   ## Returns
 
-  - transaction if found
-  - nil if not found
+  * `transaction` - If found
+  * `nil` - If not found
   """
-  def find_by_reference(reference) do
-    Repo.get_by(__MODULE__, reference: reference)
+  def get_by_reference_and_clinic(reference, clinic_id) do
+    Repo.get_by(Transaction, reference: reference, clinic_id: clinic_id)
   end
 
   @doc """
-  Lists transactions for a specific clinic with pagination.
+  Lists all transactions for a specific clinic with optional limit.
 
   ## Parameters
 
-  - clinic_id: The ID of the clinic to list transactions for
-  - page: Page number (default: 1)
-  - per_page: Number of transactions per page (default: 20)
-  - filters: Map of filters to apply (e.g., %{status: "completed", type: "stk_push"})
+  * `clinic_id` - The ID of the clinic to list transactions for
+  * `opts` - Options map with optional :limit key
 
   ## Returns
 
-  - List of transactions
+  * List of transactions
   """
-  def list_for_clinic(clinic_id, page \\ 1, per_page \\ 20, filters \\ %{}) do
-    base_query =
-      from(t in __MODULE__,
-        where: t.clinic_id == ^clinic_id
-      )
-
-    # Apply filters
-    filtered_query = apply_filters(base_query, filters)
-
-    # Apply pagination and ordering
-    from(t in filtered_query,
-      order_by: [desc: t.inserted_at],
-      limit: ^per_page,
-      offset: ^((page - 1) * per_page)
-    )
-    |> Repo.all()
+  def list_by_clinic(clinic_id, opts \\ %{}) do
+    limit = Map.get(opts, :limit)
+    
+    query = Transaction
+    |> where(clinic_id: ^clinic_id)
+    |> order_by(desc: :inserted_at)
+    
+    query = if limit, do: limit(query, ^limit), else: query
+    
+    Repo.all(query)
   end
 
   @doc """
-  Counts transactions for a specific clinic.
+  Lists all transactions for a specific invoice.
 
   ## Parameters
 
-  - clinic_id: The ID of the clinic to count transactions for
-  - filters: Map of filters to apply (e.g., %{status: "completed", type: "stk_push"})
+  * `invoice_id` - The ID of the invoice to list transactions for
+  * `clinic_id` - (Optional) The ID of the clinic to filter by
 
   ## Returns
 
-  - Count of transactions
+  * List of transactions
   """
-  def count_for_clinic(clinic_id, filters \\ %{}) do
-    base_query =
-      from(t in __MODULE__,
-        where: t.clinic_id == ^clinic_id
-      )
-
-    # Apply filters
-    filtered_query = apply_filters(base_query, filters)
-
-    from(t in filtered_query,
-      select: count(t.id)
-    )
-    |> Repo.one()
+  def list_by_invoice(invoice_id, clinic_id \\ nil) do
+    query = Transaction
+    |> where(invoice_id: ^invoice_id)
+    |> order_by(desc: :inserted_at)
+
+    query = if clinic_id do
+      query |> where(clinic_id: ^clinic_id)
+    else
+      query
+    end
+
+    Repo.all(query)
   end
 
   @doc """
-  Lists recent transactions for a specific clinic.
+  Lists all transactions for a specific patient within a clinic.
 
   ## Parameters
 
-  - clinic_id: The ID of the clinic to list transactions for
-  - limit: Maximum number of transactions to return (default: 10)
+  * `patient_id` - The ID of the patient to list transactions for
+  * `clinic_id` - The ID of the clinic to filter by
 
   ## Returns
 
-  - List of recent transactions
+  * List of transactions
   """
-  def list_recent_for_clinic(clinic_id, limit \\ 10) do
-    from(t in __MODULE__,
-      where: t.clinic_id == ^clinic_id,
-      order_by: [desc: t.inserted_at],
-      limit: ^limit
-    )
+  def list_by_patient(patient_id, clinic_id) do
+    Transaction
+    |> where(patient_id: ^patient_id)
+    |> where(clinic_id: ^clinic_id)
+    |> order_by(desc: :inserted_at)
     |> Repo.all()
   end
 
   @doc """
-  Lists transactions by status for a specific clinic.
+  Lists all transactions with a specific status within a clinic.
 
   ## Parameters
 
-  - clinic_id: The ID of the clinic to list transactions for
-  - status: Status to filter by (e.g., "pending", "completed", "failed")
-  - page: Page number (default: 1)
-  - per_page: Number of transactions per page (default: 20)
+  * `status` - The status to filter by ("pending", "completed", "failed")
+  * `clinic_id` - The ID of the clinic to filter by
 
   ## Returns
 
-  - List of transactions with the specified status
+  * List of transactions
   """
-  def list_by_status(clinic_id, status, page \\ 1, per_page \\ 20) do
-    from(t in __MODULE__,
-      where: t.clinic_id == ^clinic_id and t.status == ^status,
-      order_by: [desc: t.inserted_at],
-      limit: ^per_page,
-      offset: ^((page - 1) * per_page)
-    )
+  def list_by_status(status, clinic_id) do
+    Transaction
+    |> where(status: ^status)
+    |> where(clinic_id: ^clinic_id)
+    |> order_by(desc: :inserted_at)
     |> Repo.all()
   end
 
   @doc """
-  Lists all transactions for a specific clinic.
+  Lists all transactions within a date range for a specific clinic.
 
   ## Parameters
 
-  - clinic_id: The ID of the clinic to list transactions for
-  - page: Page number (default: 1)
-  - per_page: Number of transactions per page (default: 20)
+  * `start_date` - The start date to filter by
+  * `end_date` - The end date to filter by
+  * `clinic_id` - The ID of the clinic to filter by
 
   ## Returns
 
-  - List of all transactions for the clinic
+  * List of transactions
   """
-  def list_by_clinic(clinic_id, page \\ 1, per_page \\ 20) do
-    from(t in __MODULE__,
-      where: t.clinic_id == ^clinic_id,
-      order_by: [desc: t.inserted_at],
-      limit: ^per_page,
-      offset: ^((page - 1) * per_page)
-    )
+  def list_by_date_range(start_date, end_date, clinic_id) do
+    Transaction
+    |> where(clinic_id: ^clinic_id)
+    |> where([t], t.inserted_at >= ^start_date)
+    |> where([t], t.inserted_at <= ^end_date)
+    |> order_by(desc: :inserted_at)
     |> Repo.all()
   end
 
   @doc """
-  Gets transaction statistics for a specific clinic.
+  Gets a transaction by ID and clinic ID to ensure proper isolation.
 
   ## Parameters
 
-  - clinic_id: The ID of the clinic to get statistics for
+  * `id` - The ID of the transaction to get
+  * `clinic_id` - The clinic ID to ensure proper isolation
 
   ## Returns
 
-  - Map with transaction statistics
+  * `transaction` - If found and belongs to the clinic
+  * `nil` - If not found or doesn't belong to the clinic
   """
-  def get_statistics(clinic_id) do
-    # Get total count
-    total_query =
-      from(t in __MODULE__,
-        where: t.clinic_id == ^clinic_id,
-        select: count(t.id)
-      )
-
-    # Get count by status
-    status_query =
-      from(t in __MODULE__,
-        where: t.clinic_id == ^clinic_id,
-        group_by: t.status,
-        select: {t.status, count(t.id)}
-      )
-
-    # Get sum of completed transactions
-    sum_query =
-      from(t in __MODULE__,
-        where: t.clinic_id == ^clinic_id and t.status == "completed",
-        select: sum(t.amount)
-      )
-
-    # Execute queries
-    total = Repo.one(total_query) || 0
-    status_counts = Repo.all(status_query) |> Enum.into(%{})
-    total_amount = Repo.one(sum_query) || Decimal.new(0)
-
-    # Return statistics
-    %{
-      total: total,
-      by_status: status_counts,
-      total_amount: total_amount
-    }
+  def get_by_id_and_clinic(id, clinic_id) do
+    Repo.get_by(Transaction, id: id, clinic_id: clinic_id)
   end
 
   @doc """
-  Gets comprehensive transaction statistics for a specific clinic.
-  This is used for the admin dashboard.
+  Gets a transaction by transaction ID.
 
   ## Parameters
 
-  - clinic_id: The ID of the clinic to get statistics for
+  * `transaction_id` - The transaction ID to search for
+  * `clinic_id` - Optional clinic ID to ensure proper isolation
 
   ## Returns
 
-  - Map with detailed transaction statistics
+  * `transaction` - If found
+  * `nil` - If not found
   """
-  def get_stats_for_clinic(clinic_id) do
-    # Get total count
-    total_count = count_for_clinic(clinic_id)
-
-    # Get counts by status
-    completed_count = count_for_clinic(clinic_id, %{status: "completed"})
-    pending_count = count_for_clinic(clinic_id, %{status: "pending"})
-    failed_count = count_for_clinic(clinic_id, %{status: "failed"})
-
-    # Get total amount of completed transactions
-    total_amount_query =
-      from(t in __MODULE__,
-        where: t.clinic_id == ^clinic_id and t.status == "completed",
-        select: sum(t.amount)
-      )
-
-    total_amount = Repo.one(total_amount_query) || Decimal.new(0)
-
-    # Return comprehensive statistics
-    %{
-      total_count: total_count,
-      completed_count: completed_count,
-      pending_count: pending_count,
-      failed_count: failed_count,
-      total_amount: total_amount
-    }
+  def get_by_transaction_id(transaction_id, clinic_id \\ nil) do
+    query = from t in Transaction, where: t.transaction_id == ^transaction_id
+    query = if clinic_id, do: where(query, [t], t.clinic_id == ^clinic_id), else: query
+    Repo.one(query)
   end
 
-  # Private functions
+  @doc """
+  Counts transactions for a specific clinic.
 
-  @doc false
-  defp apply_filters(query, filters) do
-    Enum.reduce(filters, query, fn
-      {:status, status}, query ->
-        from(t in query, where: t.status == ^status)
+  ## Parameters
 
-      {:type, type}, query ->
-        from(t in query, where: t.type == ^type)
+  * `clinic_id` - The ID of the clinic to count transactions for
 
-      {:date_from, date_from}, query ->
-        from(t in query, where: t.inserted_at >= ^date_from)
+  ## Returns
 
-      {:date_to, date_to}, query ->
-        from(t in query, where: t.inserted_at <= ^date_to)
+  * Count of transactions
+  """
+  def count_by_clinic(clinic_id) do
+    Transaction
+    |> where(clinic_id: ^clinic_id)
+    |> Repo.aggregate(:count, :id)
+  end
 
-      {:reference, reference}, query ->
-        from(t in query, where: ilike(t.reference, ^"%#{reference}%"))
+  @doc """
+  Counts transactions for a specific clinic and status.
 
-      {:phone, phone}, query ->
-        from(t in query, where: ilike(t.phone, ^"%#{phone}%"))
+  ## Parameters
+
+  * `clinic_id` - The ID of the clinic to count transactions for
+  * `status` - The status to filter by
+
+  ## Returns
+
+  * Count of transactions
+  """
+  def count_by_clinic_and_status(clinic_id, status) do
+    Transaction
+    |> where(clinic_id: ^clinic_id)
+    |> where(status: ^status)
+    |> Repo.aggregate(:count, :id)
+  end
+
+  @doc """
+  Sums the amount of completed transactions for a specific clinic.
+
+  ## Parameters
+
+  * `clinic_id` - The ID of the clinic to sum transactions for
+  * `status` - The status to filter by (usually "completed")
+
+  ## Returns
 
-      _, query ->
-        query
+  * Sum of transaction amounts
+  """
+  def sum_amount_by_clinic_and_status(clinic_id, status) do
+    result = Transaction
+    |> where(clinic_id: ^clinic_id)
+    |> where(status: ^status)
+    |> Repo.aggregate(:sum, :amount)
+    
+    result || 0.0
+  end
+
+  @doc """
+  Paginates transactions for a specific clinic with filtering.
+
+  ## Parameters
+
+  * `clinic_id` - The ID of the clinic to list transactions for
+  * `filters` - Map of filters to apply (status, invoice_id, patient_id, from_date, to_date)
+  * `page` - Page number for pagination
+  * `per_page` - Number of items per page
+
+  ## Returns
+
+  * `{transactions, pagination}` - List of transactions and pagination info
+  """
+  def paginate_by_clinic(clinic_id, filters \\ %{}, page \\ 1, per_page \\ 20) do
+    query = Transaction
+    |> where(clinic_id: ^clinic_id)
+    |> apply_filters(filters)
+    |> order_by(desc: :inserted_at)
+
+    # Get total count for pagination
+    total_count = Repo.aggregate(query, :count, :id)
+    total_pages = ceil(total_count / per_page)
+
+    # Apply pagination
+    transactions = query
+    |> limit(^per_page)
+    |> offset(^((page - 1) * per_page))
+    |> Repo.all()
+
+    # Return transactions with pagination info
+    {transactions, %{
+      page: page,
+      per_page: per_page,
+      total_count: total_count,
+      total_pages: total_pages
+    }}
+  end
+
+  # Private functions
+
+  defp changeset(transaction, attrs) do
+    transaction
+    |> cast(attrs, [
+      :clinic_id, :invoice_id, :patient_id, :phone_number, :amount, :status,
+      :reference, :checkout_request_id, :merchant_request_id, :transaction_id,
+      :transaction_date, :result_code, :result_desc
+    ])
+    |> validate_required([:clinic_id, :invoice_id, :patient_id, :phone_number, :amount, :status])
+    |> validate_inclusion(:status, ["pending", "completed", "failed"])
+    |> validate_number(:amount, greater_than: 0)
+  end
+
+  defp apply_filters(query, filters) do
+    Enum.reduce(filters, query, fn
+      {:status, nil}, query -> query
+      {:status, ""}, query -> query
+      {:status, status}, query -> where(query, [t], t.status == ^status)
+      
+      {:invoice_id, nil}, query -> query
+      {:invoice_id, ""}, query -> query
+      {:invoice_id, invoice_id}, query -> where(query, [t], t.invoice_id == ^invoice_id)
+      
+      {:patient_id, nil}, query -> query
+      {:patient_id, ""}, query -> query
+      {:patient_id, patient_id}, query -> where(query, [t], t.patient_id == ^patient_id)
+      
+      {:from_date, nil}, query -> query
+      {:from_date, from_date}, query -> where(query, [t], t.inserted_at >= ^from_date)
+      
+      {:to_date, nil}, query -> query
+      {:to_date, to_date}, query -> 
+        # Add a day to include the entire end date
+        to_date = 
+          to_date
+          |> NaiveDateTime.new!(~T[23:59:59])
+        where(query, [t], t.inserted_at <= ^to_date)
+      
+      _, query -> query
     end)
   end
 end
diff --git a/lib/clinicpro/prescriptions/prescription.ex b/lib/clinicpro/prescriptions/prescription.ex
index 4de59a8..557115c 100644
--- a/lib/clinicpro/prescriptions/prescription.ex
+++ b/lib/clinicpro/prescriptions/prescription.ex
@@ -1,49 +1,75 @@
 defmodule Clinicpro.Prescriptions.Prescription do
   use Ash.Resource,
-    data_layer: Ash.DataLayer.Ets
+    data_layer: AshPostgres.DataLayer
+
+  postgres do
+    table("prescriptions")
+    repo(Clinicpro.Repo)
+  end
 
   attributes do
-    uuid_primary_key :id
-    attribute :medication_name, :string, allow_nil?: false
-    attribute :dosage, :string, allow_nil?: false
-    attribute :frequency, :string, allow_nil?: false
-    attribute :duration, :string, allow_nil?: false
-    attribute :instructions, :string, default: ""
-    attribute :created_at, :utc_datetime_usec, default: &DateTime.utc_now/0
+    uuid_primary_key(:id)
+    attribute(:medication_name, :string, allow_nil?: false)
+    attribute(:dosage, :string, allow_nil?: false)
+    attribute(:frequency, :string, allow_nil?: false)
+    attribute(:duration, :string, allow_nil?: false)
+    attribute(:instructions, :string, default: "")
+    attribute(:created_at, :utc_datetime_usec, default: &DateTime.utc_now/0)
+
+    # Additional fields for medication details
+    attribute(:medication_code, :string)
+    # e.g., tablet, syrup, injection
+    attribute(:medication_form, :string)
+    # e.g., 500mg, 250ml
+    attribute(:medication_strength, :string)
+    attribute(:refills, :integer, default: 0)
+    attribute(:is_controlled_substance, :boolean, default: false)
+    attribute(:clinic_id, :uuid, allow_nil?: false)
   end
 
   relationships do
     belongs_to :appointment, Clinicpro.Appointments.Appointment
     belongs_to :doctor, Clinicpro.Accounts.User
     belongs_to :patient, Clinicpro.Accounts.User
+    belongs_to :clinic, Clinicpro.Clinics.Clinic
   end
 
   actions do
-    defaults [:create, :read, :update, :destroy]
+    defaults([:create, :read, :update, :destroy])
 
     create :create_for_appointment do
-      argument :appointment_id, :uuid, allow_nil?: false
-      argument :doctor_id, :uuid, allow_nil?: false
-      argument :patient_id, :uuid, allow_nil?: false
+      argument(:appointment_id, :uuid, allow_nil?: false)
+      argument(:doctor_id, :uuid, allow_nil?: false)
+      argument(:patient_id, :uuid, allow_nil?: false)
+      argument(:clinic_id, :uuid, allow_nil?: false)
 
-      change set_attribute(:appointment_id, arg(:appointment_id))
-      change set_attribute(:doctor_id, arg(:doctor_id))
-      change set_attribute(:patient_id, arg(:patient_id))
+      change(set_attribute(:appointment_id, arg(:appointment_id)))
+      change(set_attribute(:doctor_id, arg(:doctor_id)))
+      change(set_attribute(:patient_id, arg(:patient_id)))
+      change(set_attribute(:clinic_id, arg(:clinic_id)))
     end
 
     read :list_by_patient do
-      argument :patient_id, :uuid, allow_nil?: false
-      filter expr(patient_id == ^arg(:patient_id))
+      argument(:patient_id, :uuid, allow_nil?: false)
+      filter(expr(patient_id == ^arg(:patient_id)))
     end
 
     read :list_by_doctor do
-      argument :doctor_id, :uuid, allow_nil?: false
-      filter expr(doctor_id == ^arg(:doctor_id))
+      argument(:doctor_id, :uuid, allow_nil?: false)
+      filter(expr(doctor_id == ^arg(:doctor_id)))
     end
 
     read :list_by_appointment do
-      argument :appointment_id, :uuid, allow_nil?: false
-      filter expr(appointment_id == ^arg(:appointment_id))
+      argument(:appointment_id, :uuid, allow_nil?: false)
+      filter(expr(appointment_id == ^arg(:appointment_id)))
+    end
+
+    read :list_by_clinic do
+      argument(:clinic_id, :uuid, allow_nil?: false)
+      filter(expr(clinic_id == ^arg(:clinic_id)))
     end
   end
+
+  # Multi-tenant isolation is handled through Ecto queries
+  # Each query filters by clinic_id to ensure proper data isolation
 end
diff --git a/lib/clinicpro/virtual_meetings/google_meet_adapter.ex b/lib/clinicpro/virtual_meetings/google_meet_adapter.ex
index 1c9e8e3..67188cf 100644
--- a/lib/clinicpro/virtual_meetings/google_meet_adapter.ex
+++ b/lib/clinicpro/virtual_meetings/google_meet_adapter.ex
@@ -204,7 +204,7 @@ defmodule Clinicpro.VirtualMeetings.GoogleMeetAdapter do
       conferenceData: %ConferenceData{
         createRequest: %CreateConferenceRequest{
           requestId: "#{appointment.id}-#{:os.system_time(:millisecond)}",
-          conferenceSolutionKey: %ConferenceSolution{
+          conferenceSolutionKey: %{
             type: "hangoutsMeet"
           }
         }
diff --git a/lib/clinicpro_web.ex b/lib/clinicpro_web.ex
index 28b5597..a866044 100644
--- a/lib/clinicpro_web.ex
+++ b/lib/clinicpro_web.ex
@@ -127,8 +127,8 @@ defmodule ClinicproWeb do
       # Use all HTML functionality (forms, tags, etc)
       import Phoenix.HTML
       import Phoenix.HTML.Form
-      import Phoenix.HTML.Link
-      import Phoenix.HTML.Tag
+      import PhoenixHTMLHelpers.Link
+      import PhoenixHTMLHelpers.Tag
       use PhoenixHTMLHelpers
 
       # Import basic rendering functionality (render, render_layout, etc)
diff --git a/lib/clinicpro_web/components/core_components.ex b/lib/clinicpro_web/components/core_components.ex
index 60ca165..061438e 100644
--- a/lib/clinicpro_web/components/core_components.ex
+++ b/lib/clinicpro_web/components/core_components.ex
@@ -110,7 +110,7 @@ defmodule ClinicproWeb.CoreComponents do
 
     ~H"""
     <div
-      :if={msg = render_slot(@inner_block) || Phoenix.Flash.get(@flash, @kind)}
+      :if={_msg = render_slot(@inner_block) || Phoenix.Flash.get(@flash, @kind)}
       id={@id}
       phx-click={JS.push("lv:clear-flash", value: %{key: @kind}) |> hide("##{@id}")}
       role="alert"
@@ -123,8 +123,7 @@ defmodule ClinicproWeb.CoreComponents do
     >
       <p :if={@title} class="flex items-center gap-1.5 text-sm font-semibold leading-6">
         <.icon :if={@kind == :info} name="hero-information-circle-mini" class="h-4 w-4" />
-        <.icon :if={@kind == :error} name="hero-exclamation-circle-mini" class="h-4 w-4" />
-        {@title}
+        <.icon :if={@kind == :error} name="hero-exclamation-circle-mini" class="h-4 w-4" /> {@title}
       </p>
       <p class="mt-2 text-sm leading-5">{msg}</p>
       <button type="button" class="group absolute top-1 right-1 p-2" aria-label={gettext("close")}>
@@ -201,11 +200,11 @@ defmodule ClinicproWeb.CoreComponents do
 
   def simple_form(assigns) do
     ~H"""
-    <.form :let={f} for={@for} as={@as} {@rest}>
+    <.form :let={_f} for={@for} as={@as} {@rest}>
       <div class="mt-10 space-y-8 bg-white">
-        {render_slot(@inner_block, f)}
-        <div :for={action <- @actions} class="mt-2 flex items-center justify-between gap-6">
-          {render_slot(action, f)}
+        {render_slot(@inner_block, _f)}
+        <div :for={_action <- @actions} class="mt-2 flex items-center justify-between gap-6">
+          {render_slot(_action, _f)}
         </div>
       </div>
     </.form>
@@ -320,8 +319,7 @@ defmodule ClinicproWeb.CoreComponents do
           checked={@checked}
           class="rounded border-zinc-300 text-zinc-900 focus:ring-0"
           {@rest}
-        />
-        {@label}
+        /> {@label}
       </label>
       <.error :for={msg <- @errors}>{msg}</.error>
     </div>
@@ -477,7 +475,7 @@ defmodule ClinicproWeb.CoreComponents do
       <table class="w-[40rem] mt-11 sm:w-full">
         <thead class="text-sm text-left leading-6 text-zinc-500">
           <tr>
-            <th :for={col <- @col} class="p-0 pb-4 pr-6 font-normal">{col[:label]}</th>
+            <th :for={_col <- @col} class="p-0 pb-4 pr-6 font-normal">{_col[:label]}</th>
             <th :if={@action != []} class="relative p-0 pb-4">
               <span class="sr-only">{gettext("Actions")}</span>
             </th>
@@ -488,7 +486,11 @@ defmodule ClinicproWeb.CoreComponents do
           phx-update={match?(%Phoenix.LiveView.LiveStream{}, @rows) && "stream"}
           class="relative divide-y divide-zinc-100 border-t border-zinc-200 text-sm leading-6 text-zinc-700"
         >
-          <tr :for={row <- @rows} id={@row_id && @row_id.(row)} class="group hover:bg-zinc-50">
+          <tr
+            :for={{row, i} <- Enum.with_index(@rows)}
+            id={@row_id && @row_id.(row)}
+            class="group hover:bg-zinc-50"
+          >
             <td
               :for={{col, i} <- Enum.with_index(@col)}
               phx-click={@row_click && @row_click.(row)}
@@ -563,8 +565,7 @@ defmodule ClinicproWeb.CoreComponents do
         navigate={@navigate}
         class="text-sm font-semibold leading-6 text-zinc-900 hover:text-zinc-700"
       >
-        <.icon name="hero-arrow-left-solid" class="h-3 w-3" />
-        {render_slot(@inner_block)}
+        <.icon name="hero-arrow-left-solid" class="h-3 w-3" /> {render_slot(@inner_block)}
       </.link>
     </div>
     """
diff --git a/lib/clinicpro_web/components/invoice_components.ex b/lib/clinicpro_web/components/invoice_components.ex
new file mode 100644
index 0000000..00f8dbe
--- /dev/null
+++ b/lib/clinicpro_web/components/invoice_components.ex
@@ -0,0 +1,77 @@
+defmodule ClinicproWeb.InvoiceComponents do
+  @moduledoc """
+  Provides invoice-specific UI components for the ClinicPro application.
+  """
+  use Phoenix.Component
+
+  import Phoenix.HTML
+  import Phoenix.HTML.Form
+  import PhoenixHTMLHelpers.Tag
+  import ClinicproWeb.CoreComponents
+  import PhoenixHTMLHelpers.Link
+
+  @doc """
+  Renders an invoice item row.
+  """
+  attr :item, :map, required: true
+  attr :class, :string, default: nil
+
+  def invoice_item(assigns) do
+    ~H"""
+    <div class={["flex justify-between py-2", @class]}>
+      <div class="flex-1">
+        <p class="text-sm font-medium text-gray-900"><%= @item.description %></p>
+        <p :if={@item[:details]} class="text-xs text-gray-500"><%= @item.details %></p>
+      </div>
+      <div class="text-right">
+        <p class="text-sm font-medium text-gray-900"><%= format_currency(@item.amount) %></p>
+      </div>
+    </div>
+    """
+  end
+
+  @doc """
+  Renders a payment method badge.
+  """
+  attr :method, :string, required: true
+  attr :class, :string, default: nil
+
+  def payment_method_badge(assigns) do
+    bg_color =
+      case assigns.method do
+        "mpesa" -> "bg-green-100 text-green-800"
+        "cash" -> "bg-blue-100 text-blue-800"
+        "card" -> "bg-purple-100 text-purple-800"
+        "insurance" -> "bg-yellow-100 text-yellow-800"
+        _ -> "bg-gray-100 text-gray-800"
+      end
+
+    assigns = assign(assigns, :bg_color, bg_color)
+
+    ~H"""
+    <span class={[
+      "inline-flex items-center rounded-md px-2 py-1 text-xs font-medium",
+      @bg_color,
+      @class
+    ]}>
+      <%= String.capitalize(@method) %>
+    </span>
+    """
+  end
+
+  @doc """
+  Formats a currency amount.
+  """
+  def format_currency(amount) when is_number(amount) do
+    "KES #{:erlang.float_to_binary(amount / 1, decimals: 2)}"
+  end
+
+  def format_currency(amount) when is_binary(amount) do
+    case Float.parse(amount) do
+      {num, _} -> format_currency(num)
+      :error -> "KES 0.00"
+    end
+  end
+
+  def format_currency(_), do: "KES 0.00"
+end
diff --git a/lib/clinicpro_web/components/medication_search_component.ex b/lib/clinicpro_web/components/medication_search_component.ex
new file mode 100644
index 0000000..bd4f489
--- /dev/null
+++ b/lib/clinicpro_web/components/medication_search_component.ex
@@ -0,0 +1,157 @@
+defmodule ClinicproWeb.MedicationSearchComponent do
+  use ClinicproWeb, :live_component
+
+  # alias Clinicpro.Medications - removed unused alias
+
+  @impl true
+  def mount(socket) do
+    {:ok, assign(socket,
+      query: "",
+      results: [],
+      selected_medication: nil,
+      loading: false,
+      debounce: 300
+    )}
+  end
+
+  @impl true
+  def update(assigns, socket) do
+    {:ok, socket
+      |> assign(assigns)
+      |> assign(:id, assigns.id || "medication-search")
+      |> assign(:clinic_id, assigns.clinic_id)
+    }
+  end
+
+  @impl true
+  def render(assigns) do
+    ~H"""
+    <div id={@id} class="relative">
+      <div class="relative">
+        <input
+          type="text"
+          id={"#{@id}-input"}
+          name={@name}
+          class="block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
+          placeholder="Search for medications..."
+          value={@query}
+          phx-target={@myself}
+          phx-keyup="search"
+          phx-debounce={@debounce}
+          autocomplete="off"
+          aria-autocomplete="list"
+          aria-controls={"#{@id}-results"}
+          aria-expanded={length(@results) > 0}
+          phx-hook="MedicationSearch"
+          data-selected-value={if @selected_medication, do: @selected_medication["name"], else: ""}
+          data-selected-id={if @selected_medication, do: @selected_medication["id"], else: ""}
+        />
+
+        <input type="hidden" name={@field_name} value={if @selected_medication, do: @selected_medication["id"], else: ""} />
+
+        <%= if @loading do %>
+          <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
+            <svg class="animate-spin h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
+              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
+              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
+            </svg>
+          </div>
+        <% end %>
+      </div>
+
+      <%= if length(@results) > 0 do %>
+        <div
+          id={"#{@id}-results"}
+          class="absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm"
+          role="listbox"
+        >
+          <%= for medication <- @results do %>
+            <div
+              class="relative cursor-pointer select-none py-2 pl-3 pr-9 hover:bg-indigo-100"
+              role="option"
+              phx-click="select"
+              phx-value-id={medication["id"]}
+              phx-target={@myself}
+            >
+              <div class="flex items-center">
+                <span class="font-medium block truncate"><%= medication["name"] %></span>
+              </div>
+              <div class="text-xs text-gray-500 mt-1">
+                <%= if medication["form"] do %>
+                  <span class="mr-2"><%= medication["form"] %></span>
+                <% end %>
+                <%= if medication["strength"] do %>
+                  <span><%= medication["strength"] %></span>
+                <% end %>
+              </div>
+            </div>
+          <% end %>
+        </div>
+      <% end %>
+
+      <%= if @selected_medication do %>
+        <div class="mt-2 p-2 border rounded-md bg-gray-50">
+          <div class="flex justify-between">
+            <div>
+              <div class="font-medium"><%= @selected_medication["name"] %></div>
+              <div class="text-sm text-gray-500">
+                <%= if @selected_medication["form"] do %>
+                  <span class="mr-2"><%= @selected_medication["form"] %></span>
+                <% end %>
+                <%= if @selected_medication["strength"] do %>
+                  <span><%= @selected_medication["strength"] %></span>
+                <% end %>
+              </div>
+            </div>
+            <button
+              type="button"
+              class="text-gray-400 hover:text-gray-500"
+              phx-click="clear"
+              phx-target={@myself}
+            >
+              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
+                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
+              </svg>
+            </button>
+          </div>
+        </div>
+      <% end %>
+    </div>
+    """
+  end
+
+  @impl true
+  def handle_event("search", %{"value" => query}, socket) do
+    if String.length(query) >= 2 do
+      send(self(), {:search_medications, query, socket.assigns.clinic_id, self()})
+
+      {:noreply, assign(socket, query: query, loading: true)}
+    else
+      {:noreply, assign(socket, query: query, results: [], loading: false)}
+    end
+  end
+
+  @impl true
+  def handle_event("select", %{"id" => id}, socket) do
+    selected = Enum.find(socket.assigns.results, fn med -> med["id"] == id end)
+
+    {:noreply, assign(socket,
+      selected_medication: selected,
+      query: selected["name"],
+      results: []
+    )}
+  end
+
+  @impl true
+  def handle_event("clear", _, socket) do
+    {:noreply, assign(socket,
+      selected_medication: nil,
+      query: ""
+    )}
+  end
+
+  @impl true
+  def handle_info({:search_results, results}, socket) do
+    {:noreply, assign(socket, results: results, loading: false)}
+  end
+end
diff --git a/lib/clinicpro_web/components/mpesa_payment_button.ex b/lib/clinicpro_web/components/mpesa_payment_button.ex
new file mode 100644
index 0000000..3b2f35b
--- /dev/null
+++ b/lib/clinicpro_web/components/mpesa_payment_button.ex
@@ -0,0 +1,298 @@
+defmodule ClinicproWeb.Components.MPesaPaymentButton do
+  @moduledoc """
+  LiveView component for initiating M-Pesa STK push payments from the invoice UI.
+  Supports multi-tenant architecture with clinic-specific configurations.
+  """
+
+  use ClinicproWeb, :live_component
+
+  alias Clinicpro.Invoices.PaymentProcessor
+  alias Phoenix.LiveView.JS
+
+  @impl true
+  def render(assigns) do
+    ~H"""
+    <div id={"mpesa-payment-#{@id}"} class="w-full">
+      <div class="flex flex-col space-y-4">
+        <%= if @payment_status == "initiated" do %>
+          <div class="bg-blue-50 border border-blue-200 rounded-md p-4">
+            <div class="flex">
+              <div class="flex-shrink-0">
+                <svg class="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
+                  <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
+                </svg>
+              </div>
+              <div class="ml-3 flex-1 md:flex md:justify-between">
+                <p class="text-sm text-blue-700">
+                  Please check your phone for the M-Pesa payment request.
+                </p>
+                <p class="mt-3 text-sm md:mt-0 md:ml-6">
+                  <button
+                    phx-click={JS.push("check_payment_status", target: @myself)}
+                    class="whitespace-nowrap font-medium text-blue-700 hover:text-blue-600"
+                  >
+                    Check Status <span aria-hidden="true">&rarr;</span>
+                  </button>
+                </p>
+              </div>
+            </div>
+          </div>
+        <% end %>
+
+        <%= if @payment_status == "failed" do %>
+          <div class="bg-red-50 border border-red-200 rounded-md p-4">
+            <div class="flex">
+              <div class="flex-shrink-0">
+                <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
+                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
+                </svg>
+              </div>
+              <div class="ml-3">
+                <h3 class="text-sm font-medium text-red-800">Payment Failed</h3>
+                <div class="mt-2 text-sm text-red-700">
+                  <p><%= @error_message || "There was an error processing your payment. Please try again." %></p>
+                </div>
+              </div>
+            </div>
+          </div>
+        <% end %>
+
+        <%= if @payment_status == "completed" do %>
+          <div class="bg-green-50 border border-green-200 rounded-md p-4">
+            <div class="flex">
+              <div class="flex-shrink-0">
+                <svg class="h-5 w-5 text-green-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
+                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
+                </svg>
+              </div>
+              <div class="ml-3">
+                <h3 class="text-sm font-medium text-green-800">Payment Successful</h3>
+                <div class="mt-2 text-sm text-green-700">
+                  <p>Your payment has been processed successfully. Reference: <%= @payment_reference %></p>
+                </div>
+              </div>
+            </div>
+          </div>
+        <% end %>
+
+        <%= if @payment_status != "completed" do %>
+          <div class="mt-2">
+            <label for={"phone-number-#{@id}"} class="block text-sm font-medium text-gray-700">
+              Phone Number (for M-Pesa)
+            </label>
+            <div class="mt-1 relative rounded-md shadow-sm">
+              <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
+                <span class="text-gray-500 sm:text-sm">+</span>
+              </div>
+              <input
+                type="tel"
+                name="phone_number"
+                id={"phone-number-#{@id}"}
+                class="focus:ring-indigo-500 focus:border-indigo-500 block w-full pl-7 pr-12 sm:text-sm border-gray-300 rounded-md"
+                placeholder="254712345678"
+                value={@phone_number}
+                phx-keyup="validate_phone"
+                phx-target={@myself}
+                phx-debounce="500"
+                disabled={@payment_status == "initiated"}
+              />
+              <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
+                <span class="text-gray-500 sm:text-sm" id="phone-number-addon">
+                  M-Pesa
+                </span>
+              </div>
+            </div>
+            <%= if @phone_error do %>
+              <p class="mt-2 text-sm text-red-600" id={"phone-error-#{@id}"}><%= @phone_error %></p>
+            <% end %>
+          </div>
+
+          <div class="mt-4">
+            <button
+              type="button"
+              phx-click="initiate_payment"
+              phx-target={@myself}
+              disabled={@payment_status == "initiated" || @phone_error != nil || @phone_number == ""}
+              class={[
+                "w-full inline-flex justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white",
+                if(@payment_status == "initiated" || @phone_error != nil || @phone_number == "",
+                  do: "bg-indigo-300 cursor-not-allowed",
+                  else: "bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
+                )
+              ]}
+            >
+              <%= if @payment_status == "initiated" do %>
+                <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
+                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
+                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
+                </svg>
+                Processing...
+              <% else %>
+                <svg class="-ml-1 mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
+                </svg>
+                Pay with M-Pesa
+              <% end %>
+            </button>
+          </div>
+        <% end %>
+      </div>
+    </div>
+    """
+  end
+
+  @impl true
+  def mount(socket) do
+    {:ok,
+     socket
+     |> assign(:payment_status, "pending")
+     |> assign(:phone_number, "")
+     |> assign(:phone_error, nil)
+     |> assign(:error_message, nil)
+     |> assign(:payment_reference, nil)}
+  end
+
+  @impl true
+  def update(%{invoice: invoice} = assigns, socket) do
+    # Initialize the component with the invoice data
+    socket =
+      socket
+      |> assign(assigns)
+      |> assign(:payment_status, get_payment_status(invoice))
+      |> assign(:payment_reference, invoice.payment_reference)
+      |> assign(:error_message, invoice.payment_error)
+      |> maybe_prefill_phone_number(assigns)
+
+    {:ok, socket}
+  end
+
+  @impl true
+  def handle_event("validate_phone", %{"value" => phone_number}, socket) do
+    # Validate the phone number format
+    error =
+      case validate_phone_number(phone_number) do
+        :ok -> nil
+        {:error, message} -> message
+      end
+
+    {:noreply, assign(socket, phone_number: phone_number, phone_error: error)}
+  end
+
+  @impl true
+  def handle_event("initiate_payment", _params, socket) do
+    %{invoice: invoice, phone_number: phone_number} = socket.assigns
+
+    # Initiate the M-Pesa payment
+    case PaymentProcessor.initiate_payment(invoice, phone_number) do
+      {:ok, _response} ->
+        # Update the UI to show the payment is initiated
+        {:noreply,
+         socket
+         |> assign(:payment_status, "initiated")
+         |> assign(:error_message, nil)}
+
+      {:error, reason} ->
+        # Show the error message
+        error_message = format_error_message(reason)
+
+        {:noreply,
+         socket
+         |> assign(:payment_status, "failed")
+         |> assign(:error_message, error_message)}
+    end
+  end
+
+  @impl true
+  def handle_event("check_payment_status", _params, socket) do
+    %{invoice: invoice} = socket.assigns
+
+    # Check the current payment status
+    case PaymentProcessor.check_payment_status(invoice) do
+      {:ok, :completed} ->
+        # Refresh the invoice data to get the latest status
+        updated_invoice = Clinicpro.Invoices.get_invoice(invoice.id)
+
+        {:noreply,
+         socket
+         |> assign(:payment_status, "completed")
+         |> assign(:invoice, updated_invoice)
+         |> assign(:payment_reference, updated_invoice.payment_reference)}
+
+      {:ok, :pending} ->
+        # Still waiting for payment
+        {:noreply, socket}
+
+      {:ok, :failed} ->
+        # Payment failed
+        updated_invoice = Clinicpro.Invoices.get_invoice(invoice.id)
+
+        {:noreply,
+         socket
+         |> assign(:payment_status, "failed")
+         |> assign(:invoice, updated_invoice)
+         |> assign(:error_message, updated_invoice.payment_error || "Payment failed")}
+
+      {:ok, :no_transaction} ->
+        # No transaction found
+        {:noreply,
+         socket
+         |> assign(:payment_status, "pending")}
+
+      {:error, reason} ->
+        # Error checking status
+        {:noreply,
+         socket
+         |> assign(:error_message, format_error_message(reason))}
+    end
+  end
+
+  # Private functions
+
+  defp get_payment_status(invoice) do
+    case invoice.payment_status do
+      "completed" -> "completed"
+      "payment_initiated" -> "initiated"
+      "payment_failed" -> "failed"
+      _ -> "pending"
+    end
+  end
+
+  defp maybe_prefill_phone_number(socket, %{patient: patient}) when not is_nil(patient) do
+    # If we have a patient, prefill their phone number
+    if patient.phone_number && patient.phone_number != "" do
+      assign(socket, :phone_number, patient.phone_number)
+    else
+      socket
+    end
+  end
+
+  defp maybe_prefill_phone_number(socket, _assigns), do: socket
+
+  defp validate_phone_number(phone_number) do
+    # Remove any non-digit characters
+    digits_only = String.replace(phone_number, ~r/\D/, "")
+
+    cond do
+      # Empty is allowed (will be caught by the disabled button)
+      phone_number == "" ->
+        :ok
+
+      # Check if it's a valid Kenyan phone number format
+      String.starts_with?(digits_only, "254") && String.length(digits_only) == 12 ->
+        :ok
+
+      String.starts_with?(digits_only, "0") && String.length(digits_only) == 10 ->
+        :ok
+
+      String.length(digits_only) == 9 && Regex.match?(~r/^7|1/, digits_only) ->
+        :ok
+
+      # Invalid format
+      true ->
+        {:error, "Please enter a valid Kenyan phone number"}
+    end
+  end
+
+  defp format_error_message(reason) when is_binary(reason), do: reason
+  defp format_error_message(reason), do: "Error: #{inspect(reason)}"
+end
diff --git a/lib/clinicpro_web/controllers/admin_bypass_html/index.html.heex b/lib/clinicpro_web/controllers/admin_bypass_html/index.html.heex
index 7cf7dd4..80a981d 100644
--- a/lib/clinicpro_web/controllers/admin_bypass_html/index.html.heex
+++ b/lib/clinicpro_web/controllers/admin_bypass_html/index.html.heex
@@ -1,7 +1,7 @@
 <div class="container mx-auto px-4 py-8">
   <div class="flex justify-between items-center mb-6">
     <h1 class="text-3xl font-bold">ClinicPro Admin Dashboard</h1>
-    <.form :let={f} for={%{}} action={~p"/admin_bypass/seed"} method="post">
+    <.form :let={_f} for={%{}} action={~p"/admin_bypass/seed"} method="post">
       <button type="submit" class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded">
         Seed Database
       </button>
diff --git a/lib/clinicpro_web/controllers/appointment_controller.ex b/lib/clinicpro_web/controllers/appointment_controller.ex
index 50d7df8..0abc43d 100644
--- a/lib/clinicpro_web/controllers/appointment_controller.ex
+++ b/lib/clinicpro_web/controllers/appointment_controller.ex
@@ -1,28 +1,28 @@
 defmodule ClinicproWeb.AppointmentController do
   use ClinicproWeb, :controller
-  
+
   alias Clinicpro.Appointments
   alias Clinicpro.Invoices
-  
+
   @doc """
   Show appointment details.
   """
   def show(conn, %{"id" => id}) do
     # Get the current patient from the session
     patient = conn.assigns.current_patient
-    
+
     case Appointments.get_appointment(id) do
       nil ->
         conn
         |> put_flash(:error, "Appointment not found.")
         |> redirect(to: ~p"/patient/dashboard")
-        
+
       appointment ->
         # Check if the appointment belongs to the current patient
         if appointment.patient_id == patient.id do
           # Get the associated invoice
           invoice = Invoices.get_invoice_by_appointment(appointment.id)
-          
+
           render(conn, :show, appointment: appointment, invoice: invoice)
         else
           conn
@@ -31,7 +31,7 @@ defmodule ClinicproWeb.AppointmentController do
         end
     end
   end
-  
+
   @doc """
   Show virtual appointment link.
   Only available for paid virtual appointments.
@@ -39,24 +39,24 @@ defmodule ClinicproWeb.AppointmentController do
   def virtual_link(conn, %{"id" => id}) do
     # Get the current patient from the session
     patient = conn.assigns.current_patient
-    
+
     case Appointments.get_appointment(id) do
       nil ->
         conn
         |> put_flash(:error, "Appointment not found.")
         |> redirect(to: ~p"/patient/dashboard")
-        
+
       appointment ->
         # Check if the appointment belongs to the current patient
         if appointment.patient_id == patient.id do
           # Get the associated invoice
           invoice = Invoices.get_invoice_by_appointment(appointment.id)
-          
+
           # Check if this is a virtual appointment and payment is complete
           if appointment.appointment_type == "virtual" && invoice && invoice.status == "paid" do
             # Generate or retrieve virtual meeting link
             meeting_link = get_or_generate_meeting_link(appointment)
-            
+
             render(conn, :virtual_link, appointment: appointment, meeting_link: meeting_link)
           else
             conn
@@ -70,7 +70,7 @@ defmodule ClinicproWeb.AppointmentController do
         end
     end
   end
-  
+
   @doc """
   Show onsite appointment details.
   Only available for paid onsite appointments.
@@ -78,28 +78,31 @@ defmodule ClinicproWeb.AppointmentController do
   def onsite_details(conn, %{"id" => id}) do
     # Get the current patient from the session
     patient = conn.assigns.current_patient
-    
+
     case Appointments.get_appointment(id) do
       nil ->
         conn
         |> put_flash(:error, "Appointment not found.")
         |> redirect(to: ~p"/patient/dashboard")
-        
+
       appointment ->
         # Check if the appointment belongs to the current patient
         if appointment.patient_id == patient.id do
           # Get the associated invoice
           invoice = Invoices.get_invoice_by_appointment(appointment.id)
-          
+
           # Check if this is an onsite appointment and payment is complete
           if appointment.appointment_type == "onsite" && invoice && invoice.status == "paid" do
             # Get clinic details
             clinic = get_clinic_details(appointment.clinic_id)
-            
+
             render(conn, :onsite_details, appointment: appointment, clinic: clinic)
           else
             conn
-            |> put_flash(:error, "Onsite details are only available for paid onsite appointments.")
+            |> put_flash(
+              :error,
+              "Onsite details are only available for paid onsite appointments."
+            )
             |> redirect(to: ~p"/q/appointment/#{appointment.id}")
           end
         else
@@ -109,26 +112,68 @@ defmodule ClinicproWeb.AppointmentController do
         end
     end
   end
-  
+
   # Helper functions
-  
+
   defp get_or_generate_meeting_link(appointment) do
     # Check if the appointment already has a meeting link
     if appointment.meeting_link && appointment.meeting_link != "" do
       appointment.meeting_link
     else
-      # Generate a new meeting link
-      # This is a placeholder - in a real implementation, you would integrate with
-      # a video conferencing API (Zoom, Google Meet, etc.) to generate a real link
-      link = "https://meet.clinicpro.com/#{appointment.id}-#{:crypto.strong_rand_bytes(8) |> Base.encode16(case: :lower)}"
-      
-      # Update the appointment with the new link
-      {:ok, updated_appointment} = Appointments.update_appointment(appointment, %{meeting_link: link})
-      
-      link
+      # Get the clinic_id from the appointment context
+      # In a multi-tenant system, we need to determine which clinic this appointment belongs to
+      # This could be from the doctor's association, the patient's association, or from the current session
+
+      # For now, we'll get the clinic_id from the doctor's association
+      # In a real implementation, you would have a proper way to get the clinic_id
+      clinic_id = get_clinic_id_for_appointment(appointment)
+
+      # Use the VirtualMeetings adapter to create a meeting
+      case Clinicpro.VirtualMeetings.Adapter.create_meeting(appointment, [], clinic_id) do
+        {:ok, meeting_data} ->
+          # Extract the meeting link from the response
+          link = meeting_data.join_url || meeting_data.meeting_url
+
+          # Update the appointment with the new link
+          {:ok, updated_appointment} =
+            Appointments.update_appointment(appointment, %{meeting_link: link})
+
+          link
+
+        {:error, reason} ->
+          # Log the error
+          require Logger
+          Logger.error("Failed to create virtual meeting: #{inspect(reason)}")
+
+          # Fall back to a simple meeting link as a last resort
+          link =
+            "https://meet.clinicpro.com/#{appointment.id}-#{:crypto.strong_rand_bytes(8) |> Base.encode16(case: :lower)}"
+
+          # Update the appointment with the fallback link
+          {:ok, updated_appointment} =
+            Appointments.update_appointment(appointment, %{meeting_link: link})
+
+          link
+      end
     end
   end
-  
+
+  defp get_clinic_id_for_appointment(appointment) do
+    # In a real implementation, you would have a proper way to get the clinic_id
+    # This is a placeholder implementation
+
+    # Option 1: Get from doctor's association if doctor belongs to a clinic
+    # doctor = Repo.get(Doctor, appointment.doctor_id)
+    # doctor.clinic_id
+
+    # Option 2: Get from the current session or context
+    # conn.assigns.current_clinic_id
+
+    # For now, we'll use a placeholder clinic_id for testing
+    # Replace this with the actual logic to get the clinic_id
+    "11111111-1111-1111-1111-111111111111"
+  end
+
   defp get_clinic_details(clinic_id) do
     # This is a placeholder - in a real implementation, you would fetch the clinic details from the database
     # For now, we'll return a mock clinic object
@@ -138,7 +183,8 @@ defmodule ClinicproWeb.AppointmentController do
       address: "123 Health Street, Medical District",
       phone: "+254 712 345 678",
       email: "appointments@clinicpro.com",
-      directions: "Located on the 3rd floor of the Medical Plaza building. Parking available in the basement."
+      directions:
+        "Located on the 3rd floor of the Medical Plaza building. Parking available in the basement."
     }
   end
 end
diff --git a/lib/clinicpro_web/controllers/doctor_flow_html/access_appointment.html.heex b/lib/clinicpro_web/controllers/doctor_flow_html/access_appointment.html.heex
index 4470f92..c21b9fc 100644
--- a/lib/clinicpro_web/controllers/doctor_flow_html/access_appointment.html.heex
+++ b/lib/clinicpro_web/controllers/doctor_flow_html/access_appointment.html.heex
@@ -48,7 +48,7 @@
     </div>
     
     <div class="mt-8">
-      <.form :let={f} for={%{}} action={~p"/doctor/appointment"} method="post">
+      <.form :let={_f} for={%{}} action={~p"/doctor/appointment"} method="post">
         <input type="hidden" name="appointment_id" value={@appointment_data.id}>
         <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-md">
           Start Appointment
diff --git a/lib/clinicpro_web/controllers/doctor_flow_html/fill_medical_details.html.heex b/lib/clinicpro_web/controllers/doctor_flow_html/fill_medical_details.html.heex
index 7d60121..a26c927 100644
--- a/lib/clinicpro_web/controllers/doctor_flow_html/fill_medical_details.html.heex
+++ b/lib/clinicpro_web/controllers/doctor_flow_html/fill_medical_details.html.heex
@@ -43,7 +43,7 @@
       <div class="bg-white shadow-md rounded-lg p-6">
         <h2 class="text-xl font-semibold mb-4">Enter Medical Details</h2>
         
-        <.form :let={f} for={%{}} action={~p"/doctor/medical_details"} method="post">
+        <.form :let={_f} for={%{}} action={~p"/doctor/medical_details"} method="post">
           <div class="space-y-6">
             <div>
               <label class="block text-sm font-medium text-gray-700 mb-1">
diff --git a/lib/clinicpro_web/controllers/doctor_flow_html/record_diagnosis.html.heex b/lib/clinicpro_web/controllers/doctor_flow_html/record_diagnosis.html.heex
index 72c630d..e543e4b 100644
--- a/lib/clinicpro_web/controllers/doctor_flow_html/record_diagnosis.html.heex
+++ b/lib/clinicpro_web/controllers/doctor_flow_html/record_diagnosis.html.heex
@@ -32,7 +32,7 @@
       </div>
     </div>
     
-    <.form :let={f} for={%{}} action={~p"/doctor/diagnosis"} method="post">
+    <.form :let={_f} for={%{}} action={~p"/doctor/diagnosis"} method="post">
       <div class="space-y-6">
         <div>
           <label class="block text-sm font-medium text-gray-700 mb-1">
diff --git a/lib/clinicpro_web/controllers/doctor_flow_html/save_to_profile.html.heex b/lib/clinicpro_web/controllers/doctor_flow_html/save_to_profile.html.heex
index afc3a1a..7aca53e 100644
--- a/lib/clinicpro_web/controllers/doctor_flow_html/save_to_profile.html.heex
+++ b/lib/clinicpro_web/controllers/doctor_flow_html/save_to_profile.html.heex
@@ -113,7 +113,7 @@
       </div>
     </div>
     
-    <.form :let={f} for={%{}} action={~p"/doctor/save_profile"} method="post">
+    <.form :let={_f} for={%{}} action={~p"/doctor/save_profile"} method="post">
       <div class="border-t border-gray-200 pt-6">
         <div class="mb-4">
           <label class="block text-sm font-medium text-gray-700 mb-1">
diff --git a/lib/clinicpro_web/controllers/guest_booking_html/collect_phone.html.heex b/lib/clinicpro_web/controllers/guest_booking_html/collect_phone.html.heex
index 765f1d4..80c60e3 100644
--- a/lib/clinicpro_web/controllers/guest_booking_html/collect_phone.html.heex
+++ b/lib/clinicpro_web/controllers/guest_booking_html/collect_phone.html.heex
@@ -11,7 +11,7 @@
       <p class="text-gray-700"><%= @appointment_type %></p>
     </div>
     
-    <.form :let={f} for={%{}} action={~p"/booking/phone"} method="post">
+    <.form :let={_f} for={%{}} action={~p"/booking/phone"} method="post">
       <div class="space-y-6">
         <div>
           <label for="name" class="block text-sm font-medium text-gray-700 mb-1">
diff --git a/lib/clinicpro_web/controllers/guest_booking_html/generate_invoice.html.heex b/lib/clinicpro_web/controllers/guest_booking_html/generate_invoice.html.heex
index 6b3c1c9..4754ab7 100644
--- a/lib/clinicpro_web/controllers/guest_booking_html/generate_invoice.html.heex
+++ b/lib/clinicpro_web/controllers/guest_booking_html/generate_invoice.html.heex
@@ -88,7 +88,7 @@
       </p>
     </div>
     
-    <.form :let={f} for={%{}} action={~p"/booking/invoice"} method="post">
+    <.form :let={_f} for={%{}} action={~p"/booking/invoice"} method="post">
       <div class="mt-8 flex justify-between">
         <a href={~p"/booking/phone"} class="text-blue-600 hover:text-blue-800">
           &larr; Back
diff --git a/lib/clinicpro_web/controllers/guest_booking_html/initiate.html.heex b/lib/clinicpro_web/controllers/guest_booking_html/initiate.html.heex
index aef3d05..0c1a321 100644
--- a/lib/clinicpro_web/controllers/guest_booking_html/initiate.html.heex
+++ b/lib/clinicpro_web/controllers/guest_booking_html/initiate.html.heex
@@ -20,7 +20,7 @@
       </ul>
     </div>
     
-    <.form :let={f} for={%{}} action={~p"/booking/initiate"} method="post">
+    <.form :let={_f} for={%{}} action={~p"/booking/initiate"} method="post">
       <div class="mt-6">
         <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-md">
           Start Booking Process
diff --git a/lib/clinicpro_web/controllers/guest_booking_html/select_type.html.heex b/lib/clinicpro_web/controllers/guest_booking_html/select_type.html.heex
index 13e9d8a..c2be1fb 100644
--- a/lib/clinicpro_web/controllers/guest_booking_html/select_type.html.heex
+++ b/lib/clinicpro_web/controllers/guest_booking_html/select_type.html.heex
@@ -6,7 +6,7 @@
   <div class="bg-white shadow-md rounded-lg p-6 mt-8">
     <h2 class="text-2xl font-semibold mb-4">What type of appointment do you need?</h2>
     
-    <.form :let={f} for={%{}} action={~p"/booking/type"} method="post">
+    <.form :let={_f} for={%{}} action={~p"/booking/type"} method="post">
       <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
         <div class="border border-gray-200 rounded-lg p-4 hover:bg-gray-50 cursor-pointer">
           <input type="radio" id="type_consultation" name="appointment_type" value="consultation" class="hidden peer" required>
diff --git a/lib/clinicpro_web/controllers/invoice_controller.ex b/lib/clinicpro_web/controllers/invoice_controller.ex
index 3eff868..39098f6 100644
--- a/lib/clinicpro_web/controllers/invoice_controller.ex
+++ b/lib/clinicpro_web/controllers/invoice_controller.ex
@@ -4,6 +4,8 @@ defmodule ClinicproWeb.InvoiceController do
   alias Clinicpro.AdminBypass.{Invoice, Patient, Doctor, Appointment}
   alias Clinicpro.MPesa
   alias Phoenix.PubSub
+  alias Clinicpro.Invoices
+  alias Clinicpro.MPesa.InvoiceIntegration
 
   # List invoices for a clinic
   def index(conn, %{"clinic_id" => clinic_id} = params) do
@@ -50,10 +52,18 @@ defmodule ClinicproWeb.InvoiceController do
         |> put_flash(:error, "Invoice not found")
         |> redirect(to: ~p"/admin_bypass/clinics/#{clinic_id}/invoices")
       else
+        # Get M-Pesa transactions for this invoice
+        transactions = InvoiceIntegration.get_invoice_transactions(id, clinic_id)
+
+        # Get payment status
+        payment_status = InvoiceIntegration.get_invoice_payment_status(id, clinic_id)
+
         render(conn, :show,
           clinic_id: clinic_id,
           clinic_name: clinic.name,
-          invoice: invoice
+          invoice: invoice,
+          transactions: transactions,
+          payment_status: payment_status
         )
       end
     end
@@ -250,7 +260,7 @@ defmodule ClinicproWeb.InvoiceController do
               conn
               |> put_flash(
                 :info,
-                "Payment initiated. Please check your phone to complete the transaction."
+                "Payment initiated. Please check your phone to complete the payment."
               )
               |> redirect(to: ~p"/admin_bypass/clinics/#{clinic_id}/invoices/#{invoice.id}")
 
@@ -281,6 +291,31 @@ defmodule ClinicproWeb.InvoiceController do
     )
   end
 
+  # Initiates an STK Push payment for an invoice.
+  def initiate_payment(conn, %{"clinic_id" => clinic_id, "id" => id, "phone_number" => phone_number}) do
+    with {:ok, _clinic} <- get_clinic(clinic_id),
+         invoice <- Invoice.get_invoice!(id) do
+      # Check if invoice belongs to this clinic
+      if invoice.clinic_id != clinic_id do
+        conn
+        |> put_flash(:error, "Invoice not found")
+        |> redirect(to: ~p"/admin_bypass/clinics/#{clinic_id}/invoices")
+      else
+        case InvoiceIntegration.initiate_stk_push_for_invoice(id, clinic_id, phone_number) do
+          {:ok, transaction} ->
+            conn
+            |> put_flash(:info, "Payment request sent to #{phone_number}. Please check your phone to complete the payment.")
+            |> redirect(to: ~p"/admin_bypass/clinics/#{clinic_id}/invoices/#{invoice.id}")
+
+          {:error, reason} ->
+            conn
+            |> put_flash(:error, "Failed to initiate payment: #{reason}")
+            |> redirect(to: ~p"/admin_bypass/clinics/#{clinic_id}/invoices/#{invoice.id}")
+        end
+      end
+    end
+  end
+
   # Private functions
 
   defp get_clinic(clinic_id) do
diff --git a/lib/clinicpro_web/controllers/invoice_html/show.ex b/lib/clinicpro_web/controllers/invoice_html/show.ex
new file mode 100644
index 0000000..7bcadcc
--- /dev/null
+++ b/lib/clinicpro_web/controllers/invoice_html/show.ex
@@ -0,0 +1,90 @@
+defmodule ClinicproWeb.InvoiceHTML.Show do
+  use ClinicproWeb, :html
+
+  import ClinicproWeb.CoreComponents
+  import ClinicproWeb.InvoiceComponents
+
+  embed_templates "show_html/*"
+
+  def invoice_status_badge(assigns) do
+    status = assigns[:status] || "pending"
+
+    bg_color = case status do
+      "paid" -> "bg-green-100 text-green-800"
+      "pending" -> "bg-yellow-100 text-yellow-800"
+      "overdue" -> "bg-red-100 text-red-800"
+      "cancelled" -> "bg-gray-100 text-gray-800"
+      _ -> "bg-blue-100 text-blue-800"
+    end
+
+    assigns = assign(assigns, :bg_color, bg_color)
+
+    ~H"""
+    <span class={"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium #{@bg_color}"}>
+      <%= String.capitalize(@status) %>
+    </span>
+    """
+  end
+
+  def payment_section(assigns) do
+    ~H"""
+    <div class="mt-8 border-t border-gray-200 pt-6">
+      <h2 class="text-lg font-medium text-gray-900">Payment Information</h2>
+
+      <div class="mt-4 bg-white shadow overflow-hidden sm:rounded-lg">
+        <div class="px-4 py-5 sm:p-6">
+          <div class="grid grid-cols-1 gap-4">
+            <div>
+              <h3 class="text-base font-medium text-gray-900">Payment Status</h3>
+              <div class="mt-2">
+                <%= invoice_status_badge(status: @invoice.payment_status || @invoice.status) %>
+              </div>
+            </div>
+
+            <%= if @invoice.payment_date do %>
+              <div>
+                <h3 class="text-base font-medium text-gray-900">Payment Date</h3>
+                <div class="mt-2 text-sm text-gray-500">
+                  <%= Calendar.strftime(@invoice.payment_date, "%B %d, %Y at %I:%M %p") %>
+                </div>
+              </div>
+            <% end %>
+
+            <%= if @invoice.payment_reference do %>
+              <div>
+                <h3 class="text-base font-medium text-gray-900">Payment Reference</h3>
+                <div class="mt-2 text-sm text-gray-500">
+                  <%= @invoice.payment_reference %>
+                </div>
+              </div>
+            <% end %>
+
+            <%= if @invoice.payment_method do %>
+              <div>
+                <h3 class="text-base font-medium text-gray-900">Payment Method</h3>
+                <div class="mt-2 text-sm text-gray-500">
+                  <%= String.capitalize(@invoice.payment_method) %>
+                </div>
+              </div>
+            <% end %>
+
+            <%= if @invoice.status != "paid" && @invoice.status != "cancelled" do %>
+              <div class="mt-4 border-t border-gray-200 pt-4">
+                <h3 class="text-base font-medium text-gray-900">Pay Now</h3>
+                <div class="mt-2">
+                  <.live_component
+                    module={ClinicproWeb.Components.MPesaPaymentButton}
+                    id={"mpesa-payment-#{@invoice.id}"}
+                    invoice={@invoice}
+                    patient={@patient}
+                  />
+                </div>
+              </div>
+            <% end %>
+          </div>
+        </div>
+      </div>
+    </div>
+    """
+  end
+end
diff --git a/lib/clinicpro_web/controllers/invoice_html/show_html/show.html.heex b/lib/clinicpro_web/controllers/invoice_html/show_html/show.html.heex
new file mode 100644
index 0000000..26e9e78
--- /dev/null
+++ b/lib/clinicpro_web/controllers/invoice_html/show_html/show.html.heex
@@ -0,0 +1,319 @@
+<.flash_group flash={@flash} />
+
+<div class="mx-auto max-w-4xl px-4 sm:px-6 lg:px-8">
+  <div class="mt-8">
+    <div class="flex justify-between items-center">
+      <h1 class="text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate">
+        Invoice #<%= @invoice.reference_number %>
+      </h1>
+
+      <div class="flex space-x-3">
+        <.link
+          navigate={~p"/invoices/#{@invoice}/pdf"}
+          class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
+        >
+          <svg
+            class="-ml-1 mr-2 h-5 w-5 text-gray-500"
+            xmlns="http://www.w3.org/2000/svg"
+            fill="none"
+            viewBox="0 0 24 24"
+            stroke="currentColor"
+          >
+            <path
+              stroke-linecap="round"
+              stroke-linejoin="round"
+              stroke-width="2"
+              d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z"
+            />
+          </svg>
+          Download PDF
+        </.link>
+
+        <%= if @invoice.status != "paid" && @invoice.status != "cancelled" do %>
+          <.link
+            navigate={~p"/invoices/#{@invoice}/edit"}
+            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
+          >
+            <svg
+              class="-ml-1 mr-2 h-5 w-5"
+              xmlns="http://www.w3.org/2000/svg"
+              fill="none"
+              viewBox="0 0 24 24"
+              stroke="currentColor"
+            >
+              <path
+                stroke-linecap="round"
+                stroke-linejoin="round"
+                stroke-width="2"
+                d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
+              />
+            </svg>
+            Edit Invoice
+          </.link>
+        <% end %>
+      </div>
+    </div>
+
+    <div class="mt-6 bg-white shadow overflow-hidden sm:rounded-lg">
+      <div class="px-4 py-5 sm:px-6 flex justify-between items-center">
+        <div>
+          <h3 class="text-lg leading-6 font-medium text-gray-900">
+            Invoice Details
+          </h3>
+          <p class="mt-1 max-w-2xl text-sm text-gray-500">
+            <%= Calendar.strftime(@invoice.date, "%B %d, %Y") %>
+          </p>
+        </div>
+        <div>
+          <%= invoice_status_badge(status: @invoice.status) %>
+        </div>
+      </div>
+
+      <div class="border-t border-gray-200 px-4 py-5 sm:px-6">
+        <dl class="grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2">
+          <div class="sm:col-span-1">
+            <dt class="text-sm font-medium text-gray-500">
+              Clinic
+            </dt>
+            <dd class="mt-1 text-sm text-gray-900">
+              <%= @clinic.name %>
+            </dd>
+          </div>
+
+          <div class="sm:col-span-1">
+            <dt class="text-sm font-medium text-gray-500">
+              Due Date
+            </dt>
+            <dd class="mt-1 text-sm text-gray-900">
+              <%= Calendar.strftime(@invoice.due_date, "%B %d, %Y") %>
+            </dd>
+          </div>
+
+          <div class="sm:col-span-1">
+            <dt class="text-sm font-medium text-gray-500">
+              Patient
+            </dt>
+            <dd class="mt-1 text-sm text-gray-900">
+              <%= @patient.first_name %> <%= @patient.last_name %>
+            </dd>
+          </div>
+
+          <%= if @invoice.appointment_id do %>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">
+                Appointment
+              </dt>
+              <dd class="mt-1 text-sm text-gray-900">
+                <.link
+                  navigate={~p"/appointments/#{@invoice.appointment_id}"}
+                  class="text-indigo-600 hover:text-indigo-900"
+                >
+                  View Appointment
+                </.link>
+              </dd>
+            </div>
+          <% end %>
+        </dl>
+      </div>
+    </div>
+
+    <div class="mt-8">
+      <h2 class="text-lg font-medium text-gray-900">Invoice Items</h2>
+
+      <div class="mt-4 flex flex-col">
+        <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
+          <div class="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
+            <div class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg">
+              <table class="min-w-full divide-y divide-gray-300">
+                <thead class="bg-gray-50">
+                  <tr>
+                    <th
+                      scope="col"
+                      class="py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-6"
+                    >
+                      Description
+                    </th>
+                    <th
+                      scope="col"
+                      class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900"
+                    >
+                      Quantity
+                    </th>
+                    <th
+                      scope="col"
+                      class="px-3 py-3.5 text-left text-sm font-semibold text-gray-900"
+                    >
+                      Unit Price
+                    </th>
+                    <th
+                      scope="col"
+                      class="px-3 py-3.5 text-right text-sm font-semibold text-gray-900"
+                    >
+                      Amount
+                    </th>
+                  </tr>
+                </thead>
+                <tbody class="divide-y divide-gray-200 bg-white">
+                  <%= for item <- @invoice.items do %>
+                    <tr>
+                      <td class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 sm:pl-6">
+                        <%= item.description %>
+                      </td>
+                      <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
+                        <%= item.quantity %>
+                      </td>
+                      <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500">
+                        <%= format_currency(item.unit_price) %>
+                      </td>
+                      <td class="whitespace-nowrap px-3 py-4 text-sm text-gray-500 text-right">
+                        <%= format_currency(item.quantity * item.unit_price) %>
+                      </td>
+                    </tr>
+                  <% end %>
+                  <!-- Subtotal -->
+                  <tr class="bg-gray-50">
+                    <td
+                      colspan="3"
+                      class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 text-right sm:pl-6"
+                    >
+                      Subtotal
+                    </td>
+                    <td class="whitespace-nowrap px-3 py-4 text-sm font-medium text-gray-900 text-right">
+                      <%= format_currency(@invoice.subtotal) %>
+                    </td>
+                  </tr>
+                  <!-- Tax -->
+                  <%= if @invoice.tax_amount && @invoice.tax_amount > 0 do %>
+                    <tr class="bg-gray-50">
+                      <td
+                        colspan="3"
+                        class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 text-right sm:pl-6"
+                      >
+                        Tax (<%= @invoice.tax_rate %>%)
+                      </td>
+                      <td class="whitespace-nowrap px-3 py-4 text-sm font-medium text-gray-900 text-right">
+                        <%= format_currency(@invoice.tax_amount) %>
+                      </td>
+                    </tr>
+                  <% end %>
+                  <!-- Discount -->
+                  <%= if @invoice.discount_amount && @invoice.discount_amount > 0 do %>
+                    <tr class="bg-gray-50">
+                      <td
+                        colspan="3"
+                        class="whitespace-nowrap py-4 pl-4 pr-3 text-sm font-medium text-gray-900 text-right sm:pl-6"
+                      >
+                        Discount
+                        <%= if @invoice.discount_type == "percentage" do %>
+                          (<%= @invoice.discount_value %>%)
+                        <% end %>
+                      </td>
+                      <td class="whitespace-nowrap px-3 py-4 text-sm font-medium text-gray-900 text-right">
+                        -<%= format_currency(@invoice.discount_amount) %>
+                      </td>
+                    </tr>
+                  <% end %>
+                  <!-- Total -->
+                  <tr class="bg-gray-100">
+                    <td
+                      colspan="3"
+                      class="whitespace-nowrap py-4 pl-4 pr-3 text-base font-bold text-gray-900 text-right sm:pl-6"
+                    >
+                      Total
+                    </td>
+                    <td class="whitespace-nowrap px-3 py-4 text-base font-bold text-gray-900 text-right">
+                      <%= format_currency(@invoice.total) %>
+                    </td>
+                  </tr>
+                </tbody>
+              </table>
+            </div>
+          </div>
+        </div>
+      </div>
+    </div>
+
+    <%= payment_section(assigns) %>
+
+    <%= if @invoice.notes && @invoice.notes != "" do %>
+      <div class="mt-8 border-t border-gray-200 pt-6">
+        <h2 class="text-lg font-medium text-gray-900">Notes</h2>
+        <div class="mt-4 prose prose-sm max-w-none">
+          <p><%= @invoice.notes %></p>
+        </div>
+      </div>
+    <% end %>
+
+    <div class="mt-8 border-t border-gray-200 pt-6 flex justify-between">
+      <.link
+        navigate={~p"/invoices"}
+        class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
+      >
+        <svg
+          class="-ml-1 mr-2 h-5 w-5 text-gray-500"
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke="currentColor"
+        >
+          <path
+            stroke-linecap="round"
+            stroke-linejoin="round"
+            stroke-width="2"
+            d="M10 19l-7-7m0 0l7-7m-7 7h18"
+          />
+        </svg>
+        Back to Invoices
+      </.link>
+
+      <%= if @invoice.status != "paid" && @invoice.status != "cancelled" do %>
+        <div class="flex space-x-3">
+          <button
+            phx-click="mark_as_paid"
+            phx-value-id={@invoice.id}
+            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500"
+          >
+            <svg
+              class="-ml-1 mr-2 h-5 w-5"
+              xmlns="http://www.w3.org/2000/svg"
+              fill="none"
+              viewBox="0 0 24 24"
+              stroke="currentColor"
+            >
+              <path
+                stroke-linecap="round"
+                stroke-linejoin="round"
+                stroke-width="2"
+                d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
+              />
+            </svg>
+            Mark as Paid
+          </button>
+
+          <button
+            phx-click="cancel_invoice"
+            phx-value-id={@invoice.id}
+            data-confirm="Are you sure you want to cancel this invoice? This action cannot be undone."
+            class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
+          >
+            <svg
+              class="-ml-1 mr-2 h-5 w-5 text-gray-500"
+              xmlns="http://www.w3.org/2000/svg"
+              fill="none"
+              viewBox="0 0 24 24"
+              stroke="currentColor"
+            >
+              <path
+                stroke-linecap="round"
+                stroke-linejoin="round"
+                stroke-width="2"
+                d="M6 18L18 6M6 6l12 12"
+              />
+            </svg>
+            Cancel Invoice
+          </button>
+        </div>
+      <% end %>
+    </div>
+  </div>
+</div>
diff --git a/lib/clinicpro_web/controllers/mpesa_admin_controller.ex b/lib/clinicpro_web/controllers/mpesa_admin_controller.ex
index 2ba3771..4ca1525 100644
--- a/lib/clinicpro_web/controllers/mpesa_admin_controller.ex
+++ b/lib/clinicpro_web/controllers/mpesa_admin_controller.ex
@@ -1,256 +1,423 @@
 defmodule ClinicproWeb.MPesaAdminController do
   use ClinicproWeb, :controller
 
-  alias Clinicpro.MPesa
   alias Clinicpro.MPesa.Config
   alias Clinicpro.MPesa.Transaction
-  alias Clinicpro.Repo
+  alias Clinicpro.MPesa.CallbackLog
+  alias Clinicpro.MPesa
+
+  @doc """
+  Renders the M-Pesa admin dashboard with transaction statistics.
+  """
+  def index(conn, _params) do
+    clinic_id = get_clinic_id(conn)
 
-  plug :require_admin
+    # Get active configuration
+    config = case Config.get_active_config(clinic_id) do
+      {:ok, config} -> config
+      {:error, _} -> nil
+    end
+
+    # Get transaction statistics
+    stats = %{
+      total_transactions: Transaction.count_by_clinic(clinic_id),
+      completed_transactions: Transaction.count_by_clinic_and_status(clinic_id, "completed"),
+      pending_transactions: Transaction.count_by_clinic_and_status(clinic_id, "pending"),
+      failed_transactions: Transaction.count_by_clinic_and_status(clinic_id, "failed"),
+      total_amount: Transaction.sum_amount_by_clinic_and_status(clinic_id, "completed")
+    }
+
+    # Get recent transactions
+    recent_transactions = Transaction.list_by_clinic(clinic_id, limit: 10)
+
+    render(conn, "index.html",
+      config: config,
+      stats: stats,
+      recent_transactions: recent_transactions
+    )
+  end
 
   @doc """
-  Lists M-Pesa configurations for a clinic.
+  Renders the M-Pesa configuration form.
   """
-  def index(conn, %{"clinic_id" => clinic_id}) do
-    with {:ok, clinic} <- get_clinic(clinic_id) do
-      config = Repo.get_by(Config, clinic_id: clinic_id)
-
-      # Get recent transactions for the dashboard
-      recent_transactions =
-        if config do
-          Transaction.list_for_clinic(clinic_id, 1, 5)
-        else
-          []
-        end
+  def new_config(conn, _params) do
+    clinic_id = get_clinic_id(conn)
+    changeset = Config.changeset(%Config{clinic_id: clinic_id}, %{})
 
-      # Get transaction stats
-      stats = Transaction.get_stats_for_clinic(clinic_id)
+    render(conn, "new_config.html", changeset: changeset)
+  end
+
+  @doc """
+  Creates a new M-Pesa configuration.
+  """
+  def create_config(conn, %{"config" => config_params}) do
+    clinic_id = get_clinic_id(conn)
+    config_params = Map.put(config_params, "clinic_id", clinic_id)
 
-      render(conn, "index.html",
-        clinic_id: clinic_id,
-        clinic_name: clinic.name,
-        config: config,
-        recent_transactions: recent_transactions,
-        stats: stats
-      )
+    case Config.create(config_params) do
+      {:ok, config} ->
+        # Activate the new configuration
+        {:ok, _} = Config.activate(config.id)
+
+        conn
+        |> put_flash(:info, "M-Pesa configuration created successfully.")
+        |> redirect(to: Routes.mpesa_admin_path(conn, :index))
+
+      {:error, changeset} ->
+        render(conn, "new_config.html", changeset: changeset)
     end
   end
 
   @doc """
-  Shows the form to create a new M-Pesa configuration.
+  Renders the edit form for an M-Pesa configuration.
   """
-  def new(conn, %{"clinic_id" => clinic_id}) do
-    with {:ok, clinic} <- get_clinic(clinic_id) do
-      changeset = Config.changeset(%Config{}, %{})
-
-      render(conn, "new.html",
-        clinic_id: clinic_id,
-        clinic_name: clinic.name,
-        changeset: changeset
-      )
+  def edit_config(conn, %{"id" => id}) do
+    clinic_id = get_clinic_id(conn)
+    config = Config.get_by_id(id)
+
+    # Ensure the config belongs to this clinic
+    if config && config.clinic_id == clinic_id do
+      changeset = Config.changeset(config, %{})
+      render(conn, "edit_config.html", config: config, changeset: changeset)
+    else
+      conn
+      |> put_flash(:error, "Configuration not found.")
+      |> redirect(to: Routes.mpesa_admin_path(conn, :index))
     end
   end
 
   @doc """
-  Creates a new M-Pesa configuration.
+  Updates an M-Pesa configuration.
   """
-  def create(conn, %{"clinic_id" => clinic_id, "config" => config_params}) do
-    with {:ok, clinic} <- get_clinic(clinic_id) do
-      config_params = Map.put(config_params, "clinic_id", clinic_id)
+  def update_config(conn, %{"id" => id, "config" => config_params}) do
+    clinic_id = get_clinic_id(conn)
+    config = Config.get_by_id(id)
 
-      case Config.save_config(config_params) do
+    # Ensure the config belongs to this clinic
+    if config && config.clinic_id == clinic_id do
+      case Config.update(config, config_params) do
         {:ok, _config} ->
           conn
-          |> put_flash(:info, "M-Pesa configuration created successfully.")
-          |> redirect(to: Routes.mpesa_admin_path(conn, :index, clinic_id))
-
-        {:error, %Ecto.Changeset{} = changeset} ->
-          render(conn, "new.html",
-            clinic_id: clinic_id,
-            clinic_name: clinic.name,
-            changeset: changeset
-          )
+          |> put_flash(:info, "M-Pesa configuration updated successfully.")
+          |> redirect(to: Routes.mpesa_admin_path(conn, :index))
+
+        {:error, changeset} ->
+          render(conn, "edit_config.html", config: config, changeset: changeset)
       end
+    else
+      conn
+      |> put_flash(:error, "Configuration not found.")
+      |> redirect(to: Routes.mpesa_admin_path(conn, :index))
     end
   end
 
   @doc """
-  Shows the form to edit an M-Pesa configuration.
+  Activates an M-Pesa configuration.
   """
-  def edit(conn, %{"clinic_id" => clinic_id, "id" => id}) do
-    with {:ok, clinic} <- get_clinic(clinic_id),
-         config <- Repo.get!(Config, id) do
-      changeset = Config.changeset(config, %{})
+  def activate_config(conn, %{"id" => id}) do
+    clinic_id = get_clinic_id(conn)
+    config = Config.get_by_id(id)
+
+    # Ensure the config belongs to this clinic
+    if config && config.clinic_id == clinic_id do
+      case Config.activate(id) do
+        {:ok, _} ->
+          conn
+          |> put_flash(:info, "M-Pesa configuration activated successfully.")
+          |> redirect(to: Routes.mpesa_admin_path(conn, :index))
 
-      render(conn, "edit.html",
-        clinic_id: clinic_id,
-        clinic_name: clinic.name,
-        config: config,
-        changeset: changeset
-      )
+        {:error, _} ->
+          conn
+          |> put_flash(:error, "Failed to activate configuration.")
+          |> redirect(to: Routes.mpesa_admin_path(conn, :index))
+      end
+    else
+      conn
+      |> put_flash(:error, "Configuration not found.")
+      |> redirect(to: Routes.mpesa_admin_path(conn, :index))
     end
   end
 
   @doc """
-  Updates an M-Pesa configuration.
+  Deactivates an M-Pesa configuration.
   """
-  def update(conn, %{"clinic_id" => clinic_id, "id" => id, "config" => config_params}) do
-    with {:ok, clinic} <- get_clinic(clinic_id),
-         config <- Repo.get!(Config, id) do
-      case Config.save_config(config, config_params) do
-        {:ok, _config} ->
+  def deactivate_config(conn, %{"id" => id}) do
+    clinic_id = get_clinic_id(conn)
+    config = Config.get_by_id(id)
+
+    # Ensure the config belongs to this clinic
+    if config && config.clinic_id == clinic_id do
+      case Config.deactivate(id) do
+        {:ok, _} ->
           conn
-          |> put_flash(:info, "M-Pesa configuration updated successfully.")
-          |> redirect(to: Routes.mpesa_admin_path(conn, :index, clinic_id))
-
-        {:error, %Ecto.Changeset{} = changeset} ->
-          render(conn, "edit.html",
-            clinic_id: clinic_id,
-            clinic_name: clinic.name,
-            config: config,
-            changeset: changeset
-          )
+          |> put_flash(:info, "M-Pesa configuration deactivated successfully.")
+          |> redirect(to: Routes.mpesa_admin_path(conn, :index))
+
+        {:error, _} ->
+          conn
+          |> put_flash(:error, "Failed to deactivate configuration.")
+          |> redirect(to: Routes.mpesa_admin_path(conn, :index))
       end
+    else
+      conn
+      |> put_flash(:error, "Configuration not found.")
+      |> redirect(to: Routes.mpesa_admin_path(conn, :index))
     end
   end
 
   @doc """
-  Deletes an M-Pesa configuration.
+  Lists all transactions for the clinic.
   """
-  def delete(conn, %{"clinic_id" => clinic_id, "id" => id}) do
-    with {:ok, _clinic} <- get_clinic(clinic_id),
-         config <- Repo.get!(Config, id) do
-      {:ok, _config} = Repo.delete(config)
+  def list_transactions(conn, params) do
+    clinic_id = get_clinic_id(conn)
+
+    # Parse filter parameters
+    filters = %{
+      status: Map.get(params, "status"),
+      invoice_id: Map.get(params, "invoice_id"),
+      patient_id: Map.get(params, "patient_id"),
+      from_date: parse_date(Map.get(params, "from_date")),
+      to_date: parse_date(Map.get(params, "to_date"))
+    }
+
+    # Get paginated transactions
+    page = params["page"] || "1"
+    per_page = params["per_page"] || "20"
+
+    {transactions, pagination} = Transaction.paginate_by_clinic(
+      clinic_id,
+      filters,
+      String.to_integer(page),
+      String.to_integer(per_page)
+    )
+
+    render(conn, "transactions.html",
+      transactions: transactions,
+      pagination: pagination,
+      filters: filters
+    )
+  end
 
-      conn
-      |> put_flash(:info, "M-Pesa configuration deleted successfully.")
-      |> redirect(to: Routes.mpesa_admin_path(conn, :index, clinic_id))
+  @doc """
+  Shows details of a specific transaction.
+  """
+  def show_transaction(conn, %{"id" => id}) do
+    clinic_id = get_clinic_id(conn)
+
+    case Transaction.get_by_id_and_clinic(id, clinic_id) do
+      nil ->
+        conn
+        |> put_flash(:error, "Transaction not found.")
+        |> redirect(to: Routes.mpesa_admin_path(conn, :list_transactions))
+
+      transaction ->
+        render(conn, "transaction_details.html", transaction: transaction)
     end
   end
 
   @doc """
-  Lists M-Pesa transactions for a clinic with filtering options.
+  Initiates a manual STK Push for testing purposes.
   """
-  def transactions(conn, %{"clinic_id" => clinic_id} = params) do
-    with {:ok, clinic} <- get_clinic(clinic_id) do
-      page = Map.get(params, "page", "1") |> String.to_integer()
-      per_page = 20
-
-      # Extract filter parameters
-      status = Map.get(params, "status")
-      type = Map.get(params, "type")
-
-      # Apply filters
-      filters = %{}
-      filters = if status, do: Map.put(filters, :status, status), else: filters
-      filters = if type, do: Map.put(filters, :type, type), else: filters
-
-      transactions = Transaction.list_for_clinic(clinic_id, page, per_page, filters)
-      total_count = Transaction.count_for_clinic(clinic_id, filters)
-
-      render(conn, "transactions.html",
-        clinic_id: clinic_id,
-        clinic_name: clinic.name,
-        transactions: transactions,
-        page: page,
-        per_page: per_page,
-        total_count: total_count,
-        status: status,
-        type: type
-      )
+  def initiate_test_stk_push(conn, %{"phone_number" => phone_number, "amount" => amount}) do
+    clinic_id = get_clinic_id(conn)
+
+    # Create a test invoice ID
+    invoice_id = "TEST-#{System.os_time(:second)}"
+    patient_id = "TEST-PATIENT"
+
+    case MPesa.initiate_stk_push(clinic_id, invoice_id, patient_id, phone_number, String.to_float(amount)) do
+      {:ok, transaction} ->
+        conn
+        |> put_flash(:info, "STK Push initiated successfully. Checkout Request ID: #{transaction.checkout_request_id}")
+        |> redirect(to: Routes.mpesa_admin_path(conn, :index))
+
+      {:error, reason} ->
+        conn
+        |> put_flash(:error, "Failed to initiate STK Push: #{reason}")
+        |> redirect(to: Routes.mpesa_admin_path(conn, :index))
     end
   end
 
   @doc """
-  Shows details of a specific M-Pesa transaction.
+  Renders the form for initiating a test STK Push.
   """
-  def transaction_details(conn, %{"clinic_id" => clinic_id, "id" => id}) do
-    with {:ok, clinic} <- get_clinic(clinic_id),
-         transaction <- Repo.get!(Transaction, id) do
-      render(conn, "transaction_details.html",
-        clinic_id: clinic_id,
-        clinic_name: clinic.name,
-        transaction: transaction
-      )
+  def new_test_stk_push(conn, _params) do
+    render(conn, "test_stk_push.html")
+  end
+
+  @doc """
+  Renders the configuration details page.
+  """
+  def configuration_details(conn, %{"id" => id}) do
+    clinic_id = get_clinic_id(conn)
+    config = Config.get_by_id(id)
+    
+    # Ensure the config belongs to this clinic
+    if config && config.clinic_id == clinic_id do
+      changeset = Config.changeset(config, %{})
+      render(conn, "configuration_details.html", config: config, changeset: changeset)
+    else
+      conn
+      |> put_flash(:error, "Configuration not found.")
+      |> redirect(to: Routes.mpesa_admin_path(conn, :index))
     end
   end
 
   @doc """
-  Registers C2B URLs with M-Pesa.
+  Renders the callback logs page with filtering and pagination.
   """
-  def register_urls(conn, %{"clinic_id" => clinic_id}) do
-    with {:ok, _clinic} <- get_clinic(clinic_id),
-         config <- Repo.get_by!(Config, clinic_id: clinic_id) do
-      case MPesa.register_c2b_urls(config) do
-        {:ok, response} ->
-          conn
-          |> put_flash(:info, "C2B URLs registered successfully with M-Pesa.")
-          |> redirect(to: Routes.mpesa_admin_path(conn, :index, clinic_id))
+  def callback_logs(conn, params) do
+    clinic_id = get_clinic_id(conn)
+    
+    # Parse filter parameters
+    filters = %{
+      type: Map.get(params, "type"),
+      status: Map.get(params, "status"),
+      from_date: parse_date(Map.get(params, "from_date")),
+      to_date: parse_date(Map.get(params, "to_date"))
+    }
+    
+    # Get paginated callback logs
+    page = params["page"] || "1"
+    per_page = params["per_page"] || "20"
+    
+    {callback_logs, pagination} = CallbackLog.paginate_by_clinic(
+      clinic_id,
+      filters,
+      String.to_integer(page),
+      String.to_integer(per_page)
+    )
+    
+    render(conn, "callback_logs.html",
+      callback_logs: callback_logs,
+      pagination: pagination,
+      filters: filters
+    )
+  end
 
-        {:error, reason} ->
-          conn
-          |> put_flash(:error, "Failed to register URLs: #{inspect(reason)}")
-          |> redirect(to: Routes.mpesa_admin_path(conn, :index, clinic_id))
-      end
+  @doc """
+  Shows details of a specific callback log.
+  """
+  def callback_details(conn, %{"id" => id}) do
+    clinic_id = get_clinic_id(conn)
+    
+    case CallbackLog.get_by_id_and_clinic(id, clinic_id) do
+      nil ->
+        conn
+        |> put_flash(:error, "Callback log not found.")
+        |> redirect(to: Routes.mpesa_admin_path(conn, :callback_logs))
+        
+      callback_log ->
+        # Get related transaction if available
+        transaction = if callback_log.transaction_id do
+          Transaction.get_by_id_and_clinic(callback_log.transaction_id, clinic_id)
+        else
+          nil
+        end
+        
+        render(conn, "callback_details.html", callback_log: callback_log, transaction: transaction)
     end
   end
 
   @doc """
-  Shows the form to test STK Push.
+  Renders the form for testing STK Push.
   """
-  def test_stk_push_form(conn, %{"clinic_id" => clinic_id}) do
-    with {:ok, clinic} <- get_clinic(clinic_id),
-         config <- Repo.get_by!(Config, clinic_id: clinic_id) do
-      render(conn, "test_stk_push.html",
-        clinic_id: clinic_id,
-        clinic_name: clinic.name,
-        config: config
-      )
+  def test_stk_push_form(conn, _params) do
+    clinic_id = get_clinic_id(conn)
+    
+    # Get recent test transactions
+    recent_tests = Transaction.list_by_clinic(clinic_id, limit: 5)
+                   |> Enum.filter(fn t -> String.starts_with?(t.invoice_id || "", "TEST-") end)
+    
+    render(conn, "test_stk_push.html", recent_tests: recent_tests)
+  end
+
+  @doc """
+  Processes an STK Push test request.
+  """
+  def test_stk_push(conn, %{"test" => params}) do
+    clinic_id = get_clinic_id(conn)
+    phone_number = params["phone_number"]
+    amount = String.to_float(params["amount"] || "0.0")
+    reference = params["reference"] || "Test Payment"
+    description = params["description"] || "Test STK Push"
+    
+    # Create a test invoice ID
+    invoice_id = "TEST-#{reference}-#{System.os_time(:second)}"
+    patient_id = "TEST-PATIENT"
+    
+    case MPesa.stk_push(clinic_id, invoice_id, patient_id, phone_number, amount, description) do
+      {:ok, transaction} ->
+        conn
+        |> put_flash(:info, "STK Push initiated successfully. Checkout Request ID: #{transaction.checkout_request_id}")
+        |> redirect(to: Routes.mpesa_admin_path(conn, :test_stk_push_form))
+        
+      {:error, reason} ->
+        conn
+        |> put_flash(:error, "Failed to initiate STK Push: #{reason}")
+        |> redirect(to: Routes.mpesa_admin_path(conn, :test_stk_push_form))
     end
   end
 
   @doc """
-  Processes the STK Push test.
+  Registers callback URLs with Safaricom.
   """
-  def test_stk_push(conn, %{"clinic_id" => clinic_id, "stk_push" => stk_params}) do
-    with {:ok, _clinic} <- get_clinic(clinic_id),
-         config <- Repo.get_by!(Config, clinic_id: clinic_id) do
-      phone = Map.get(stk_params, "phone")
-      amount = Map.get(stk_params, "amount") |> String.to_integer()
-      reference = Map.get(stk_params, "reference", "Test Payment")
-      description = Map.get(stk_params, "description", "Test STK Push")
-
-      case MPesa.initiate_stk_push(config, phone, amount, reference, description) do
-        {:ok, transaction} ->
+  def register_urls(conn, %{"id" => id}) do
+    clinic_id = get_clinic_id(conn)
+    config = Config.get_by_id(id)
+    
+    # Ensure the config belongs to this clinic
+    if config && config.clinic_id == clinic_id do
+      case MPesa.register_c2b_urls(clinic_id) do
+        {:ok, _response} ->
           conn
-          |> put_flash(:info, "STK Push initiated successfully. Check your phone.")
-          |> redirect(
-            to: Routes.mpesa_admin_path(conn, :transaction_details, clinic_id, transaction.id)
-          )
-
+          |> put_flash(:info, "Callback URLs registered successfully.")
+          |> redirect(to: Routes.mpesa_admin_path(conn, :configuration_details, id))
+          
         {:error, reason} ->
           conn
-          |> put_flash(:error, "Failed to initiate STK Push: #{inspect(reason)}")
-          |> redirect(to: Routes.mpesa_admin_path(conn, :test_stk_push_form, clinic_id))
+          |> put_flash(:error, "Failed to register callback URLs: #{reason}")
+          |> redirect(to: Routes.mpesa_admin_path(conn, :configuration_details, id))
       end
+    else
+      conn
+      |> put_flash(:error, "Configuration not found.")
+      |> redirect(to: Routes.mpesa_admin_path(conn, :index))
     end
   end
 
-  # Private functions
-
-  defp get_clinic(clinic_id) do
-    case Repo.get(Clinicpro.AdminBypass.Doctor, clinic_id) do
+  @doc """
+  Shows details of a specific transaction.
+  """
+  def transaction_details(conn, %{"id" => id}) do
+    clinic_id = get_clinic_id(conn)
+    
+    case Transaction.get_by_id_and_clinic(id, clinic_id) do
       nil ->
-        {:error, :not_found}
-
-      clinic ->
-        {:ok, clinic}
+        conn
+        |> put_flash(:error, "Transaction not found.")
+        |> redirect(to: Routes.mpesa_admin_path(conn, :transactions))
+        
+      transaction ->
+        # Get related callbacks
+        callbacks = CallbackLog.list_by_transaction(id, clinic_id)
+        render(conn, "transaction_details.html", transaction: transaction, callbacks: callbacks)
     end
   end
 
-  defp require_admin(conn, _opts) do
-    # In a real app, ENSURE current user is an admin. IMPORTANT!
-    # For now, we'll just pass through
-    conn
+  # Private functions
+
+  defp get_clinic_id(conn) do
+    # Get the clinic ID from the current user's session
+    # This is a placeholder - implement based on your authentication system
+    conn.assigns.current_user.clinic_id
+  end
+
+  defp parse_date(nil), do: nil
+  defp parse_date(date_string) do
+    case Date.from_iso8601(date_string) do
+      {:ok, date} -> date
+      _ -> nil
+    end
   end
 end
diff --git a/lib/clinicpro_web/controllers/mpesa_callback_controller.ex b/lib/clinicpro_web/controllers/mpesa_callback_controller.ex
index 05c93f0..2bb4137 100644
--- a/lib/clinicpro_web/controllers/mpesa_callback_controller.ex
+++ b/lib/clinicpro_web/controllers/mpesa_callback_controller.ex
@@ -1,97 +1,218 @@
 defmodule ClinicproWeb.MPesaCallbackController do
+  @moduledoc """
+  Controller for handling M-Pesa payment callbacks.
+  Supports multi-tenant architecture with clinic-specific callback handling.
+  """
+
   use ClinicproWeb, :controller
 
-  alias Clinicpro.MPesa
+  alias Clinicpro.MPesa.Callback
+  alias Clinicpro.Invoices.PaymentProcessor
+
   require Logger
 
   @doc """
-  Handles STK Push callbacks from M-Pesa.
+  Handle STK Push callbacks from M-Pesa.
+  Updates transaction and invoice status based on the payment result.
   """
-  def stk_callback(conn, _params) do
-    with {:ok, body, _conn} <- read_body(conn),
-         {:ok, payload} <- Jason.decode(body) do
-      # Process the callback asynchronously
-      Task.start(fn ->
-        case MPesa.process_stk_callback(payload) do
-          {:ok, _transaction} ->
-            Logger.info("Successfully processed STK Push callback")
+  def stk_callback(conn, %{"Body" => body} = params) do
+    # Log the callback for debugging
+    Logger.info("Received M-Pesa STK callback: #{inspect(params)}")
 
-          {:error, reason} ->
-            Logger.error("Failed to process STK Push callback: #{inspect(reason)}")
-        end
-      end)
+    # Extract the clinic ID from the callback URL path
+    # The URL format is expected to be /api/mpesa/callbacks/:clinic_id/stk
+    clinic_id = conn.path_params["clinic_id"]
 
-      # Always respond with success to M-Pesa
-      conn
-      |> put_resp_content_type("application/json")
-      |> send_resp(200, Jason.encode!(%{ResultCode: 0, ResultDesc: "Success"}))
-    else
-      {:error, %Jason.DecodeError{}} ->
-        Logger.error("Invalid JSON in STK Push callback")
+    # Process the callback with the Callback module (handles validation and parsing)
+    case Callback.process_stk_callback(body, clinic_id) do
+      {:ok, callback_data} ->
+        # Update the transaction and invoice status
+        case PaymentProcessor.process_callback(callback_data) do
+          {:ok, %{invoice: invoice, transaction: transaction}} ->
+            # Log the successful processing
+            Logger.info("Successfully processed M-Pesa payment for invoice #{invoice.id}, transaction #{transaction.id}")
 
-        conn
-        |> put_resp_content_type("application/json")
-        |> send_resp(200, Jason.encode!(%{ResultCode: 0, ResultDesc: "Success"}))
+            # Return success response to M-Pesa
+            conn
+            |> put_status(:ok)
+            |> json(%{
+              "ResultCode" => 0,
+              "ResultDesc" => "Success"
+            })
 
-      error ->
-        Logger.error("Error reading STK Push callback body: #{inspect(error)}")
+          {:error, reason} ->
+            # Log the error
+            Logger.error("Failed to process M-Pesa callback: #{inspect(reason)}")
 
+            # Return error response to M-Pesa
+            conn
+            |> put_status(:internal_server_error)
+            |> json(%{
+              "ResultCode" => 1,
+              "ResultDesc" => "Failed to process callback"
+            })
+        end
+
+      {:error, reason} ->
+        # Log the error
+        Logger.error("Invalid M-Pesa STK callback: #{inspect(reason)}")
+
+        # Return error response to M-Pesa
         conn
-        |> put_resp_content_type("application/json")
-        |> send_resp(200, Jason.encode!(%{ResultCode: 0, ResultDesc: "Success"}))
+        |> put_status(:bad_request)
+        |> json(%{
+          "ResultCode" => 1,
+          "ResultDesc" => "Invalid callback data"
+        })
     end
   end
 
   @doc """
-  Handles C2B validation callbacks from M-Pesa.
+  Handle C2B validation requests from M-Pesa.
+  Validates that the transaction is for a valid invoice in the system.
   """
-  def c2b_validation(conn, _params) do
-    with {:ok, body, _conn} <- read_body(conn),
-         {:ok, payload} <- Jason.decode(body),
-         {:ok, response} <- MPesa.Callback.process_c2b_validation(payload) do
-      conn
-      |> put_resp_content_type("application/json")
-      |> send_resp(200, Jason.encode!(response))
-    else
-      error ->
-        Logger.error("Error processing C2B validation: #{inspect(error)}")
-
-        # Always respond with success to M-Pesa
+  def c2b_validation(conn, %{"Body" => body} = params) do
+    # Log the validation request for debugging
+    Logger.info("Received M-Pesa C2B validation request: #{inspect(params)}")
+
+    # Extract the clinic ID from the callback URL path
+    clinic_id = conn.path_params["clinic_id"]
+
+    # Process the validation request
+    case Callback.process_c2b_validation(body, clinic_id) do
+      {:ok, %{reference: reference}} ->
+        # Check if the reference number matches a valid invoice
+        case Clinicpro.Invoices.get_invoice_by_reference(reference, clinic_id) do
+          nil ->
+            # No matching invoice found
+            conn
+            |> put_status(:ok)
+            |> json(%{
+              "ResultCode" => 1,
+              "ResultDesc" => "Rejected: Invalid reference number"
+            })
+
+          _invoice ->
+            # Invoice found, accept the payment
+            conn
+            |> put_status(:ok)
+            |> json(%{
+              "ResultCode" => 0,
+              "ResultDesc" => "Accepted"
+            })
+        end
+
+      {:error, reason} ->
+        # Log the error
+        Logger.error("Invalid M-Pesa C2B validation request: #{inspect(reason)}")
+
+        # Return error response
         conn
-        |> put_resp_content_type("application/json")
-        |> send_resp(200, Jason.encode!(%{ResultCode: 0, ResultDesc: "Accepted"}))
+        |> put_status(:bad_request)
+        |> json(%{
+          "ResultCode" => 1,
+          "ResultDesc" => "Invalid validation request"
+        })
     end
   end
 
   @doc """
-  Handles C2B confirmation callbacks from M-Pesa.
+  Handle C2B confirmation callbacks from M-Pesa.
+  Updates the invoice status based on the payment confirmation.
   """
-  def c2b_confirmation(conn, _params) do
-    with {:ok, body, _conn} <- read_body(conn),
-         {:ok, payload} <- Jason.decode(body) do
-      # Process the callback asynchronously
-      Task.start(fn ->
-        case MPesa.process_c2b_callback(payload) do
-          {:ok, _transaction} ->
-            Logger.info("Successfully processed C2B callback")
+  def c2b_confirmation(conn, %{"Body" => body} = params) do
+    # Log the confirmation for debugging
+    Logger.info("Received M-Pesa C2B confirmation: #{inspect(params)}")
 
-          {:error, reason} ->
-            Logger.error("Failed to process C2B callback: #{inspect(reason)}")
+    # Extract the clinic ID from the callback URL path
+    clinic_id = conn.path_params["clinic_id"]
+
+    # Process the confirmation
+    case Callback.process_c2b_confirmation(body, clinic_id) do
+      {:ok, confirmation_data} ->
+        # Extract the reference number and amount
+        %{
+          reference: reference,
+          amount: amount,
+          transaction_id: transaction_id,
+          phone_number: phone_number
+        } = confirmation_data
+
+        # Find the invoice by reference number
+        case Clinicpro.Invoices.get_invoice_by_reference(reference, clinic_id) do
+          nil ->
+            # No matching invoice found, log the orphaned payment
+            Logger.warning("Received M-Pesa payment for unknown reference: #{reference}")
+
+            # Create an orphaned transaction record for reconciliation
+            Clinicpro.MPesa.Transaction.create_orphaned(%{
+              transaction_id: transaction_id,
+              amount: amount,
+              phone_number: phone_number,
+              reference: reference,
+              clinic_id: clinic_id,
+              status: "orphaned"
+            })
+
+            # Return success to M-Pesa (we've recorded the payment)
+            conn
+            |> put_status(:ok)
+            |> json(%{
+              "ResultCode" => 0,
+              "ResultDesc" => "Success"
+            })
+
+          invoice ->
+            # Create a transaction record and update the invoice
+            {:ok, _transaction} = Clinicpro.MPesa.Transaction.create(%{
+              transaction_id: transaction_id,
+              invoice_id: invoice.id,
+              amount: amount,
+              phone_number: phone_number,
+              reference: reference,
+              clinic_id: clinic_id,
+              status: "completed"
+            })
+
+            # Update the invoice status
+            {:ok, _updated_invoice} = Clinicpro.Invoices.update_invoice(invoice, %{
+              status: "paid",
+              payment_status: "completed",
+              payment_date: DateTime.utc_now(),
+              payment_reference: transaction_id
+            })
+
+            # If this is an appointment invoice, update the appointment status
+            if invoice.appointment_id do
+              appointment = Clinicpro.Appointments.get_appointment(invoice.appointment_id)
+
+              if appointment do
+                {:ok, _updated_appointment} = Clinicpro.Appointments.update_appointment(appointment, %{
+                  payment_status: "paid"
+                })
+              end
+            end
+
+            # Return success to M-Pesa
+            conn
+            |> put_status(:ok)
+            |> json(%{
+              "ResultCode" => 0,
+              "ResultDesc" => "Success"
+            })
         end
-      end)
 
-      # Always respond with success to M-Pesa
-      conn
-      |> put_resp_content_type("application/json")
-      |> send_resp(200, Jason.encode!(%{ResultCode: 0, ResultDesc: "Success"}))
-    else
-      error ->
-        Logger.error("Error processing C2B confirmation: #{inspect(error)}")
+      {:error, reason} ->
+        # Log the error
+        Logger.error("Invalid M-Pesa C2B confirmation: #{inspect(reason)}")
 
-        # Always respond with success to M-Pesa
+        # Return error response
         conn
-        |> put_resp_content_type("application/json")
-        |> send_resp(200, Jason.encode!(%{ResultCode: 0, ResultDesc: "Success"}))
+        |> put_status(:bad_request)
+        |> json(%{
+          "ResultCode" => 1,
+          "ResultDesc" => "Invalid confirmation data"
+        })
     end
   end
 end
diff --git a/lib/clinicpro_web/controllers/patient_auth_html/verify_otp.html.heex b/lib/clinicpro_web/controllers/patient_auth_html/verify_otp.html.heex
index 83cc3b7..94c7144 100644
--- a/lib/clinicpro_web/controllers/patient_auth_html/verify_otp.html.heex
+++ b/lib/clinicpro_web/controllers/patient_auth_html/verify_otp.html.heex
@@ -12,7 +12,7 @@
   <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
     <div class="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">
       <.form
-        :let={f}
+        :let={_f}
         for={%{}}
         action={~p"/patient/verify-otp?clinic_id=#{@clinic_id}"}
         method="post"
diff --git a/lib/clinicpro_web/controllers/patient_flow_html/confirm_details.html.heex b/lib/clinicpro_web/controllers/patient_flow_html/confirm_details.html.heex
index aca3c86..4bdeeaf 100644
--- a/lib/clinicpro_web/controllers/patient_flow_html/confirm_details.html.heex
+++ b/lib/clinicpro_web/controllers/patient_flow_html/confirm_details.html.heex
@@ -31,7 +31,7 @@
       </div>
     </div>
     
-    <.form :let={f} for={%{}} action={~p"/patient/confirm"} method="post">
+    <.form :let={_f} for={%{}} action={~p"/patient/confirm"} method="post">
       <div class="space-y-6">
         <div>
           <label class="block text-sm font-medium text-gray-700 mb-1">
diff --git a/lib/clinicpro_web/controllers/patient_flow_html/welcome.html.heex b/lib/clinicpro_web/controllers/patient_flow_html/welcome.html.heex
index 03e77e8..a683624 100644
--- a/lib/clinicpro_web/controllers/patient_flow_html/welcome.html.heex
+++ b/lib/clinicpro_web/controllers/patient_flow_html/welcome.html.heex
@@ -1,43 +1,43 @@
 <div class="container mx-auto px-4 py-8">
   <h1 class="text-3xl font-bold mb-6">Welcome to ClinicPro</h1>
-  
+
   <%= workflow_progress(assigns) %>
-  
+
   <div class="bg-white shadow-md rounded-lg p-6 mt-8">
     <h2 class="text-2xl font-semibold mb-4">Your Appointment Details</h2>
-    
+
     <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
       <div>
         <p class="text-gray-600 mb-2">Doctor</p>
         <p class="font-medium"><%= @appointment_data.doctor_name %></p>
       </div>
-      
+
       <div>
         <p class="text-gray-600 mb-2">Specialty</p>
         <p class="font-medium"><%= @appointment_data.specialty %></p>
       </div>
-      
+
       <div>
         <p class="text-gray-600 mb-2">Date</p>
         <p class="font-medium"><%= @appointment_data.date %></p>
       </div>
-      
+
       <div>
         <p class="text-gray-600 mb-2">Time</p>
         <p class="font-medium"><%= @appointment_data.time %></p>
       </div>
-      
+
       <div>
         <p class="text-gray-600 mb-2">Duration</p>
         <p class="font-medium"><%= @appointment_data.duration %> minutes</p>
       </div>
-      
+
       <div>
         <p class="text-gray-600 mb-2">Location</p>
         <p class="font-medium"><%= @appointment_data.location %></p>
       </div>
     </div>
-    
+
     <div class="mt-8 bg-blue-50 p-4 rounded-md">
       <h3 class="text-lg font-medium text-blue-800 mb-2">What to expect</h3>
       <ul class="list-disc pl-5 text-blue-700">
@@ -47,10 +47,13 @@
         <li>Prepare a list of questions you may have for the doctor</li>
       </ul>
     </div>
-    
+
     <div class="mt-8">
-      <.form :let={f} for={%{}} action={~p"/patient/welcome"} method="post">
-        <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-md">
+      <.form :let={_f} for={%{}} action={~p"/patient/welcome"} method="post">
+        <button
+          type="submit"
+          class="bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-6 rounded-md"
+        >
           Continue to Confirm Details
         </button>
       </.form>
diff --git a/lib/clinicpro_web/controllers/prescription_html/new.html.heex b/lib/clinicpro_web/controllers/prescription_html/new.html.heex
new file mode 100644
index 0000000..9556eba
--- /dev/null
+++ b/lib/clinicpro_web/controllers/prescription_html/new.html.heex
@@ -0,0 +1,196 @@
+<!-- lib/clinicpro_web/controllers/prescription_html/new.html.heex -->
+<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
+  <div class="bg-white shadow overflow-hidden sm:rounded-lg">
+    <div class="px-4 py-5 sm:px-6 bg-indigo-50">
+      <h1 class="text-xl font-semibold text-gray-900">New Prescription</h1>
+      <p class="mt-1 max-w-2xl text-sm text-gray-500">
+        Create a new prescription for <%= @appointment.patient.name %>
+      </p>
+    </div>
+
+    <div class="border-t border-gray-200 px-4 py-5 sm:p-6">
+      <.form
+        :let={f}
+        for={@changeset}
+        action={~p"/appointments/#{@appointment.id}/prescriptions"}
+        class="space-y-6"
+      >
+        <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">
+          <!-- Medication Search with Typesense -->
+          <div class="sm:col-span-6">
+            <label for="medication_name" class="block text-sm font-medium text-gray-700">
+              Medication
+            </label>
+            <div class="mt-1">
+              <.live_component
+                module={ClinicproWeb.MedicationSearchComponent}
+                id="medication-search"
+                name="prescription[medication_name]"
+                field_name="prescription[medication_name]"
+                clinic_id={@clinic_id}
+              />
+            </div>
+          </div>
+          <!-- Medication Form -->
+          <div class="sm:col-span-3">
+            <label for="medication_form" class="block text-sm font-medium text-gray-700">
+              Form
+            </label>
+            <div class="mt-1">
+              <select
+                id="medication_form"
+                name="prescription[medication_form]"
+                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
+              >
+                <option value="">Select form</option>
+                <%= for form <- @medication_forms do %>
+                  <option value={form}><%= form %></option>
+                <% end %>
+              </select>
+            </div>
+          </div>
+          <!-- Medication Strength -->
+          <div class="sm:col-span-3">
+            <label for="medication_strength" class="block text-sm font-medium text-gray-700">
+              Strength
+            </label>
+            <div class="mt-1">
+              <input
+                type="text"
+                name="prescription[medication_strength]"
+                id="medication_strength"
+                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
+                placeholder="e.g., 500mg, 250ml"
+              />
+            </div>
+          </div>
+          <!-- Dosage -->
+          <div class="sm:col-span-2">
+            <label for="dosage" class="block text-sm font-medium text-gray-700">
+              Dosage
+            </label>
+            <div class="mt-1">
+              <input
+                type="text"
+                name="prescription[dosage]"
+                id="dosage"
+                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
+                placeholder="e.g., 1 tablet, 2 teaspoons"
+                required
+              />
+            </div>
+          </div>
+          <!-- Frequency -->
+          <div class="sm:col-span-2">
+            <label for="frequency" class="block text-sm font-medium text-gray-700">
+              Frequency
+            </label>
+            <div class="mt-1">
+              <select
+                id="frequency"
+                name="prescription[frequency]"
+                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
+                required
+              >
+                <option value="">Select frequency</option>
+                <%= for frequency <- @medication_frequencies do %>
+                  <option value={frequency}><%= frequency %></option>
+                <% end %>
+              </select>
+            </div>
+          </div>
+          <!-- Duration -->
+          <div class="sm:col-span-2">
+            <label for="duration" class="block text-sm font-medium text-gray-700">
+              Duration
+            </label>
+            <div class="mt-1">
+              <select
+                id="duration"
+                name="prescription[duration]"
+                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
+                required
+              >
+                <option value="">Select duration</option>
+                <%= for duration <- @medication_durations do %>
+                  <option value={duration}><%= duration %></option>
+                <% end %>
+              </select>
+            </div>
+          </div>
+          <!-- Refills -->
+          <div class="sm:col-span-2">
+            <label for="refills" class="block text-sm font-medium text-gray-700">
+              Refills
+            </label>
+            <div class="mt-1">
+              <input
+                type="number"
+                name="prescription[refills]"
+                id="refills"
+                min="0"
+                max="12"
+                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
+                value="0"
+              />
+            </div>
+          </div>
+          <!-- Controlled Substance -->
+          <div class="sm:col-span-4">
+            <div class="flex items-start">
+              <div class="flex items-center h-5">
+                <input
+                  id="is_controlled_substance"
+                  name="prescription[is_controlled_substance]"
+                  type="checkbox"
+                  class="focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded"
+                />
+              </div>
+              <div class="ml-3 text-sm">
+                <label for="is_controlled_substance" class="font-medium text-gray-700">
+                  Controlled Substance
+                </label>
+                <p class="text-gray-500">
+                  Check if this medication is a controlled substance requiring special handling.
+                </p>
+              </div>
+            </div>
+          </div>
+          <!-- Instructions -->
+          <div class="sm:col-span-6">
+            <label for="instructions" class="block text-sm font-medium text-gray-700">
+              Instructions
+            </label>
+            <div class="mt-1">
+              <textarea
+                id="instructions"
+                name="prescription[instructions]"
+                rows="3"
+                class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md"
+                placeholder="Special instructions for the patient"
+              ></textarea>
+            </div>
+            <p class="mt-2 text-sm text-gray-500">
+              Include any special instructions for taking this medication.
+            </p>
+          </div>
+        </div>
+        <!-- Form Actions -->
+        <div class="flex justify-end space-x-3">
+          <.link
+            href={~p"/appointments/#{@appointment.id}"}
+            class="py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
+          >
+            Cancel
+          </.link>
+          <button
+            type="submit"
+            class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
+          >
+            Create Prescription
+          </button>
+        </div>
+      </.form>
+    </div>
+  </div>
+</div>
diff --git a/lib/clinicpro_web/controllers/prescription_html/show.html.heex b/lib/clinicpro_web/controllers/prescription_html/show.html.heex
new file mode 100644
index 0000000..426e900
--- /dev/null
+++ b/lib/clinicpro_web/controllers/prescription_html/show.html.heex
@@ -0,0 +1,191 @@
+<!-- lib/clinicpro_web/controllers/prescription_html/show.html.heex -->
+<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
+  <div class="bg-white shadow overflow-hidden sm:rounded-lg">
+    <div class="px-4 py-5 sm:px-6 bg-indigo-50 flex justify-between items-center">
+      <div>
+        <h1 class="text-xl font-semibold text-gray-900">Prescription Details</h1>
+        <p class="mt-1 max-w-2xl text-sm text-gray-500">
+          Prescribed by Dr. <%= @prescription.doctor.name %> on <%= Calendar.strftime(
+            @prescription.created_at,
+            "%B %d, %Y"
+          ) %>
+        </p>
+      </div>
+      <!-- Clinic Badge -->
+      <div class="rounded-full bg-indigo-100 px-3 py-1 text-sm font-medium text-indigo-800">
+        <%= @prescription.clinic.name %>
+      </div>
+    </div>
+
+    <div class="border-t border-gray-200">
+      <dl>
+        <!-- Patient Information -->
+        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
+          <dt class="text-sm font-medium text-gray-500">Patient</dt>
+          <dd class="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
+            <%= @prescription.patient.name %>
+          </dd>
+        </div>
+        <!-- Medication Information -->
+        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
+          <dt class="text-sm font-medium text-gray-500">Medication</dt>
+          <dd class="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
+            <div class="font-medium"><%= @prescription.medication_name %></div>
+            <div class="text-gray-500">
+              <%= if @prescription.medication_form do %>
+                <span class="mr-2"><%= @prescription.medication_form %></span>
+              <% end %>
+              <%= if @prescription.medication_strength do %>
+                <span><%= @prescription.medication_strength %></span>
+              <% end %>
+              <%= if @prescription.is_controlled_substance do %>
+                <span class="ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
+                  Controlled Substance
+                </span>
+              <% end %>
+            </div>
+          </dd>
+        </div>
+        <!-- Dosage Information -->
+        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
+          <dt class="text-sm font-medium text-gray-500">Dosage</dt>
+          <dd class="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
+            <%= @prescription.dosage %>
+          </dd>
+        </div>
+        <!-- Frequency Information -->
+        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
+          <dt class="text-sm font-medium text-gray-500">Frequency</dt>
+          <dd class="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
+            <%= @prescription.frequency %>
+          </dd>
+        </div>
+        <!-- Duration Information -->
+        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
+          <dt class="text-sm font-medium text-gray-500">Duration</dt>
+          <dd class="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
+            <%= @prescription.duration %>
+          </dd>
+        </div>
+        <!-- Refills Information -->
+        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
+          <dt class="text-sm font-medium text-gray-500">Refills</dt>
+          <dd class="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
+            <%= @prescription.refills || 0 %>
+          </dd>
+        </div>
+        <!-- Instructions Information -->
+        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
+          <dt class="text-sm font-medium text-gray-500">Instructions</dt>
+          <dd class="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
+            <%= if @prescription.instructions && @prescription.instructions != "" do %>
+              <%= @prescription.instructions %>
+            <% else %>
+              <span class="text-gray-500 italic">No special instructions</span>
+            <% end %>
+          </dd>
+        </div>
+        <!-- QR Code for Verification -->
+        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
+          <dt class="text-sm font-medium text-gray-500">Verification</dt>
+          <dd class="mt-1 text-sm text-gray-900 sm:col-span-2 sm:mt-0">
+            <div class="flex items-center">
+              <div class="h-24 w-24 bg-gray-100 rounded-md flex items-center justify-center">
+                <!-- QR Code would be generated here -->
+                <svg
+                  xmlns="http://www.w3.org/2000/svg"
+                  class="h-12 w-12 text-gray-400"
+                  fill="none"
+                  viewBox="0 0 24 24"
+                  stroke="currentColor"
+                >
+                  <path
+                    stroke-linecap="round"
+                    stroke-linejoin="round"
+                    stroke-width="2"
+                    d="M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z"
+                  />
+                </svg>
+              </div>
+              <div class="ml-4">
+                <p class="text-sm font-medium text-gray-900">Scan to verify</p>
+                <p class="text-sm text-gray-500">
+                  This prescription can be verified by scanning this code at any pharmacy.
+                </p>
+              </div>
+            </div>
+          </dd>
+        </div>
+      </dl>
+    </div>
+    <!-- Action Buttons -->
+    <div class="px-4 py-5 sm:px-6 flex justify-between">
+      <div>
+        <.link
+          href={~p"/appointments/#{@prescription.appointment_id}/prescriptions"}
+          class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
+        >
+          <svg
+            xmlns="http://www.w3.org/2000/svg"
+            class="-ml-1 mr-2 h-5 w-5 text-gray-500"
+            fill="none"
+            viewBox="0 0 24 24"
+            stroke="currentColor"
+          >
+            <path
+              stroke-linecap="round"
+              stroke-linejoin="round"
+              stroke-width="2"
+              d="M10 19l-7-7m0 0l7-7m-7 7h18"
+            />
+          </svg>
+          Back to Prescriptions
+        </.link>
+      </div>
+
+      <div class="flex space-x-3">
+        <.link
+          href={~p"/prescriptions/#{@prescription.id}/edit"}
+          class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
+        >
+          <svg
+            xmlns="http://www.w3.org/2000/svg"
+            class="-ml-1 mr-2 h-5 w-5 text-gray-500"
+            fill="none"
+            viewBox="0 0 24 24"
+            stroke="currentColor"
+          >
+            <path
+              stroke-linecap="round"
+              stroke-linejoin="round"
+              stroke-width="2"
+              d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"
+            />
+          </svg>
+          Edit
+        </.link>
+
+        <.link
+          href={~p"/prescriptions/#{@prescription.id}/print"}
+          class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
+        >
+          <svg
+            xmlns="http://www.w3.org/2000/svg"
+            class="-ml-1 mr-2 h-5 w-5"
+            fill="none"
+            viewBox="0 0 24 24"
+            stroke="currentColor"
+          >
+            <path
+              stroke-linecap="round"
+              stroke-linejoin="round"
+              stroke-width="2"
+              d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z"
+            />
+          </svg>
+          Print
+        </.link>
+      </div>
+    </div>
+  </div>
+</div>
diff --git a/lib/clinicpro_web/controllers/search_html/filters.html.heex b/lib/clinicpro_web/controllers/search_html/filters.html.heex
index 2bd4795..b388bd7 100644
--- a/lib/clinicpro_web/controllers/search_html/filters.html.heex
+++ b/lib/clinicpro_web/controllers/search_html/filters.html.heex
@@ -15,7 +15,7 @@
     
     <h2 class="text-xl font-semibold mb-4">Refine your search</h2>
     
-    <.form :let={f} for={%{}} action={~p"/search/filters"} method="post">
+    <.form :let={_f} for={%{}} action={~p"/search/filters"} method="post">
       <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
         <div>
           <label class="block text-sm font-medium text-gray-700 mb-2">
diff --git a/lib/clinicpro_web/controllers/search_html/index.html.heex b/lib/clinicpro_web/controllers/search_html/index.html.heex
index 12215e4..a1367a6 100644
--- a/lib/clinicpro_web/controllers/search_html/index.html.heex
+++ b/lib/clinicpro_web/controllers/search_html/index.html.heex
@@ -6,7 +6,7 @@
   <div class="bg-white shadow-md rounded-lg p-6 mt-8">
     <h2 class="text-2xl font-semibold mb-4">Find what you're looking for</h2>
     
-    <.form :let={f} for={%{}} action={~p"/search/query"} method="post">
+    <.form :let={_f} for={%{}} action={~p"/search/query"} method="post">
       <div class="flex">
         <div class="relative flex-grow">
           <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
diff --git a/lib/clinicpro_web/router.ex b/lib/clinicpro_web/router.ex
index 397fa81..e5a826d 100644
--- a/lib/clinicpro_web/router.ex
+++ b/lib/clinicpro_web/router.ex
@@ -86,18 +86,27 @@ defmodule ClinicproWeb.Router do
       # Removed duplicate pipe_through as it's already defined in the parent scope
 
       get "/", MPesaAdminController, :index
-      get "/new", MPesaAdminController, :new
-      post "/", MPesaAdminController, :create
-      get "/:id/edit", MPesaAdminController, :edit
-      put "/:id", MPesaAdminController, :update
+      get "/new", MPesaAdminController, :new_config
+      post "/", MPesaAdminController, :create_config
+      get "/:id/edit", MPesaAdminController, :edit_config
+      put "/:id", MPesaAdminController, :update_config
       delete "/:id", MPesaAdminController, :delete
-      get "/transactions", MPesaAdminController, :transactions
+      get "/transactions", MPesaAdminController, :list_transactions
       get "/transactions/:id", MPesaAdminController, :transaction_details
-
-      # New routes for STK Push testing and URL registration
+      
+      # Configuration details
+      get "/configurations/:id", MPesaAdminController, :configuration_details
+      post "/configurations/:id/activate", MPesaAdminController, :activate_config
+      post "/configurations/:id/deactivate", MPesaAdminController, :deactivate_config
+      
+      # Callback logs
+      get "/callbacks", MPesaAdminController, :callback_logs
+      get "/callbacks/:id", MPesaAdminController, :callback_details
+
+      # STK Push testing and URL registration
       get "/test-stk-push", MPesaAdminController, :test_stk_push_form
       post "/test-stk-push", MPesaAdminController, :test_stk_push
-      post "/register-urls", MPesaAdminController, :register_urls
+      post "/register-urls/:id", MPesaAdminController, :register_urls
     end
 
     # Keep ash_admin at the end for backward compatibility
@@ -249,28 +258,28 @@ defmodule ClinicproWeb.Router do
   # Patient-facing routes with versioning in path structure
   scope "/q", ClinicproWeb do
     pipe_through [:browser, :patient_auth]
-    
+
     # Payment routes
     get "/payment/:invoice_id", PaymentController, :show
     post "/payment/mpesa/initiate", PaymentController, :initiate_mpesa
     get "/payment/mpesa/status/:transaction_id", PaymentController, :check_status
-    
+
     # Appointment routes with type differentiation
     get "/appointment/:id", AppointmentController, :show
     get "/appointment/virtual/:id", AppointmentController, :virtual_link
     get "/appointment/onsite/:id", AppointmentController, :onsite_details
   end
 
-  # M-Pesa callback routes - no authentication required for callbacks from Safaricom
+  # M-Pesa callback routes with clinic-specific paths
   scope "/api/mpesa/callbacks", ClinicproWeb do
     pipe_through :api
-    
-    # STK Push callback
-    post "/stk", MPesaCallbackController, :stk_callback
-    
-    # C2B callbacks
-    post "/c2b/validation", MPesaCallbackController, :c2b_validation
-    post "/c2b/confirmation", MPesaCallbackController, :c2b_confirmation
+
+    # STK Push callback route with clinic_id parameter
+    post "/:clinic_id/stk", MPesaCallbackController, :stk_callback
+
+    # C2B validation and confirmation routes with clinic_id parameter
+    post "/:clinic_id/validation", MPesaCallbackController, :c2b_validation
+    post "/:clinic_id/confirmation", MPesaCallbackController, :c2b_confirmation
   end
 
   # JSON:API routes
diff --git a/lib/clinicpro_web/templates/invoice/payment_form.html.eex b/lib/clinicpro_web/templates/invoice/payment_form.html.eex
new file mode 100644
index 0000000..d2b27ed
--- /dev/null
+++ b/lib/clinicpro_web/templates/invoice/payment_form.html.eex
@@ -0,0 +1,128 @@
+<div class="container mx-auto px-4 py-8">
+  <div class="bg-white rounded-lg shadow-lg p-6">
+    <h1 class="text-2xl font-bold mb-6">Invoice Payment</h1>
+
+    <div class="mb-6 border-b pb-4">
+      <h2 class="text-xl font-semibold mb-2">Invoice Details</h2>
+      <div class="grid grid-cols-2 gap-4">
+        <div>
+          <p class="text-gray-600">Invoice Number</p>
+          <p class="font-medium"><%= @invoice.id %></p>
+        </div>
+        <div>
+          <p class="text-gray-600">Date</p>
+          <p class="font-medium"><%= @invoice.date %></p>
+        </div>
+        <div>
+          <p class="text-gray-600">Patient</p>
+          <p class="font-medium"><%= @invoice.patient_name %></p>
+        </div>
+        <div>
+          <p class="text-gray-600">Amount</p>
+          <p class="font-medium text-lg">KES <%= :erlang.float_to_binary(@invoice.amount, [decimals: 2]) %></p>
+        </div>
+        <div>
+          <p class="text-gray-600">Status</p>
+          <p class="font-medium" style="color: <%= if @payment_status == :paid, do: "#059669", else: if @payment_status == :partial, do: "#d97706", else: "#dc2626" %>;">
+            <%= String.upcase(to_string(@payment_status)) %>
+          </p>
+        </div>
+      </div>
+    </div>
+
+    {#if @payment_status != :paid}
+      <div class="mb-6">
+        <h2 class="text-xl font-semibold mb-4">Pay with M-Pesa</h2>
+        <p class="text-gray-600 mb-4">Enter your phone number below to receive an STK Push payment request.</p>
+
+        <form action={Routes.invoice_path(@conn, :initiate_payment, @invoice.id)} method="post" class="space-y-4">
+          <input type="hidden" name="_csrf_token" value={Plug.CSRFProtection.get_csrf_token()}>
+
+          <div>
+            <label for="phone_number" class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
+            <div class="flex">
+              <span class="inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500">
+                +
+              </span>
+              <input
+                type="text"
+                id="phone_number"
+                name="phone_number"
+                value={@default_phone}
+                placeholder="254712345678"
+                class="flex-1 min-w-0 block w-full px-3 py-2 rounded-r-md border border-gray-300 focus:ring-indigo-500 focus:border-indigo-500"
+                required
+              >
+            </div>
+            <p class="mt-1 text-sm text-gray-500">Enter your phone number in international format (e.g., 254712345678)</p>
+          </div>
+
+          <div>
+            <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
+              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z" clip-rule="evenodd" />
+              </svg>
+              Pay with M-Pesa
+            </button>
+          </div>
+        </form>
+      </div>
+    {/if}
+
+    <div>
+      <h2 class="text-xl font-semibold mb-4">Payment Transactions</h2>
+
+      {#if Enum.empty?(@transactions)}
+        <div class="bg-gray-50 p-4 rounded-md">
+          <p class="text-gray-600 text-center">No payment transactions found for this invoice.</p>
+        </div>
+      {#else}
+        <div class="overflow-x-auto">
+          <table class="min-w-full divide-y divide-gray-200">
+            <thead class="bg-gray-50">
+              <tr>
+                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
+                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
+                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
+                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Transaction ID</th>
+                <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Phone</th>
+              </tr>
+            </thead>
+            <tbody class="bg-white divide-y divide-gray-200">
+              <%= for transaction <- @transactions do %>
+                <tr>
+                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
+                    <%= transaction.inserted_at %>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
+                    KES <%= :erlang.float_to_binary(transaction.amount, [decimals: 2]) %>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap">
+                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= transaction_status_color(transaction.status) %>">
+                      <%= String.upcase(transaction.status) %>
+                    </span>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
+                    <%= transaction.transaction_id || transaction.checkout_request_id || "-" %>
+                  </td>
+                  <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
+                    <%= transaction.phone_number %>
+                  </td>
+                </tr>
+              <% end %>
+            </tbody>
+          </table>
+        </div>
+      {/if}
+    </div>
+
+    <div class="mt-6">
+      <a href={Routes.invoice_path(@conn, :index)} class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
+        </svg>
+        Back to Invoices
+      </a>
+    </div>
+  </div>
+</div>
diff --git a/lib/clinicpro_web/templates/mpesa_admin/callback_details.html.heex b/lib/clinicpro_web/templates/mpesa_admin/callback_details.html.heex
new file mode 100644
index 0000000..0cde71a
--- /dev/null
+++ b/lib/clinicpro_web/templates/mpesa_admin/callback_details.html.heex
@@ -0,0 +1,141 @@
+<div class="container mx-auto px-4 py-8">
+  <div class="bg-white rounded-lg shadow-lg p-6">
+    <div class="flex justify-between items-center mb-6">
+      <h1 class="text-2xl font-bold">Callback Details</h1>
+      <a href="<%= Routes.mpesa_admin_path(@conn, :callback_logs, @clinic_id) %>" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
+        </svg>
+        Back to Callback Logs
+      </a>
+    </div>
+
+    <div class="bg-gray-50 p-4 rounded-lg mb-6">
+      <div class="flex items-center">
+        <div class="flex-shrink-0">
+          <span class="inline-flex items-center justify-center h-12 w-12 rounded-md bg-indigo-100 text-indigo-600">
+            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
+              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4" />
+            </svg>
+          </span>
+        </div>
+        <div class="ml-4">
+          <h2 class="text-lg font-medium text-gray-900">
+            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= callback_type_class(@callback.type) %>">
+              <%= format_callback_type(@callback.type) %>
+            </span>
+            <span class="ml-2 px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= @callback.status == "success" && "bg-green-100 text-green-800" || "bg-red-100 text-red-800" %>">
+              <%= String.capitalize(@callback.status) %>
+            </span>
+          </h2>
+          <p class="text-sm text-gray-500">
+            <%= format_date_time(@callback.inserted_at) %>
+          </p>
+        </div>
+      </div>
+    </div>
+
+    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
+      <div class="bg-white overflow-hidden shadow rounded-lg">
+        <div class="px-4 py-5 sm:p-6">
+          <h3 class="text-lg font-medium text-gray-900 mb-4">Callback Information</h3>
+          <dl class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Callback ID</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @callback.id %></dd>
+            </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Type</dt>
+              <dd class="mt-1 text-sm text-gray-900">
+                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= callback_type_class(@callback.type) %>">
+                  <%= format_callback_type(@callback.type) %>
+                </span>
+              </dd>
+            </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Status</dt>
+              <dd class="mt-1 text-sm text-gray-900">
+                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= @callback.status == "success" && "bg-green-100 text-green-800" || "bg-red-100 text-red-800" %>">
+                  <%= String.capitalize(@callback.status) %>
+                </span>
+              </dd>
+            </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Reference</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @callback.reference || "Not Available" %></dd>
+            </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Received At</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= format_date_time(@callback.inserted_at) %></dd>
+            </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Shortcode</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @callback.shortcode || "Not Available" %></dd>
+            </div>
+            <%= if @callback.transaction_id do %>
+              <div class="sm:col-span-2">
+                <dt class="text-sm font-medium text-gray-500">Transaction</dt>
+                <dd class="mt-1 text-sm text-gray-900">
+                  <a href="<%= Routes.mpesa_admin_path(@conn, :transaction_details, @callback.transaction_id) %>" class="inline-flex items-center px-2.5 py-1.5 border border-transparent text-xs font-medium rounded text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
+                      <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z" clip-rule="evenodd" />
+                    </svg>
+                    View Transaction Details
+                  </a>
+                </dd>
+              </div>
+            <% end %>
+          </dl>
+        </div>
+      </div>
+
+      <div class="bg-white overflow-hidden shadow rounded-lg">
+        <div class="px-4 py-5 sm:p-6">
+          <h3 class="text-lg font-medium text-gray-900 mb-4">Processing Details</h3>
+          <dl class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Processing Time</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @callback.processing_time || "Not Available" %> ms</dd>
+            </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Response Code</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @callback.response_code || "Not Available" %></dd>
+            </div>
+            <div class="sm:col-span-2">
+              <dt class="text-sm font-medium text-gray-500">Response Description</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @callback.response_description || "Not Available" %></dd>
+            </div>
+            <div class="sm:col-span-2">
+              <dt class="text-sm font-medium text-gray-500">URL</dt>
+              <dd class="mt-1 text-sm text-gray-900 break-all"><%= @callback.url || "Not Available" %></dd>
+            </div>
+          </dl>
+        </div>
+      </div>
+    </div>
+
+    <div class="bg-white overflow-hidden shadow rounded-lg mb-6">
+      <div class="px-4 py-5 sm:p-6">
+        <h3 class="text-lg font-medium text-gray-900 mb-4">Request Payload</h3>
+        <div class="bg-gray-50 p-4 rounded-md">
+          <pre class="text-xs text-gray-700 overflow-x-auto"><%= format_json(@callback.request_payload) %></pre>
+        </div>
+      </div>
+    </div>
+
+    <div class="bg-white overflow-hidden shadow rounded-lg">
+      <div class="px-4 py-5 sm:p-6">
+        <h3 class="text-lg font-medium text-gray-900 mb-4">Response Payload</h3>
+        <div class="bg-gray-50 p-4 rounded-md">
+          <pre class="text-xs text-gray-700 overflow-x-auto"><%= format_json(@callback.response_payload) %></pre>
+        </div>
+      </div>
+    </div>
+
+    <div class="mt-6 flex justify-end">
+      <a href="<%= Routes.mpesa_admin_path(@conn, :callback_logs, @clinic_id) %>" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+        Back to Callback Logs
+      </a>
+    </div>
+  </div>
+</div>
diff --git a/lib/clinicpro_web/templates/mpesa_admin/callback_logs.html.heex b/lib/clinicpro_web/templates/mpesa_admin/callback_logs.html.heex
new file mode 100644
index 0000000..9484826
--- /dev/null
+++ b/lib/clinicpro_web/templates/mpesa_admin/callback_logs.html.heex
@@ -0,0 +1,300 @@
+<div class="container mx-auto px-4 py-8">
+  <div class="bg-white rounded-lg shadow-lg p-6">
+    <div class="flex justify-between items-center mb-6">
+      <h1 class="text-2xl font-bold">M-Pesa Callback Logs</h1>
+      <a href="<%= Routes.mpesa_admin_path(@conn, :index) %>" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
+        </svg>
+        Back to Configurations
+      </a>
+    </div>
+
+    <div class="mb-6">
+      <div class="bg-white px-4 py-5 border-b border-gray-200 sm:px-6">
+        <div class="-ml-4 -mt-2 flex items-center justify-between flex-wrap sm:flex-nowrap">
+          <div class="ml-4 mt-2">
+            <h3 class="text-lg leading-6 font-medium text-gray-900">
+              Callback Endpoints
+            </h3>
+            <p class="mt-1 text-sm text-gray-500">
+              These are the endpoints configured to receive M-Pesa callbacks.
+            </p>
+          </div>
+        </div>
+      </div>
+      <div class="bg-white shadow overflow-hidden sm:rounded-lg">
+        <div class="px-4 py-5 sm:p-6">
+          <dl class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">STK Push Callback URL</dt>
+              <dd class="mt-1 text-sm text-gray-900 flex items-center">
+                <%= @config.callback_url || "Not configured" %>
+                <button onclick="copyToClipboard('<%= @config.callback_url %>')" class="ml-2 text-gray-400 hover:text-gray-600">
+                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
+                    <path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z" />
+                    <path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z" />
+                  </svg>
+                </button>
+              </dd>
+            </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">C2B Validation URL</dt>
+              <dd class="mt-1 text-sm text-gray-900 flex items-center">
+                <%= @config.validation_url || "Not configured" %>
+                <button onclick="copyToClipboard('<%= @config.validation_url %>')" class="ml-2 text-gray-400 hover:text-gray-600">
+                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
+                    <path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z" />
+                    <path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z" />
+                  </svg>
+                </button>
+              </dd>
+            </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">C2B Confirmation URL</dt>
+              <dd class="mt-1 text-sm text-gray-900 flex items-center">
+                <%= @config.confirmation_url || "Not configured" %>
+                <button onclick="copyToClipboard('<%= @config.confirmation_url %>')" class="ml-2 text-gray-400 hover:text-gray-600">
+                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
+                    <path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z" />
+                    <path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z" />
+                  </svg>
+                </button>
+              </dd>
+            </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Base URL</dt>
+              <dd class="mt-1 text-sm text-gray-900 flex items-center">
+                <%= @config.base_url || "Not configured" %>
+                <button onclick="copyToClipboard('<%= @config.base_url %>')" class="ml-2 text-gray-400 hover:text-gray-600">
+                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
+                    <path d="M8 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z" />
+                    <path d="M6 3a2 2 0 00-2 2v11a2 2 0 002 2h8a2 2 0 002-2V5a2 2 0 00-2-2 3 3 0 01-3 3H9a3 3 0 01-3-3z" />
+                  </svg>
+                </button>
+              </dd>
+            </div>
+          </dl>
+        </div>
+      </div>
+    </div>
+
+    <!-- Filter Form -->
+    <div class="bg-white shadow px-4 py-5 sm:rounded-lg sm:p-6 mb-6">
+      <div class="md:grid md:grid-cols-3 md:gap-6">
+        <div class="md:col-span-1">
+          <h3 class="text-lg font-medium leading-6 text-gray-900">Filter Callbacks</h3>
+          <p class="mt-1 text-sm text-gray-500">
+            Use these filters to narrow down the callback logs.
+          </p>
+        </div>
+        <div class="mt-5 md:mt-0 md:col-span-2">
+          <%= form_for @conn, Routes.mpesa_admin_path(@conn, :callback_logs, @clinic_id), [method: :get], fn f -> %>
+            <div class="grid grid-cols-6 gap-6">
+              <div class="col-span-6 sm:col-span-3">
+                <%= label f, :type, class: "block text-sm font-medium text-gray-700" %>
+                <%= select f, :type, [{"All Types", ""}, {"STK Push", "stk_push"}, {"C2B Validation", "c2b_validation"}, {"C2B Confirmation", "c2b_confirmation"}], selected: @filters["type"], class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" %>
+              </div>
+
+              <div class="col-span-6 sm:col-span-3">
+                <%= label f, :status, class: "block text-sm font-medium text-gray-700" %>
+                <%= select f, :status, [{"All Statuses", ""}, {"Success", "success"}, {"Error", "error"}], selected: @filters["status"], class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" %>
+              </div>
+
+              <div class="col-span-6 sm:col-span-3">
+                <%= label f, :date_from, "From Date", class: "block text-sm font-medium text-gray-700" %>
+                <%= date_input f, :date_from, value: @filters["date_from"], class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
+              </div>
+
+              <div class="col-span-6 sm:col-span-3">
+                <%= label f, :date_to, "To Date", class: "block text-sm font-medium text-gray-700" %>
+                <%= date_input f, :date_to, value: @filters["date_to"], class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
+              </div>
+
+              <div class="col-span-6 flex justify-end">
+                <%= link "Clear Filters", to: Routes.mpesa_admin_path(@conn, :callback_logs, @clinic_id), class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mr-3" %>
+                <%= submit "Filter", class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
+              </div>
+            </div>
+          <% end %>
+        </div>
+      </div>
+    </div>
+
+    <!-- Callback Logs Table -->
+    <div class="flex flex-col">
+      <div class="-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
+        <div class="py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8">
+          <div class="shadow overflow-hidden border-b border-gray-200 sm:rounded-lg">
+            <%= if length(@callbacks) > 0 do %>
+              <table class="min-w-full divide-y divide-gray-200">
+                <thead class="bg-gray-50">
+                  <tr>
+                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
+                      Type
+                    </th>
+                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
+                      Status
+                    </th>
+                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
+                      Reference
+                    </th>
+                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
+                      Date
+                    </th>
+                    <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
+                      Transaction ID
+                    </th>
+                    <th scope="col" class="relative px-6 py-3">
+                      <span class="sr-only">View</span>
+                    </th>
+                  </tr>
+                </thead>
+                <tbody class="bg-white divide-y divide-gray-200">
+                  <%= for callback <- @callbacks do %>
+                    <tr>
+                      <td class="px-6 py-4 whitespace-nowrap">
+                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= callback_type_class(callback.type) %>">
+                          <%= format_callback_type(callback.type) %>
+                        </span>
+                      </td>
+                      <td class="px-6 py-4 whitespace-nowrap">
+                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= callback.status == "success" && "bg-green-100 text-green-800" || "bg-red-100 text-red-800" %>">
+                          <%= String.capitalize(callback.status) %>
+                        </span>
+                      </td>
+                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
+                        <%= callback.reference || "-" %>
+                      </td>
+                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
+                        <%= format_date_time(callback.inserted_at) %>
+                      </td>
+                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
+                        <%= if callback.transaction_id do %>
+                          <a href="<%= Routes.mpesa_admin_path(@conn, :transaction_details, callback.transaction_id) %>" class="text-indigo-600 hover:text-indigo-900">
+                            <%= truncate_id(callback.transaction_id) %>
+                          </a>
+                        <% else %>
+                          -
+                        <% end %>
+                      </td>
+                      <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
+                        <a href="<%= Routes.mpesa_admin_path(@conn, :callback_details, callback.id) %>" class="text-indigo-600 hover:text-indigo-900">View</a>
+                      </td>
+                    </tr>
+                  <% end %>
+                </tbody>
+              </table>
+            <% else %>
+              <div class="bg-white px-4 py-12 text-center">
+                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
+                </svg>
+                <h3 class="mt-2 text-sm font-medium text-gray-900">No callback logs found</h3>
+                <p class="mt-1 text-sm text-gray-500">
+                  No callback logs match your current filters or no callbacks have been received yet.
+                </p>
+              </div>
+            <% end %>
+          </div>
+        </div>
+      </div>
+    </div>
+
+    <!-- Pagination -->
+    <%= if @total_pages > 1 do %>
+      <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6 mt-4">
+        <div class="flex-1 flex justify-between sm:hidden">
+          <%= if @page > 1 do %>
+            <a href="<%= Routes.mpesa_admin_path(@conn, :callback_logs, @clinic_id, Map.put(@filters, "page", @page - 1)) %>" class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
+              Previous
+            </a>
+          <% else %>
+            <span class="relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-300 bg-gray-50 cursor-not-allowed">
+              Previous
+            </span>
+          <% end %>
+          <%= if @page < @total_pages do %>
+            <a href="<%= Routes.mpesa_admin_path(@conn, :callback_logs, @clinic_id, Map.put(@filters, "page", @page + 1)) %>" class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50">
+              Next
+            </a>
+          <% else %>
+            <span class="ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-300 bg-gray-50 cursor-not-allowed">
+              Next
+            </span>
+          <% end %>
+        </div>
+        <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
+          <div>
+            <p class="text-sm text-gray-700">
+              Showing
+              <span class="font-medium"><%= (@page - 1) * @per_page + 1 %></span>
+              to
+              <span class="font-medium"><%= min(@page * @per_page, @total_entries) %></span>
+              of
+              <span class="font-medium"><%= @total_entries %></span>
+              results
+            </p>
+          </div>
+          <div>
+            <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
+              <%= if @page > 1 do %>
+                <a href="<%= Routes.mpesa_admin_path(@conn, :callback_logs, @clinic_id, Map.put(@filters, "page", @page - 1)) %>" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
+                  <span class="sr-only">Previous</span>
+                  <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
+                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
+                  </svg>
+                </a>
+              <% else %>
+                <span class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-gray-50 text-sm font-medium text-gray-300 cursor-not-allowed">
+                  <span class="sr-only">Previous</span>
+                  <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
+                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
+                  </svg>
+                </span>
+              <% end %>
+
+              <%= for page_num <- max(1, @page - 2)..min(@total_pages, @page + 2) do %>
+                <%= if page_num == @page do %>
+                  <span aria-current="page" class="z-10 bg-indigo-50 border-indigo-500 text-indigo-600 relative inline-flex items-center px-4 py-2 border text-sm font-medium">
+                    <%= page_num %>
+                  </span>
+                <% else %>
+                  <a href="<%= Routes.mpesa_admin_path(@conn, :callback_logs, @clinic_id, Map.put(@filters, "page", page_num)) %>" class="bg-white border-gray-300 text-gray-500 hover:bg-gray-50 relative inline-flex items-center px-4 py-2 border text-sm font-medium">
+                    <%= page_num %>
+                  </a>
+                <% end %>
+              <% end %>
+
+              <%= if @page < @total_pages do %>
+                <a href="<%= Routes.mpesa_admin_path(@conn, :callback_logs, @clinic_id, Map.put(@filters, "page", @page + 1)) %>" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
+                  <span class="sr-only">Next</span>
+                  <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
+                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
+                  </svg>
+                </a>
+              <% else %>
+                <span class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-gray-50 text-sm font-medium text-gray-300 cursor-not-allowed">
+                  <span class="sr-only">Next</span>
+                  <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
+                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
+                  </svg>
+                </span>
+              <% end %>
+            </nav>
+          </div>
+        </div>
+      </div>
+    <% end %>
+  </div>
+</div>
+
+<script>
+  function copyToClipboard(text) {
+    navigator.clipboard.writeText(text).then(function() {
+      alert('URL copied to clipboard!');
+    }, function(err) {
+      console.error('Could not copy text: ', err);
+    });
+  }
+</script>
diff --git a/lib/clinicpro_web/templates/mpesa_admin/config_form.html.heex b/lib/clinicpro_web/templates/mpesa_admin/config_form.html.heex
new file mode 100644
index 0000000..b3bc7d4
--- /dev/null
+++ b/lib/clinicpro_web/templates/mpesa_admin/config_form.html.heex
@@ -0,0 +1,135 @@
+<div class="container mx-auto px-4 py-8">
+  <div class="bg-white rounded-lg shadow-lg p-6">
+    <div class="flex justify-between items-center mb-6">
+      <h1 class="text-2xl font-bold"><%= if @action == :edit, do: "Edit", else: "New" %> M-Pesa Configuration</h1>
+      <a href="<%= Routes.mpesa_admin_path(@conn, :index) %>" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
+        </svg>
+        Back to Configurations
+      </a>
+    </div>
+
+    <%= if @changeset.action do %>
+      <div class="bg-red-50 border-l-4 border-red-400 p-4 mb-6">
+        <div class="flex">
+          <div class="flex-shrink-0">
+            <svg class="h-5 w-5 text-red-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
+              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
+            </svg>
+          </div>
+          <div class="ml-3">
+            <p class="text-sm text-red-700">
+              Please check the errors below.
+            </p>
+          </div>
+        </div>
+      </div>
+    <% end %>
+
+    <%= form_for @changeset, @action_path, fn f -> %>
+      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
+        <div class="col-span-1 md:col-span-2">
+          <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4">
+            <div class="flex">
+              <div class="flex-shrink-0">
+                <svg class="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
+                  <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
+                </svg>
+              </div>
+              <div class="ml-3">
+                <p class="text-sm text-yellow-700">
+                  <strong>Important:</strong> These credentials are sensitive. Make sure you're using the correct values from your Safaricom Daraja API account.
+                </p>
+              </div>
+            </div>
+          </div>
+        </div>
+
+        <div>
+          <label for="environment" class="block text-sm font-medium text-gray-700 mb-1">Environment</label>
+          <%= select f, :environment, ["sandbox": "sandbox", "production": "production"], class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" %>
+          <%= error_tag f, :environment %>
+          <p class="mt-1 text-sm text-gray-500">Use 'sandbox' for testing and 'production' for live transactions.</p>
+        </div>
+
+        <div>
+          <label for="shortcode" class="block text-sm font-medium text-gray-700 mb-1">Shortcode</label>
+          <%= text_input f, :shortcode, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md", placeholder: "e.g., 174379" %>
+          <%= error_tag f, :shortcode %>
+          <p class="mt-1 text-sm text-gray-500">Your M-Pesa paybill or till number.</p>
+        </div>
+
+        <div>
+          <label for="consumer_key" class="block text-sm font-medium text-gray-700 mb-1">Consumer Key</label>
+          <%= text_input f, :consumer_key, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
+          <%= error_tag f, :consumer_key %>
+          <p class="mt-1 text-sm text-gray-500">API consumer key from Safaricom Daraja portal.</p>
+        </div>
+
+        <div>
+          <label for="consumer_secret" class="block text-sm font-medium text-gray-700 mb-1">Consumer Secret</label>
+          <%= password_input f, :consumer_secret, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
+          <%= error_tag f, :consumer_secret %>
+          <p class="mt-1 text-sm text-gray-500">API consumer secret from Safaricom Daraja portal.</p>
+        </div>
+
+        <div>
+          <label for="passkey" class="block text-sm font-medium text-gray-700 mb-1">Passkey</label>
+          <%= password_input f, :passkey, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md" %>
+          <%= error_tag f, :passkey %>
+          <p class="mt-1 text-sm text-gray-500">Online passkey for STK Push transactions.</p>
+        </div>
+
+        <div>
+          <label for="base_url" class="block text-sm font-medium text-gray-700 mb-1">Base URL</label>
+          <%= text_input f, :base_url, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md", placeholder: "https://sandbox.safaricom.co.ke" %>
+          <%= error_tag f, :base_url %>
+          <p class="mt-1 text-sm text-gray-500">API base URL (automatically set based on environment).</p>
+        </div>
+
+        <div class="col-span-1 md:col-span-2">
+          <div class="border-t border-gray-200 pt-6">
+            <h3 class="text-lg font-medium text-gray-900">Callback URLs</h3>
+            <p class="mt-1 text-sm text-gray-500">These URLs will be used for receiving M-Pesa transaction notifications.</p>
+          </div>
+        </div>
+
+        <div>
+          <label for="callback_url" class="block text-sm font-medium text-gray-700 mb-1">STK Push Callback URL</label>
+          <%= text_input f, :callback_url, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md", placeholder: "https://example.com/mpesa/callback" %>
+          <%= error_tag f, :callback_url %>
+          <p class="mt-1 text-sm text-gray-500">URL to receive STK Push transaction results.</p>
+        </div>
+
+        <div>
+          <label for="validation_url" class="block text-sm font-medium text-gray-700 mb-1">C2B Validation URL</label>
+          <%= text_input f, :validation_url, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md", placeholder: "https://example.com/mpesa/validate" %>
+          <%= error_tag f, :validation_url %>
+          <p class="mt-1 text-sm text-gray-500">URL to validate C2B transactions (optional).</p>
+        </div>
+
+        <div>
+          <label for="confirmation_url" class="block text-sm font-medium text-gray-700 mb-1">C2B Confirmation URL</label>
+          <%= text_input f, :confirmation_url, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md", placeholder: "https://example.com/mpesa/confirm" %>
+          <%= error_tag f, :confirmation_url %>
+          <p class="mt-1 text-sm text-gray-500">URL to receive C2B transaction confirmations.</p>
+        </div>
+
+        <div>
+          <div class="flex items-center">
+            <%= checkbox f, :active, class: "h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded" %>
+            <label for="active" class="ml-2 block text-sm text-gray-900">Active</label>
+          </div>
+          <p class="mt-1 text-sm text-gray-500">Enable this configuration for processing payments.</p>
+        </div>
+      </div>
+
+      <div class="mt-8 flex justify-end">
+        <button type="submit" class="inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+          <%= if @action == :edit, do: "Update", else: "Create" %> Configuration
+        </button>
+      </div>
+    <% end %>
+  </div>
+</div>
diff --git a/lib/clinicpro_web/templates/mpesa_admin/configuration_details.html.heex b/lib/clinicpro_web/templates/mpesa_admin/configuration_details.html.heex
new file mode 100644
index 0000000..33722d6
--- /dev/null
+++ b/lib/clinicpro_web/templates/mpesa_admin/configuration_details.html.heex
@@ -0,0 +1,198 @@
+<div class="container mx-auto px-4 py-8">
+  <div class="bg-white rounded-lg shadow-lg p-6">
+    <div class="flex justify-between items-center mb-6">
+      <h1 class="text-2xl font-bold">M-Pesa Configuration</h1>
+      <div class="flex space-x-2">
+        <a href="<%= Routes.mpesa_admin_path(@conn, :configurations, @clinic_id) %>" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+            <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
+          </svg>
+          Back to Configurations
+        </a>
+      </div>
+    </div>
+
+    <div class="bg-gray-50 p-4 rounded-lg mb-6">
+      <div class="flex items-center">
+        <div class="flex-shrink-0">
+          <span class="inline-flex items-center justify-center h-12 w-12 rounded-md bg-indigo-100 text-indigo-600">
+            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
+              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
+            </svg>
+          </span>
+        </div>
+        <div class="ml-4">
+          <h2 class="text-lg font-medium text-gray-900">
+            Configuration ID: <%= @config.id %>
+            <span class="ml-2 px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= config_status_class(@config.active) %>">
+              <%= config_status_text(@config.active) %>
+            </span>
+            <%= environment_badge(@config.environment) %>
+          </h2>
+          <p class="text-sm text-gray-500">
+            Last updated: <%= format_date_time(@config.updated_at) %>
+          </p>
+        </div>
+      </div>
+    </div>
+
+    <%= form_for @changeset, Routes.mpesa_admin_path(@conn, :update_configuration, @config.id, clinic_id: @clinic_id), fn f -> %>
+      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
+        <div class="bg-white overflow-hidden shadow rounded-lg">
+          <div class="px-4 py-5 sm:p-6">
+            <h3 class="text-lg font-medium text-gray-900 mb-4">Authentication Settings</h3>
+
+            <div class="mb-4">
+              <%= label f, :consumer_key, "Consumer Key", class: "block text-sm font-medium text-gray-700" %>
+              <div class="mt-1 flex rounded-md shadow-sm">
+                <%= text_input f, :consumer_key, class: "flex-1 min-w-0 block w-full px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
+              </div>
+              <%= error_tag f, :consumer_key %>
+            </div>
+
+            <div class="mb-4">
+              <%= label f, :consumer_secret, "Consumer Secret", class: "block text-sm font-medium text-gray-700" %>
+              <div class="mt-1 flex rounded-md shadow-sm">
+                <%= text_input f, :consumer_secret, class: "flex-1 min-w-0 block w-full px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
+              </div>
+              <%= error_tag f, :consumer_secret %>
+            </div>
+
+            <div class="mb-4">
+              <%= label f, :passkey, "Passkey", class: "block text-sm font-medium text-gray-700" %>
+              <div class="mt-1 flex rounded-md shadow-sm">
+                <%= text_input f, :passkey, class: "flex-1 min-w-0 block w-full px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
+              </div>
+              <%= error_tag f, :passkey %>
+            </div>
+          </div>
+        </div>
+
+        <div class="bg-white overflow-hidden shadow rounded-lg">
+          <div class="px-4 py-5 sm:p-6">
+            <h3 class="text-lg font-medium text-gray-900 mb-4">Business Settings</h3>
+
+            <div class="mb-4">
+              <%= label f, :shortcode, "Shortcode", class: "block text-sm font-medium text-gray-700" %>
+              <div class="mt-1 flex rounded-md shadow-sm">
+                <%= text_input f, :shortcode, class: "flex-1 min-w-0 block w-full px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
+              </div>
+              <%= error_tag f, :shortcode %>
+            </div>
+
+            <div class="mb-4">
+              <%= label f, :environment, "Environment", class: "block text-sm font-medium text-gray-700" %>
+              <div class="mt-1 flex rounded-md shadow-sm">
+                <%= select f, :environment, ["sandbox": "sandbox", "production": "production"], class: "flex-1 min-w-0 block w-full px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
+              </div>
+              <%= error_tag f, :environment %>
+              <p class="mt-1 text-sm text-gray-500">
+                <span class="text-red-500 font-semibold">Warning:</span> Setting to production will use real money for transactions.
+              </p>
+            </div>
+
+            <div class="mb-4">
+              <%= label f, :active, "Status", class: "block text-sm font-medium text-gray-700" %>
+              <div class="mt-1 flex items-center">
+                <%= checkbox f, :active, class: "h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded" %>
+                <span class="ml-2 text-sm text-gray-700">Active</span>
+              </div>
+              <%= error_tag f, :active %>
+              <p class="mt-1 text-sm text-gray-500">
+                Only one configuration can be active at a time. Activating this will deactivate all others.
+              </p>
+            </div>
+          </div>
+        </div>
+      </div>
+
+      <div class="bg-white overflow-hidden shadow rounded-lg mb-6">
+        <div class="px-4 py-5 sm:p-6">
+          <h3 class="text-lg font-medium text-gray-900 mb-4">Callback URLs</h3>
+
+          <div class="mb-4">
+            <%= label f, :base_url, "Base URL", class: "block text-sm font-medium text-gray-700" %>
+            <div class="mt-1 flex rounded-md shadow-sm">
+              <%= text_input f, :base_url, class: "flex-1 min-w-0 block w-full px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
+            </div>
+            <%= error_tag f, :base_url %>
+            <p class="mt-1 text-sm text-gray-500">
+              Base URL for your application (e.g., https://example.com)
+            </p>
+          </div>
+
+          <div class="mb-4">
+            <%= label f, :callback_url, "STK Push Callback URL", class: "block text-sm font-medium text-gray-700" %>
+            <div class="mt-1 flex rounded-md shadow-sm">
+              <%= text_input f, :callback_url, class: "flex-1 min-w-0 block w-full px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
+            </div>
+            <%= error_tag f, :callback_url %>
+            <p class="mt-1 text-sm text-gray-500">
+              URL to receive STK Push callbacks (e.g., /api/mpesa/callbacks/stk)
+            </p>
+          </div>
+
+          <div class="mb-4">
+            <%= label f, :validation_url, "C2B Validation URL", class: "block text-sm font-medium text-gray-700" %>
+            <div class="mt-1 flex rounded-md shadow-sm">
+              <%= text_input f, :validation_url, class: "flex-1 min-w-0 block w-full px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
+            </div>
+            <%= error_tag f, :validation_url %>
+            <p class="mt-1 text-sm text-gray-500">
+              URL to validate C2B transactions (e.g., /api/mpesa/callbacks/validation)
+            </p>
+          </div>
+
+          <div class="mb-4">
+            <%= label f, :confirmation_url, "C2B Confirmation URL", class: "block text-sm font-medium text-gray-700" %>
+            <div class="mt-1 flex rounded-md shadow-sm">
+              <%= text_input f, :confirmation_url, class: "flex-1 min-w-0 block w-full px-3 py-2 rounded-md border border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" %>
+            </div>
+            <%= error_tag f, :confirmation_url %>
+            <p class="mt-1 text-sm text-gray-500">
+              URL to confirm C2B transactions (e.g., /api/mpesa/callbacks/confirmation)
+            </p>
+          </div>
+        </div>
+      </div>
+
+      <div class="flex justify-between">
+        <div>
+          <%= if @config.id do %>
+            <%= link "Delete Configuration", to: Routes.mpesa_admin_path(@conn, :delete_configuration, @config.id, clinic_id: @clinic_id), method: :delete, data: [confirm: "Are you sure? This will permanently delete this configuration."], class: "inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500" %>
+          <% end %>
+        </div>
+        <div class="flex space-x-2">
+          <a href="<%= Routes.mpesa_admin_path(@conn, :configurations, @clinic_id) %>" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+            Cancel
+          </a>
+          <%= submit "Save Configuration", class: "inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
+        </div>
+      </div>
+    <% end %>
+
+    <div class="mt-8 border-t border-gray-200 pt-6">
+      <h3 class="text-lg font-medium text-gray-900 mb-4">Quick Actions</h3>
+      <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
+        <a href="<%= Routes.mpesa_admin_path(@conn, :test_stk_push, @clinic_id, config_id: @config.id) %>" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z" clip-rule="evenodd" />
+          </svg>
+          Test STK Push
+        </a>
+        <a href="<%= Routes.mpesa_admin_path(@conn, :transactions, @clinic_id, config_id: @config.id) %>" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
+          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+            <path fill-rule="evenodd" d="M3 3a1 1 0 000 2h10a1 1 0 100-2H3zm0 4a1 1 0 000 2h10a1 1 0 100-2H3zm0 4a1 1 0 100 2h10a1 1 0 100-2H3z" clip-rule="evenodd" />
+          </svg>
+          View Transactions
+        </a>
+        <a href="<%= Routes.mpesa_admin_path(@conn, :callback_logs, @clinic_id, config_id: @config.id) %>" class="inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-yellow-600 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500">
+          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
+          </svg>
+          View Callback Logs
+        </a>
+      </div>
+    </div>
+  </div>
+</div>
diff --git a/lib/clinicpro_web/templates/mpesa_admin/index.html.heex b/lib/clinicpro_web/templates/mpesa_admin/index.html.heex
index 7067af1..832ccd7 100644
--- a/lib/clinicpro_web/templates/mpesa_admin/index.html.heex
+++ b/lib/clinicpro_web/templates/mpesa_admin/index.html.heex
@@ -1,213 +1,116 @@
-<div class="container py-4">
-  <h1 class="mb-4">M-Pesa Configuration</h1>
+<div class="container mx-auto px-4 py-8">
+  <div class="bg-white rounded-lg shadow-lg p-6">
+    <div class="flex justify-between items-center mb-6">
+      <h1 class="text-2xl font-bold">M-Pesa Configurations</h1>
+      <a href="<%= Routes.mpesa_admin_path(@conn, :new_config) %>" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+          <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
+        </svg>
+        New Configuration
+      </a>
+    </div>
 
-  <%= if @config do %>
-    <div class="row mb-4">
-      <div class="col-md-12">
-        <div class="card bg-light">
-          <div class="card-body">
-            <div class="row">
-              <div class="col-md-3 text-center">
-                <h6 class="text-muted">Total Transactions</h6>
-                <h3 class="mb-0"><%= @stats.total_count %></h3>
-              </div>
-              <div class="col-md-3 text-center">
-                <h6 class="text-muted">Completed</h6>
-                <h3 class="mb-0 text-success"><%= @stats.completed_count %></h3>
-                <small><%= @stats.completed_percentage %>% of total</small>
-              </div>
-              <div class="col-md-3 text-center">
-                <h6 class="text-muted">Pending</h6>
-                <h3 class="mb-0 text-warning"><%= @stats.pending_count %></h3>
-                <small><%= @stats.pending_percentage %>% of total</small>
-              </div>
-              <div class="col-md-3 text-center">
-                <h6 class="text-muted">Total Amount</h6>
-                <h3 class="mb-0 text-primary"><%= format_amount(@stats.total_amount) %></h3>
-              </div>
-            </div>
+    <%= if Enum.empty?(@configs) do %>
+      <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6">
+        <div class="flex">
+          <div class="flex-shrink-0">
+            <svg class="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
+              <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
+            </svg>
+          </div>
+          <div class="ml-3">
+            <p class="text-sm text-yellow-700">
+              No M-Pesa configurations found. Create a new configuration to start accepting M-Pesa payments.
+            </p>
           </div>
         </div>
       </div>
-    </div>
-  <% end %>
-
-  <div class="row mb-4">
-    <div class="col">
-      <div class="card">
-        <div class="card-header d-flex justify-content-between align-items-center">
-          <h5 class="mb-0">Configuration Details</h5>
-          <%= if @config do %>
-            <%= link "Edit", to: Routes.mpesa_admin_path(@conn, :edit, @clinic_id, @config.id), class: "btn btn-sm btn-primary" %>
-          <% else %>
-            <%= link "Create New", to: Routes.mpesa_admin_path(@conn, :new, @clinic_id), class: "btn btn-sm btn-success" %>
-          <% end %>
-        </div>
-        <div class="card-body">
-          <%= if @config do %>
-            <table class="table">
-              <tbody>
-                <tr>
-                  <th scope="row" style="width: 30%">Environment</th>
-                  <td><span class="badge <%= environment_class(@config.environment) %>"><%= String.capitalize(@config.environment) %></span></td>
-                </tr>
-                <tr>
-                  <th scope="row">Consumer Key</th>
-                  <td><%= mask_sensitive(@config.consumer_key) %></td>
-                </tr>
-                <tr>
-                  <th scope="row">Consumer Secret</th>
-                  <td><%= mask_sensitive(@config.consumer_secret) %></td>
-                </tr>
-                <tr>
-                  <th scope="row">Passkey</th>
-                  <td><%= mask_sensitive(@config.passkey) %></td>
-                </tr>
-                <tr>
-                  <th scope="row">Shortcode</th>
-                  <td><%= @config.shortcode %></td>
-                </tr>
-                <tr>
-                  <th scope="row">C2B Shortcode</th>
-                  <td><%= @config.c2b_shortcode || @config.shortcode %></td>
-                </tr>
-                <tr>
-                  <th scope="row">STK Callback URL</th>
-                  <td><%= @config.stk_callback_url || "Using system default" %></td>
-                </tr>
-                <tr>
-                  <th scope="row">C2B Validation URL</th>
-                  <td><%= @config.c2b_validation_url || "Using system default" %></td>
-                </tr>
-                <tr>
-                  <th scope="row">C2B Confirmation URL</th>
-                  <td><%= @config.c2b_confirmation_url || "Using system default" %></td>
-                </tr>
-                <tr>
-                  <th scope="row">Status</th>
-                  <td>
-                    <span class="badge <%= if @config.active, do: "bg-success", else: "bg-secondary" %>">
-                      <%= if @config.active, do: "Active", else: "Inactive" %>
-                    </span>
-                  </td>
-                </tr>
-                <tr>
-                  <th scope="row">Last Updated</th>
-                  <td><%= format_datetime(@config.updated_at) %></td>
-                </tr>
-              </tbody>
-            </table>
-          <% else %>
-            <div class="alert alert-info">
-              <div class="d-flex">
-                <div class="me-3">
-                  <i class="bi bi-info-circle-fill fs-4"></i>
-                </div>
-                <div>
-                  <strong>No M-Pesa Configuration Found</strong>
-                  <p class="mb-0">
-                    To enable M-Pesa payments for this clinic, you need to set up the integration with Safaricom's
-                    Daraja API. Click "Create New" to get started.
-                  </p>
-                </div>
-              </div>
-            </div>
-          <% end %>
-        </div>
+    <% else %>
+      <div class="overflow-x-auto mb-6">
+        <table class="min-w-full divide-y divide-gray-200">
+          <thead class="bg-gray-50">
+            <tr>
+              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Shortcode</th>
+              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Environment</th>
+              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
+              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Updated</th>
+              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
+            </tr>
+          </thead>
+          <tbody class="bg-white divide-y divide-gray-200">
+            <%= for config <- @configs do %>
+              <tr>
+                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
+                  <%= config.shortcode %>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
+                  <%= environment_badge(config.environment) %>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= config_status_class(config.active) %>">
+                    <%= config_status_text(config.active) %>
+                  </span>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
+                  <%= format_date(config.updated_at) %>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
+                  <div class="flex space-x-2">
+                    <a href="<%= Routes.mpesa_admin_path(@conn, :edit_config, config.id) %>" class="text-indigo-600 hover:text-indigo-900">
+                      Edit
+                    </a>
+                    <%= if config.active do %>
+                      <a href="<%= Routes.mpesa_admin_path(@conn, :deactivate_config, config.id) %>" class="text-red-600 hover:text-red-900" data-confirm="Are you sure you want to deactivate this configuration?">
+                        Deactivate
+                      </a>
+                    <% else %>
+                      <a href="<%= Routes.mpesa_admin_path(@conn, :activate_config, config.id) %>" class="text-green-600 hover:text-green-900">
+                        Activate
+                      </a>
+                    <% end %>
+                    <a href="<%= Routes.mpesa_admin_path(@conn, :test_stk_push, config.id) %>" class="text-blue-600 hover:text-blue-900">
+                      Test STK Push
+                    </a>
+                  </div>
+                </td>
+              </tr>
+            <% end %>
+          </tbody>
+        </table>
       </div>
-    </div>
-  </div>
+    <% end %>
 
-  <div class="row">
-    <div class="col">
-      <div class="card">
-        <div class="card-header d-flex justify-content-between align-items-center">
-          <h5 class="mb-0">Recent Transactions</h5>
-          <%= link "View All", to: Routes.mpesa_admin_path(@conn, :transactions, @clinic_id), class: "btn btn-sm btn-outline-primary" %>
-        </div>
-        <div class="card-body">
-          <div class="table-responsive">
-            <table class="table table-striped table-hover">
-              <thead>
-                <tr>
-                  <th>Reference</th>
-                  <th>Phone</th>
-                  <th>Amount</th>
-                  <th>Type</th>
-                  <th>Status</th>
-                  <th>Date</th>
-                  <th>Actions</th>
-                </tr>
-              </thead>
-              <tbody>
-                <%= if Enum.empty?(@recent_transactions) do %>
-                  <tr>
-                    <td colspan="7" class="text-center py-4">
-                      <p class="text-muted mb-0">No transactions found.</p>
-                    </td>
-                  </tr>
-                <% else %>
-                  <%= for transaction <- @recent_transactions do %>
-                    <tr>
-                      <td><%= transaction.reference %></td>
-                      <td><%= format_phone(transaction.phone) %></td>
-                      <td><%= format_amount(transaction.amount) %></td>
-                      <td><span class="badge bg-info"><%= format_type(transaction.type) %></span></td>
-                      <td><span class="badge <%= status_class(transaction.status) %>"><%= format_status(transaction.status) %></span></td>
-                      <td><%= format_datetime(transaction.transaction_date || transaction.inserted_at) %></td>
-                      <td>
-                        <%= link "View", to: Routes.mpesa_admin_path(@conn, :transaction_details, @clinic_id, transaction.id), class: "btn btn-sm btn-outline-primary" %>
-                      </td>
-                    </tr>
-                  <% end %>
-                <% end %>
-              </tbody>
-            </table>
+    <div class="mt-8">
+      <h2 class="text-xl font-bold mb-4">Transaction Summary</h2>
+      <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
+        <div class="bg-white overflow-hidden shadow rounded-lg">
+          <div class="px-4 py-5 sm:p-6">
+            <dt class="text-sm font-medium text-gray-500 truncate">Total Transactions</dt>
+            <dd class="mt-1 text-3xl font-semibold text-gray-900"><%= @stats.total_count %></dd>
           </div>
         </div>
-      </div>
-    </div>
-  </div>
-
-  <div class="row mt-4">
-    <div class="col">
-      <div class="card">
-        <div class="card-header">
-          <h5 class="mb-0">M-Pesa Actions</h5>
+        <div class="bg-white overflow-hidden shadow rounded-lg">
+          <div class="px-4 py-5 sm:p-6">
+            <dt class="text-sm font-medium text-gray-500 truncate">Successful Transactions</dt>
+            <dd class="mt-1 text-3xl font-semibold text-green-600"><%= @stats.completed_count %></dd>
+          </div>
         </div>
-        <div class="card-body">
-          <div class="row">
-            <div class="col-md-6 mb-3">
-              <div class="card h-100">
-                <div class="card-body">
-                  <h5 class="card-title">Register C2B URLs</h5>
-                  <p class="card-text">Register your validation and confirmation URLs with M-Pesa.</p>
-                  <%= if @config && @config.active do %>
-                    <%= link "Register URLs", to: Routes.mpesa_admin_path(@conn, :register_urls, @clinic_id), method: :post, class: "btn btn-primary" %>
-                  <% else %>
-                    <button class="btn btn-primary" disabled>Register URLs</button>
-                    <div class="form-text mt-2">Requires active M-Pesa configuration</div>
-                  <% end %>
-                </div>
-              </div>
-            </div>
-            <div class="col-md-6 mb-3">
-              <div class="card h-100">
-                <div class="card-body">
-                  <h5 class="card-title">Test STK Push</h5>
-                  <p class="card-text">Send a test STK Push request to verify your configuration.</p>
-                  <%= if @config && @config.active do %>
-                    <%= link "Test STK Push", to: Routes.mpesa_admin_path(@conn, :test_stk_push_form, @clinic_id), class: "btn btn-primary" %>
-                  <% else %>
-                    <button class="btn btn-primary" disabled>Test STK Push</button>
-                    <div class="form-text mt-2">Requires active M-Pesa configuration</div>
-                  <% end %>
-                </div>
-              </div>
-            </div>
+        <div class="bg-white overflow-hidden shadow rounded-lg">
+          <div class="px-4 py-5 sm:p-6">
+            <dt class="text-sm font-medium text-gray-500 truncate">Total Amount</dt>
+            <dd class="mt-1 text-3xl font-semibold text-gray-900"><%= format_amount(@stats.total_amount) %></dd>
           </div>
         </div>
       </div>
     </div>
+
+    <div class="mt-6">
+      <a href="<%= Routes.mpesa_admin_path(@conn, :transactions) %>" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+          <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd" />
+        </svg>
+        View All Transactions
+      </a>
+    </div>
   </div>
 </div>
diff --git a/lib/clinicpro_web/templates/mpesa_admin/test_stk_push.html.heex b/lib/clinicpro_web/templates/mpesa_admin/test_stk_push.html.heex
index 8c4d814..3a84501 100644
--- a/lib/clinicpro_web/templates/mpesa_admin/test_stk_push.html.heex
+++ b/lib/clinicpro_web/templates/mpesa_admin/test_stk_push.html.heex
@@ -1,110 +1,185 @@
-<div class="container py-4">
-  <div class="d-flex justify-content-between align-items-center mb-4">
-    <h1>Test STK Push</h1>
-    <%= link "Back to Configuration", to: Routes.mpesa_admin_path(@conn, :index, @clinic_id), class: "btn btn-outline-secondary" %>
-  </div>
+<div class="container mx-auto px-4 py-8">
+  <div class="bg-white rounded-lg shadow-lg p-6">
+    <div class="flex justify-between items-center mb-6">
+      <h1 class="text-2xl font-bold">Test STK Push</h1>
+      <a href="<%= Routes.mpesa_admin_path(@conn, :index, @clinic_id) %>" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
+        </svg>
+        Back to Configurations
+      </a>
+    </div>
 
-  <div class="alert alert-info">
-    <div class="d-flex">
-      <div class="me-3">
-        <i class="bi bi-info-circle-fill fs-4"></i>
-      </div>
-      <div>
-        <strong>Testing M-Pesa STK Push for <%= @clinic_name %></strong>
-        <p class="mb-0">
-          This form allows you to test the M-Pesa STK Push functionality. A payment prompt will be sent to the phone number you provide.
-          <%= if @config.environment == "sandbox" do %>
-            <strong>Note:</strong> You are in sandbox mode. No real money will be deducted.
-          <% else %>
-            <strong>Warning:</strong> You are in production mode. Real money will be deducted from the phone number provided.
-          <% end %>
-        </p>
+    <div class="bg-gray-50 p-4 rounded-lg mb-6">
+      <div class="flex items-center">
+        <div class="flex-shrink-0">
+          <span class="inline-flex items-center justify-center h-12 w-12 rounded-md bg-indigo-100 text-indigo-600">
+            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
+              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
+            </svg>
+          </span>
+        </div>
+        <div class="ml-4">
+          <h2 class="text-lg font-medium text-gray-900">
+            M-Pesa Configuration: <%= @config.shortcode %>
+            <span class="ml-2 px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= environment_badge(@config.environment) %>">
+              <%= String.upcase(@config.environment) %>
+            </span>
+          </h2>
+          <p class="text-sm text-gray-500">
+            <%= if @config.active do %>
+              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
+                <svg class="-ml-0.5 mr-1.5 h-2 w-2 text-green-400" fill="currentColor" viewBox="0 0 8 8">
+                  <circle cx="4" cy="4" r="3" />
+                </svg>
+                Active
+              </span>
+            <% else %>
+              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
+                <svg class="-ml-0.5 mr-1.5 h-2 w-2 text-gray-400" fill="currentColor" viewBox="0 0 8 8">
+                  <circle cx="4" cy="4" r="3" />
+                </svg>
+                Inactive
+              </span>
+            <% end %>
+            | Last updated: <%= format_date_time(@config.updated_at) %>
+          </p>
+        </div>
       </div>
     </div>
-  </div>
 
-  <div class="card">
-    <div class="card-header">
-      <h5 class="mb-0">STK Push Test Parameters</h5>
+    <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6">
+      <div class="flex">
+        <div class="flex-shrink-0">
+          <svg class="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
+            <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
+          </svg>
+        </div>
+        <div class="ml-3">
+          <p class="text-sm text-yellow-700">
+            <strong>Note:</strong> This will initiate a real STK Push request to the phone number provided.
+            <%= if @config.environment == "sandbox" do %>
+              Since this is a sandbox environment, no actual money will be deducted.
+            <% else %>
+              <strong>This is a production environment and will deduct real money from the provided phone number.</strong>
+            <% end %>
+          </p>
+        </div>
+      </div>
     </div>
-    <div class="card-body">
-      <%= form_for @conn, Routes.mpesa_admin_path(@conn, :test_stk_push, @clinic_id), [as: :stk_push], fn f -> %>
-        <div class="row mb-3">
-          <div class="col-md-6">
-            <%= label f, :phone, "Phone Number", class: "form-label" %>
-            <%= text_input f, :phone, class: "form-control", placeholder: "254712345678", required: true %>
-            <div class="form-text">Enter the phone number in international format (e.g., 254712345678).</div>
-          </div>
 
-          <div class="col-md-6">
-            <%= label f, :amount, "Amount (KES)", class: "form-label" %>
-            <%= number_input f, :amount, class: "form-control", min: "1", step: "1", value: "1", required: true %>
-            <div class="form-text">
-              <%= if @config.environment == "sandbox" do %>
-                For sandbox testing, use small amounts like 1 KES.
-              <% else %>
-                Minimum amount is 1 KES.
-              <% end %>
+    <%= form_for @changeset, Routes.mpesa_admin_path(@conn, :process_stk_push_test, @config.id), fn f -> %>
+      <div class="space-y-6">
+        <div class="bg-white shadow px-4 py-5 sm:rounded-lg sm:p-6">
+          <div class="md:grid md:grid-cols-3 md:gap-6">
+            <div class="md:col-span-1">
+              <h3 class="text-lg font-medium leading-6 text-gray-900">Payment Details</h3>
+              <p class="mt-1 text-sm text-gray-500">
+                Enter the phone number and amount to test the STK Push functionality.
+              </p>
             </div>
-          </div>
-        </div>
+            <div class="mt-5 md:mt-0 md:col-span-2">
+              <div class="grid grid-cols-6 gap-6">
+                <div class="col-span-6 sm:col-span-3">
+                  <%= label f, :phone_number, "Phone Number", class: "block text-sm font-medium text-gray-700" %>
+                  <div class="mt-1 relative rounded-md shadow-sm">
+                    <span class="absolute inset-y-0 left-0 flex items-center pl-3 text-gray-500 sm:text-sm">+254</span>
+                    <%= text_input f, :phone_number, class: "pl-14 focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md", placeholder: "7XXXXXXXX" %>
+                  </div>
+                  <p class="mt-2 text-sm text-gray-500">Enter the phone number without the country code (e.g., 7XXXXXXXX)</p>
+                  <%= error_tag f, :phone_number %>
+                </div>
 
-        <div class="row mb-3">
-          <div class="col-md-6">
-            <%= label f, :reference, "Reference", class: "form-label" %>
-            <%= text_input f, :reference, class: "form-control", placeholder: "Test Payment", value: "Test Payment" %>
-            <div class="form-text">A reference for this transaction.</div>
-          </div>
+                <div class="col-span-6 sm:col-span-3">
+                  <%= label f, :amount, class: "block text-sm font-medium text-gray-700" %>
+                  <div class="mt-1 relative rounded-md shadow-sm">
+                    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
+                      <span class="text-gray-500 sm:text-sm">KES</span>
+                    </div>
+                    <%= number_input f, :amount, class: "pl-12 focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md", placeholder: "1.00", min: "1", step: "0.01" %>
+                  </div>
+                  <p class="mt-2 text-sm text-gray-500">Minimum amount is KES 1.00</p>
+                  <%= error_tag f, :amount %>
+                </div>
 
-          <div class="col-md-6">
-            <%= label f, :description, "Description", class: "form-label" %>
-            <%= text_input f, :description, class: "form-control", placeholder: "Test STK Push", value: "Test STK Push" %>
-            <div class="form-text">Description that appears on the STK prompt.</div>
-          </div>
-        </div>
-
-        <div class="d-flex justify-content-between align-items-center mt-4">
-          <div>
-            <span class="badge <%= if @config.environment == "sandbox", do: "bg-info", else: "bg-danger" %>">
-              <%= String.upcase(@config.environment) %> MODE
-            </span>
-            <span class="ms-2">Using shortcode: <%= @config.shortcode %></span>
-          </div>
+                <div class="col-span-6">
+                  <%= label f, :reference, "Reference (Optional)", class: "block text-sm font-medium text-gray-700" %>
+                  <%= text_input f, :reference, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md", placeholder: "Test Payment" %>
+                  <p class="mt-2 text-sm text-gray-500">A reference for this test payment (defaults to "Test Payment" if left blank)</p>
+                  <%= error_tag f, :reference %>
+                </div>
 
-          <div>
-            <%= submit "Send STK Push", class: "btn btn-primary" %>
+                <div class="col-span-6">
+                  <%= label f, :description, "Description (Optional)", class: "block text-sm font-medium text-gray-700" %>
+                  <%= text_input f, :description, class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md", placeholder: "Test STK Push" %>
+                  <p class="mt-2 text-sm text-gray-500">A description for this test payment (defaults to "Test STK Push" if left blank)</p>
+                  <%= error_tag f, :description %>
+                </div>
+              </div>
+            </div>
           </div>
         </div>
-      <% end %>
-    </div>
-  </div>
 
-  <div class="card mt-4">
-    <div class="card-header">
-      <h5 class="mb-0">Testing Guidelines</h5>
-    </div>
-    <div class="card-body">
-      <h6>Sandbox Testing</h6>
-      <ul>
-        <li>In sandbox mode, use the test phone numbers provided by Safaricom (e.g., 254708374149).</li>
-        <li>No real money will be deducted in sandbox mode.</li>
-        <li>Sandbox responses are simulated and may not reflect actual transaction behavior.</li>
-      </ul>
-
-      <h6>Production Testing</h6>
-      <ul>
-        <li>In production mode, real money will be deducted from the phone number provided.</li>
-        <li>The user will receive an actual STK push notification on their phone.</li>
-        <li>The transaction will be processed by M-Pesa and reflected in your M-Pesa account.</li>
-      </ul>
+        <div class="flex justify-end">
+          <a href="<%= Routes.mpesa_admin_path(@conn, :index, @clinic_id) %>" class="bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 mr-3">
+            Cancel
+          </a>
+          <%= submit "Send STK Push", class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" %>
+        </div>
+      </div>
+    <% end %>
 
-      <h6>Troubleshooting</h6>
-      <ul>
-        <li>Ensure the phone number is in the correct format (254XXXXXXXXX).</li>
-        <li>Verify that the phone number has sufficient funds.</li>
-        <li>Check that the M-Pesa configuration is correct and active.</li>
-        <li>If the STK push fails, check the transaction details for error codes and descriptions.</li>
-      </ul>
-    </div>
+    <%= if @recent_transactions && length(@recent_transactions) > 0 do %>
+      <div class="mt-8">
+        <h3 class="text-lg font-medium text-gray-900 mb-4">Recent Test Transactions</h3>
+        <div class="bg-white shadow overflow-hidden sm:rounded-md">
+          <ul class="divide-y divide-gray-200">
+            <%= for transaction <- @recent_transactions do %>
+              <li>
+                <a href="<%= Routes.mpesa_admin_path(@conn, :transaction_details, transaction.id) %>" class="block hover:bg-gray-50">
+                  <div class="px-4 py-4 sm:px-6">
+                    <div class="flex items-center justify-between">
+                      <div class="flex items-center">
+                        <p class="text-sm font-medium text-indigo-600 truncate">
+                          <%= transaction.reference %>
+                        </p>
+                        <div class="ml-2 flex-shrink-0 flex">
+                          <p class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= transaction_status_class(transaction.status) %>">
+                            <%= format_transaction_status(transaction.status) %>
+                          </p>
+                        </div>
+                      </div>
+                      <div class="ml-2 flex-shrink-0 flex">
+                        <p class="text-sm text-gray-500">
+                          <%= format_amount(transaction.amount) %>
+                        </p>
+                      </div>
+                    </div>
+                    <div class="mt-2 sm:flex sm:justify-between">
+                      <div class="sm:flex">
+                        <p class="flex items-center text-sm text-gray-500">
+                          <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
+                            <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z" />
+                          </svg>
+                          <%= format_phone(transaction.phone) %>
+                        </p>
+                      </div>
+                      <div class="mt-2 flex items-center text-sm text-gray-500 sm:mt-0">
+                        <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
+                          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
+                        </svg>
+                        <p>
+                          <%= format_date_time(transaction.inserted_at) %>
+                        </p>
+                      </div>
+                    </div>
+                  </div>
+                </a>
+              </li>
+            <% end %>
+          </ul>
+        </div>
+      </div>
+    <% end %>
   </div>
 </div>
diff --git a/lib/clinicpro_web/templates/mpesa_admin/transaction_details.html.heex b/lib/clinicpro_web/templates/mpesa_admin/transaction_details.html.heex
index b6f07ea..c147016 100644
--- a/lib/clinicpro_web/templates/mpesa_admin/transaction_details.html.heex
+++ b/lib/clinicpro_web/templates/mpesa_admin/transaction_details.html.heex
@@ -1,191 +1,192 @@
-<div class="container py-4">
-  <div class="d-flex justify-content-between align-items-center mb-4">
-    <h1>Transaction Details</h1>
-    <%= link "Back to Transactions", to: Routes.mpesa_admin_path(@conn, :transactions, @clinic_id), class: "btn btn-outline-secondary" %>
-  </div>
+<div class="container mx-auto px-4 py-8">
+  <div class="bg-white rounded-lg shadow-lg p-6">
+    <div class="flex justify-between items-center mb-6">
+      <h1 class="text-2xl font-bold">Transaction Details</h1>
+      <a href="<%= Routes.mpesa_admin_path(@conn, :transactions, @clinic_id) %>" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
+        </svg>
+        Back to Transactions
+      </a>
+    </div>
 
-  <div class="row">
-    <div class="col-md-8">
-      <div class="card mb-4">
-        <div class="card-header d-flex justify-content-between align-items-center">
-          <h5 class="mb-0">Transaction Information</h5>
-          <span class="badge <%= status_class(@transaction.status) %>"><%= format_status(@transaction.status) %></span>
+    <div class="bg-gray-50 p-4 rounded-lg mb-6">
+      <div class="flex items-center">
+        <div class="flex-shrink-0">
+          <span class="inline-flex items-center justify-center h-12 w-12 rounded-md bg-indigo-100 text-indigo-600">
+            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
+              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z" />
+            </svg>
+          </span>
+        </div>
+        <div class="ml-4">
+          <h2 class="text-lg font-medium text-gray-900">
+            <%= format_amount(@transaction.amount) %>
+            <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= transaction_status_class(@transaction.status) %>">
+              <%= format_transaction_status(@transaction.status) %>
+            </span>
+          </h2>
+          <p class="text-sm text-gray-500">
+            Reference: <span class="font-medium"><%= @transaction.reference %></span> |
+            <%= format_date_time(@transaction.transaction_date || @transaction.inserted_at) %>
+          </p>
         </div>
-        <div class="card-body">
-          <div class="row mb-3">
-            <div class="col-md-6">
-              <h6>Reference</h6>
-              <p class="mb-0"><%= @transaction.reference %></p>
+      </div>
+    </div>
+
+    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
+      <div class="bg-white overflow-hidden shadow rounded-lg">
+        <div class="px-4 py-5 sm:p-6">
+          <h3 class="text-lg font-medium text-gray-900 mb-4">Transaction Information</h3>
+          <dl class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Transaction ID</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @transaction.id %></dd>
             </div>
-            <div class="col-md-6">
-              <h6>Type</h6>
-              <p class="mb-0"><span class="badge bg-info"><%= String.replace(@transaction.type, "_", " ") |> String.upcase() %></span></p>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Type</dt>
+              <dd class="mt-1 text-sm text-gray-900">
+                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= transaction_type_class(@transaction.type) %>">
+                  <%= format_transaction_type(@transaction.type) %>
+                </span>
+              </dd>
             </div>
-          </div>
-
-          <div class="row mb-3">
-            <div class="col-md-6">
-              <h6>Amount</h6>
-              <p class="mb-0 fw-bold fs-5"><%= format_amount(@transaction.amount) %></p>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Phone Number</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= format_phone(@transaction.phone) %></dd>
             </div>
-            <div class="col-md-6">
-              <h6>Phone Number</h6>
-              <p class="mb-0"><%= format_phone(@transaction.phone) %></p>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Amount</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= format_amount(@transaction.amount) %></dd>
             </div>
-          </div>
-
-          <div class="row mb-3">
-            <div class="col-md-6">
-              <h6>M-Pesa Receipt Number</h6>
-              <p class="mb-0"><%= @transaction.mpesa_receipt_number || "-" %></p>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">M-Pesa Receipt Number</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @transaction.mpesa_receipt_number || "Not Available" %></dd>
             </div>
-            <div class="col-md-6">
-              <h6>Transaction Date</h6>
-              <p class="mb-0"><%= format_datetime(@transaction.transaction_date || @transaction.inserted_at) %></p>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Transaction Date</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= format_date_time(@transaction.transaction_date || @transaction.inserted_at) %></dd>
             </div>
-          </div>
-
-          <div class="row mb-3">
-            <div class="col-md-6">
-              <h6>Description</h6>
-              <p class="mb-0"><%= @transaction.description || "-" %></p>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Created At</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= format_date_time(@transaction.inserted_at) %></dd>
             </div>
-            <div class="col-md-6">
-              <h6>Result Code</h6>
-              <p class="mb-0"><%= @transaction.result_code || "-" %></p>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Last Updated</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= format_date_time(@transaction.updated_at) %></dd>
             </div>
-          </div>
+          </dl>
+        </div>
+      </div>
 
-          <div class="row">
-            <div class="col-md-12">
-              <h6>Result Description</h6>
-              <p class="mb-0"><%= @transaction.result_desc || "-" %></p>
+      <div class="bg-white overflow-hidden shadow rounded-lg">
+        <div class="px-4 py-5 sm:p-6">
+          <h3 class="text-lg font-medium text-gray-900 mb-4">Payment Details</h3>
+          <dl class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Payment Status</dt>
+              <dd class="mt-1 text-sm text-gray-900">
+                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= transaction_status_class(@transaction.status) %>">
+                  <%= format_transaction_status(@transaction.status) %>
+                </span>
+              </dd>
             </div>
-          </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Payment Method</dt>
+              <dd class="mt-1 text-sm text-gray-900">M-Pesa</dd>
+            </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Shortcode</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @transaction.shortcode %></dd>
+            </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Account Reference</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @transaction.account_reference || "Not Available" %></dd>
+            </div>
+            <div class="sm:col-span-2">
+              <dt class="text-sm font-medium text-gray-500">Description</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @transaction.description || "No description available" %></dd>
+            </div>
+          </dl>
         </div>
       </div>
+    </div>
 
-      <%= if @transaction.type == "stk_push" do %>
-        <div class="card mb-4">
-          <div class="card-header">
-            <h5 class="mb-0">STK Push Details</h5>
-          </div>
-          <div class="card-body">
-            <div class="row mb-3">
-              <div class="col-md-6">
-                <h6>Checkout Request ID</h6>
-                <p class="mb-0 text-break"><%= @transaction.checkout_request_id || "-" %></p>
-              </div>
-              <div class="col-md-6">
-                <h6>Merchant Request ID</h6>
-                <p class="mb-0 text-break"><%= @transaction.merchant_request_id || "-" %></p>
+    <%= if @transaction.invoice_id do %>
+      <div class="bg-white overflow-hidden shadow rounded-lg mb-6">
+        <div class="px-4 py-5 sm:p-6">
+          <h3 class="text-lg font-medium text-gray-900 mb-4">Invoice Information</h3>
+          <dl class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Invoice ID</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @transaction.invoice_id %></dd>
+            </div>
+            <div class="sm:col-span-1">
+              <dt class="text-sm font-medium text-gray-500">Invoice Number</dt>
+              <dd class="mt-1 text-sm text-gray-900"><%= @invoice && @invoice.invoice_number || "Not Available" %></dd>
+            </div>
+            <div class="sm:col-span-2">
+              <div class="mt-2">
+                <a href="<%= Routes.invoice_path(@conn, :show, @transaction.invoice_id) %>" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+                    <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd" />
+                  </svg>
+                  View Invoice
+                </a>
               </div>
             </div>
-          </div>
+          </dl>
         </div>
-      <% end %>
-    </div>
+      </div>
+    <% end %>
 
-    <div class="col-md-4">
-      <div class="card mb-4">
-        <div class="card-header">
-          <h5 class="mb-0">Transaction Timeline</h5>
-        </div>
-        <div class="card-body">
-          <ul class="list-group list-group-flush">
-            <li class="list-group-item px-0">
-              <div class="d-flex justify-content-between">
-                <div>
-                  <h6 class="mb-0">Created</h6>
-                  <small class="text-muted">Transaction initiated</small>
-                </div>
-                <small><%= format_datetime(@transaction.inserted_at) %></small>
+    <%= if @transaction.result_code || @transaction.result_desc do %>
+      <div class="bg-white overflow-hidden shadow rounded-lg mb-6">
+        <div class="px-4 py-5 sm:p-6">
+          <h3 class="text-lg font-medium text-gray-900 mb-4">Response Information</h3>
+          <dl class="grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2">
+            <%= if @transaction.result_code do %>
+              <div class="sm:col-span-1">
+                <dt class="text-sm font-medium text-gray-500">Result Code</dt>
+                <dd class="mt-1 text-sm text-gray-900"><%= @transaction.result_code %></dd>
               </div>
-            </li>
-
-            <%= if @transaction.transaction_date do %>
-              <li class="list-group-item px-0">
-                <div class="d-flex justify-content-between">
-                  <div>
-                    <h6 class="mb-0">Processed</h6>
-                    <small class="text-muted">
-                      <%= if @transaction.status == "completed" do %>
-                        Payment received
-                      <% else %>
-                        Payment <%= @transaction.status %>
-                      <% end %>
-                    </small>
-                  </div>
-                  <small><%= format_datetime(@transaction.transaction_date) %></small>
-                </div>
-              </li>
             <% end %>
-
-            <li class="list-group-item px-0">
-              <div class="d-flex justify-content-between">
-                <div>
-                  <h6 class="mb-0">Last Updated</h6>
-                  <small class="text-muted">Record updated</small>
-                </div>
-                <small><%= format_datetime(@transaction.updated_at) %></small>
+            <%= if @transaction.result_desc do %>
+              <div class="sm:col-span-<%= if @transaction.result_code, do: "1", else: "2" %>">
+                <dt class="text-sm font-medium text-gray-500">Result Description</dt>
+                <dd class="mt-1 text-sm text-gray-900"><%= @transaction.result_desc %></dd>
               </div>
-            </li>
-          </ul>
+            <% end %>
+          </dl>
         </div>
       </div>
+    <% end %>
 
-      <div class="card">
-        <div class="card-header">
-          <h5 class="mb-0">Actions</h5>
-        </div>
-        <div class="card-body">
-          <div class="d-grid gap-2">
-            <%= if @transaction.status == "pending" do %>
-              <button class="btn btn-outline-primary">Check Status</button>
-            <% end %>
-            <button class="btn btn-outline-secondary">Print Receipt</button>
+    <%= if @transaction.raw_response && @transaction.raw_response != "" && @transaction.raw_response != "{}" do %>
+      <div class="bg-white overflow-hidden shadow rounded-lg">
+        <div class="px-4 py-5 sm:p-6">
+          <h3 class="text-lg font-medium text-gray-900 mb-4">Raw Response</h3>
+          <div class="bg-gray-50 p-4 rounded-md">
+            <pre class="text-xs text-gray-700 overflow-x-auto"><%= format_json(@transaction.raw_response) %></pre>
           </div>
         </div>
       </div>
-    </div>
-  </div>
+    <% end %>
 
-  <div class="row mt-4">
-    <div class="col-12">
-      <div class="card">
-        <div class="card-header">
-          <h5 class="mb-0">Raw Response Data</h5>
-        </div>
-        <div class="card-body">
-          <div class="accordion" id="rawDataAccordion">
-            <div class="accordion-item">
-              <h2 class="accordion-header" id="headingResponse">
-                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseResponse" aria-expanded="false" aria-controls="collapseResponse">
-                  M-Pesa Response Payload
-                </button>
-              </h2>
-              <div id="collapseResponse" class="accordion-collapse collapse" aria-labelledby="headingResponse" data-bs-parent="#rawDataAccordion">
-                <div class="accordion-body">
-                  <pre class="mb-0"><code><%= Jason.encode!(@transaction.raw_response || %{}, pretty: true) %></code></pre>
-                </div>
-              </div>
-            </div>
-
-            <div class="accordion-item">
-              <h2 class="accordion-header" id="headingRequest">
-                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseRequest" aria-expanded="false" aria-controls="collapseRequest">
-                  M-Pesa Request Payload
-                </button>
-              </h2>
-              <div id="collapseRequest" class="accordion-collapse collapse" aria-labelledby="headingRequest" data-bs-parent="#rawDataAccordion">
-                <div class="accordion-body">
-                  <pre class="mb-0"><code><%= Jason.encode!(@transaction.raw_request || %{}, pretty: true) %></code></pre>
-                </div>
-              </div>
-            </div>
-          </div>
-        </div>
+    <div class="mt-6 flex justify-between">
+      <div>
+        <%= if @transaction.status == "pending" do %>
+          <a href="<%= Routes.mpesa_admin_path(@conn, :check_transaction_status, @transaction.id) %>" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+              <path fill-rule="evenodd" d="M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z" clip-rule="evenodd" />
+            </svg>
+            Check Status
+          </a>
+        <% end %>
       </div>
+      <a href="<%= Routes.mpesa_admin_path(@conn, :transactions, @clinic_id) %>" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+        Back to Transactions
+      </a>
     </div>
   </div>
 </div>
diff --git a/lib/clinicpro_web/templates/mpesa_admin/transactions.html.heex b/lib/clinicpro_web/templates/mpesa_admin/transactions.html.heex
index ba2de87..eeb567c 100644
--- a/lib/clinicpro_web/templates/mpesa_admin/transactions.html.heex
+++ b/lib/clinicpro_web/templates/mpesa_admin/transactions.html.heex
@@ -1,111 +1,188 @@
-<div class="container py-4">
-  <div class="d-flex justify-content-between align-items-center mb-4">
-    <h1>M-Pesa Transactions</h1>
-    <%= link "Back to Configuration", to: Routes.mpesa_admin_path(@conn, :index, @clinic_id), class: "btn btn-outline-secondary" %>
-  </div>
+<div class="container mx-auto px-4 py-8">
+  <div class="bg-white rounded-lg shadow-lg p-6">
+    <div class="flex justify-between items-center mb-6">
+      <h1 class="text-2xl font-bold">M-Pesa Transactions</h1>
+      <a href="<%= Routes.mpesa_admin_path(@conn, :index) %>" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+          <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
+        </svg>
+        Back to Dashboard
+      </a>
+    </div>
 
-  <div class="card mb-4">
-    <div class="card-header d-flex justify-content-between align-items-center">
-      <h5 class="mb-0"><%= @clinic_name %> - Transaction History</h5>
-      <div>
-        <div class="btn-group">
-          <button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
-            Filter by Status
-          </button>
-          <ul class="dropdown-menu">
-            <li><%= link "All", to: Routes.mpesa_admin_path(@conn, :transactions, @clinic_id), class: "dropdown-item" %></li>
-            <li><%= link "Pending", to: Routes.mpesa_admin_path(@conn, :transactions, @clinic_id, status: "pending"), class: "dropdown-item" %></li>
-            <li><%= link "Completed", to: Routes.mpesa_admin_path(@conn, :transactions, @clinic_id, status: "completed"), class: "dropdown-item" %></li>
-            <li><%= link "Failed", to: Routes.mpesa_admin_path(@conn, :transactions, @clinic_id, status: "failed"), class: "dropdown-item" %></li>
-          </ul>
+    <!-- Filter Form -->
+    <div class="mb-6 bg-gray-50 p-4 rounded-lg">
+      <h2 class="text-lg font-medium text-gray-900 mb-4">Filter Transactions</h2>
+      <%= form_for @conn, Routes.mpesa_admin_path(@conn, :transactions), [method: :get, class: "space-y-4 md:space-y-0 md:grid md:grid-cols-4 md:gap-4"], fn f -> %>
+        <div>
+          <label for="status" class="block text-sm font-medium text-gray-700 mb-1">Status</label>
+          <%= select f, :status, [{"All", ""}, {"Completed", "completed"}, {"Pending", "pending"}, {"Failed", "failed"}], selected: @filters["status"], class: "mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md" %>
+        </div>
+
+        <div>
+          <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
+          <%= text_input f, :phone, value: @filters["phone"], class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md", placeholder: "e.g., 254712345678" %>
         </div>
-        <div class="btn-group ms-2">
-          <button type="button" class="btn btn-outline-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
-            Filter by Type
+
+        <div>
+          <label for="reference" class="block text-sm font-medium text-gray-700 mb-1">Reference</label>
+          <%= text_input f, :reference, value: @filters["reference"], class: "mt-1 focus:ring-indigo-500 focus:border-indigo-500 block w-full shadow-sm sm:text-sm border-gray-300 rounded-md", placeholder: "Transaction Reference" %>
+        </div>
+
+        <div class="flex items-end">
+          <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
+              <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
+            </svg>
+            Filter
           </button>
-          <ul class="dropdown-menu">
-            <li><%= link "All", to: Routes.mpesa_admin_path(@conn, :transactions, @clinic_id), class: "dropdown-item" %></li>
-            <li><%= link "STK Push", to: Routes.mpesa_admin_path(@conn, :transactions, @clinic_id, type: "stk_push"), class: "dropdown-item" %></li>
-            <li><%= link "C2B", to: Routes.mpesa_admin_path(@conn, :transactions, @clinic_id, type: "c2b"), class: "dropdown-item" %></li>
-          </ul>
+          <%= if any_filters_active?(@filters) do %>
+            <a href="<%= Routes.mpesa_admin_path(@conn, :transactions) %>" class="ml-2 inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
+              Clear Filters
+            </a>
+          <% end %>
         </div>
-      </div>
+      <% end %>
     </div>
-    <div class="card-body">
-      <div class="table-responsive">
-        <table class="table table-striped table-hover">
-          <thead>
+
+    <!-- Transactions Table -->
+    <div class="overflow-x-auto mb-6">
+      <%= if Enum.empty?(@transactions) do %>
+        <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4">
+          <div class="flex">
+            <div class="flex-shrink-0">
+              <svg class="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
+                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
+              </svg>
+            </div>
+            <div class="ml-3">
+              <p class="text-sm text-yellow-700">
+                No transactions found. <%= if any_filters_active?(@filters), do: "Try adjusting your filters or clear them to see all transactions." %>
+              </p>
+            </div>
+          </div>
+        </div>
+      <% else %>
+        <table class="min-w-full divide-y divide-gray-200">
+          <thead class="bg-gray-50">
             <tr>
-              <th>Reference</th>
-              <th>Phone</th>
-              <th>Amount</th>
-              <th>Type</th>
-              <th>Status</th>
-              <th>Date</th>
-              <th>Receipt No.</th>
-              <th>Actions</th>
+              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Reference</th>
+              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Phone</th>
+              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Amount</th>
+              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
+              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
+              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
+              <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
             </tr>
           </thead>
-          <tbody>
-            <%= if Enum.empty?(@transactions) do %>
+          <tbody class="bg-white divide-y divide-gray-200">
+            <%= for transaction <- @transactions do %>
               <tr>
-                <td colspan="8" class="text-center py-4">
-                  <p class="text-muted mb-0">No transactions found.</p>
+                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
+                  <%= transaction.reference %>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
+                  <%= format_phone(transaction.phone) %>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
+                  <%= format_amount(transaction.amount) %>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= transaction_type_class(transaction.type) %>">
+                    <%= format_transaction_type(transaction.type) %>
+                  </span>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap">
+                  <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= transaction_status_class(transaction.status) %>">
+                    <%= format_transaction_status(transaction.status) %>
+                  </span>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
+                  <%= format_date(transaction.transaction_date || transaction.inserted_at) %>
+                </td>
+                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
+                  <a href="<%= Routes.mpesa_admin_path(@conn, :transaction_details, transaction.id) %>" class="text-indigo-600 hover:text-indigo-900">View</a>
                 </td>
               </tr>
-            <% else %>
-              <%= for transaction <- @transactions do %>
-                <tr>
-                  <td><%= transaction.reference %></td>
-                  <td><%= format_phone(transaction.phone) %></td>
-                  <td><%= format_amount(transaction.amount) %></td>
-                  <td><span class="badge bg-info"><%= String.replace(transaction.type, "_", " ") |> String.upcase() %></span></td>
-                  <td><span class="badge <%= status_class(transaction.status) %>"><%= format_status(transaction.status) %></span></td>
-                  <td><%= format_datetime(transaction.transaction_date || transaction.inserted_at) %></td>
-                  <td><%= transaction.mpesa_receipt_number || "-" %></td>
-                  <td>
-                    <%= link "View", to: Routes.mpesa_admin_path(@conn, :transaction_details, @clinic_id, transaction.id), class: "btn btn-sm btn-outline-primary" %>
-                  </td>
-                </tr>
-              <% end %>
             <% end %>
           </tbody>
         </table>
-      </div>
+      <% end %>
+    </div>
+
+    <!-- Pagination -->
+    <%= if @pagination.total_pages > 1 do %>
+      <div class="flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6">
+        <div class="flex flex-1 justify-between sm:hidden">
+          <%= if @pagination.prev_page do %>
+            <a href="<%= build_pagination_path(@conn, @filters, @pagination.prev_page) %>" class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Previous</a>
+          <% else %>
+            <span class="relative inline-flex items-center rounded-md border border-gray-300 bg-gray-100 px-4 py-2 text-sm font-medium text-gray-500">Previous</span>
+          <% end %>
+
+          <%= if @pagination.next_page do %>
+            <a href="<%= build_pagination_path(@conn, @filters, @pagination.next_page) %>" class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Next</a>
+          <% else %>
+            <span class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-gray-100 px-4 py-2 text-sm font-medium text-gray-500">Next</span>
+          <% end %>
+        </div>
 
-      <!-- Pagination -->
-      <%= if @total_count > 0 do %>
-        <div class="d-flex justify-content-between align-items-center mt-4">
+        <div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
           <div>
-            Showing <%= (@page - 1) * @per_page + 1 %> to <%= min(@page * @per_page, @total_count) %> of <%= @total_count %> transactions
+            <p class="text-sm text-gray-700">
+              Showing <span class="font-medium"><%= @pagination.start_item %></span> to <span class="font-medium"><%= @pagination.end_item %></span> of <span class="font-medium"><%= @pagination.total_items %></span> results
+            </p>
           </div>
-          <nav aria-label="Transaction pagination">
-            <ul class="pagination mb-0">
-              <%= if @page > 1 do %>
-                <li class="page-item">
-                  <%= link "Previous", to: Routes.mpesa_admin_path(@conn, :transactions, @clinic_id, page: @page - 1), class: "page-link" %>
-                </li>
+
+          <div>
+            <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
+              <%= if @pagination.prev_page do %>
+                <a href="<%= build_pagination_path(@conn, @filters, @pagination.prev_page) %>" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
+                  <span class="sr-only">Previous</span>
+                  <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
+                    <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
+                  </svg>
+                </a>
               <% else %>
-                <li class="page-item disabled">
-                  <span class="page-link">Previous</span>
-                </li>
+                <span class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-300 ring-1 ring-inset ring-gray-300 focus:outline-offset-0">
+                  <span class="sr-only">Previous</span>
+                  <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
+                    <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
+                  </svg>
+                </span>
               <% end %>
 
-              <%= pagination_links(@conn, @page, @total_count, @per_page) %>
+              <%= for page <- pagination_range(@pagination) do %>
+                <%= if page == @pagination.current_page do %>
+                  <span aria-current="page" class="relative z-10 inline-flex items-center bg-indigo-600 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
+                    <%= page %>
+                  </span>
+                <% else %>
+                  <a href="<%= build_pagination_path(@conn, @filters, page) %>" class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
+                    <%= page %>
+                  </a>
+                <% end %>
+              <% end %>
 
-              <%= if @page * @per_page < @total_count do %>
-                <li class="page-item">
-                  <%= link "Next", to: Routes.mpesa_admin_path(@conn, :transactions, @clinic_id, page: @page + 1), class: "page-link" %>
-                </li>
+              <%= if @pagination.next_page do %>
+                <a href="<%= build_pagination_path(@conn, @filters, @pagination.next_page) %>" class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
+                  <span class="sr-only">Next</span>
+                  <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
+                    <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
+                  </svg>
+                </a>
               <% else %>
-                <li class="page-item disabled">
-                  <span class="page-link">Next</span>
-                </li>
+                <span class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-300 ring-1 ring-inset ring-gray-300 focus:outline-offset-0">
+                  <span class="sr-only">Next</span>
+                  <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
+                    <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
+                  </svg>
+                </span>
               <% end %>
-            </ul>
-          </nav>
+            </nav>
+          </div>
         </div>
-      <% end %>
-    </div>
+      </div>
+    <% end %>
   </div>
 </div>
diff --git a/lib/clinicpro_web/views/invoice_view.ex b/lib/clinicpro_web/views/invoice_view.ex
new file mode 100644
index 0000000..ece94d2
--- /dev/null
+++ b/lib/clinicpro_web/views/invoice_view.ex
@@ -0,0 +1,98 @@
+defmodule ClinicproWeb.InvoiceView do
+  use ClinicproWeb, :view
+
+  # Explicitly import required modules
+  import Phoenix.HTML
+  import Phoenix.HTML.Form
+  # Remove direct import of Phoenix.HTML.Link
+  # import Phoenix.HTML.Link
+  import PhoenixHTMLHelpers.Tag
+
+  # Import phoenix_html_helpers which provides link functions
+  import PhoenixHTMLHelpers.Link
+
+  @doc """
+  Returns the appropriate CSS class for payment status display.
+  """
+  def payment_status_color(status) do
+    case status do
+      :paid -> "text-green-600"
+      :partial -> "text-yellow-600"
+      :pending -> "text-blue-600"
+      :failed -> "text-red-600"
+      _ -> "text-gray-600"
+    end
+  end
+
+  @doc """
+  Returns the appropriate CSS class for transaction status display.
+  """
+  def transaction_status_color(status) do
+    case status do
+      "completed" -> "bg-green-100 text-green-800"
+      "success" -> "bg-green-100 text-green-800"
+      "pending" -> "bg-blue-100 text-blue-800"
+      "processing" -> "bg-blue-100 text-blue-800"
+      "failed" -> "bg-red-100 text-red-800"
+      "cancelled" -> "bg-gray-100 text-gray-800"
+      _ -> "bg-gray-100 text-gray-800"
+    end
+  end
+
+  @doc """
+  Formats a phone number for display.
+  """
+  def format_phone_number(nil), do: "-"
+
+  def format_phone_number(phone) do
+    # Format phone number as +XXX XXX XXX XXX if it starts with a country code
+    if String.starts_with?(phone, "254") do
+      "+#{String.slice(phone, 0, 3)} #{String.slice(phone, 3, 3)} #{String.slice(phone, 6, 3)} #{String.slice(phone, 9, 3)}"
+    else
+      phone
+    end
+  end
+
+  @doc """
+  Formats a date for display.
+  """
+  def format_date(nil), do: "-"
+
+  def format_date(%DateTime{} = date) do
+    Calendar.strftime(date, "%d %b %Y, %H:%M:%S")
+  end
+
+  def format_date(%NaiveDateTime{} = date) do
+    Calendar.strftime(date, "%d %b %Y, %H:%M:%S")
+  end
+
+  def format_date(date), do: date
+
+  @doc """
+  Formats an amount for display.
+  """
+  def format_amount(nil), do: "-"
+
+  def format_amount(amount) when is_float(amount) do
+    "KES #{:erlang.float_to_binary(amount, decimals: 2)}"
+  end
+
+  def format_amount(amount) when is_integer(amount) do
+    "KES #{amount}.00"
+  end
+
+  def format_amount(amount), do: "KES #{amount}"
+
+  @doc """
+  Returns a human-readable description of the payment status.
+  """
+  def payment_status_description(status) do
+    case status do
+      :paid -> "Payment completed"
+      :partial -> "Partially paid"
+      :pending -> "Payment pending"
+      :failed -> "Payment failed"
+      _ -> "Unknown status"
+    end
+  end
+end
diff --git a/lib/clinicpro_web/views/mpesa_admin_view.ex b/lib/clinicpro_web/views/mpesa_admin_view.ex
index 64df453..396c5a0 100644
--- a/lib/clinicpro_web/views/mpesa_admin_view.ex
+++ b/lib/clinicpro_web/views/mpesa_admin_view.ex
@@ -1,164 +1,316 @@
 defmodule ClinicproWeb.MPesaAdminView do
-  # Temporarily use a minimal view definition to avoid circular dependencies
-  use Phoenix.View,
-    root: "lib/clinicpro_web/templates",
-    namespace: ClinicproWeb
+  use ClinicproWeb, :view
+
+  # Explicitly import required modules
+  import Phoenix.HTML
+  import Phoenix.HTML.Form
+  import PhoenixHTMLHelpers.Tag
+  import PhoenixHTMLHelpers.Link
 
   @doc """
-  Returns a formatted string for the transaction status.
+  Returns the appropriate CSS class for configuration status display.
   """
-  def format_status("pending"), do: "Pending"
-  def format_status("completed"), do: "Completed"
-  def format_status("failed"), do: "Failed"
-  def format_status(status), do: String.capitalize(status)
+  def config_status_class(active) do
+    if active, do: "bg-green-100 text-green-800", else: "bg-red-100 text-red-800"
+  end
 
   @doc """
-  Returns a CSS class for the transaction status.
+  Returns the appropriate text for configuration status display.
   """
-  def status_class("pending"), do: "bg-warning text-dark"
-  def status_class("completed"), do: "bg-success text-white"
-  def status_class("failed"), do: "bg-danger text-white"
-  def status_class(_), do: "bg-secondary text-white"
+  def config_status_text(active) do
+    if active, do: "Active", else: "Inactive"
+  end
 
   @doc """
-  Formats a decimal amount with currency.
+  Returns the appropriate CSS class for transaction status display.
   """
-  def format_amount(amount) when is_nil(amount), do: "-"
-
-  def format_amount(amount) do
-    "KES #{Decimal.round(amount, 2)}"
+  def transaction_status_class(status) do
+    case status do
+      "completed" -> "bg-green-100 text-green-800"
+      "success" -> "bg-green-100 text-green-800"
+      "pending" -> "bg-blue-100 text-blue-800"
+      "processing" -> "bg-blue-100 text-blue-800"
+      "failed" -> "bg-red-100 text-red-800"
+      "cancelled" -> "bg-gray-100 text-gray-800"
+      _ -> "bg-gray-100 text-gray-800"
+    end
   end
 
   @doc """
-  Formats a datetime in a readable format.
+  Returns the appropriate CSS class for callback type display.
   """
-  def format_datetime(nil), do: "-"
+  def callback_type_class(type) do
+    case type do
+      "stk_push" -> "bg-purple-100 text-purple-800"
+      "c2b_validation" -> "bg-blue-100 text-blue-800"
+      "c2b_confirmation" -> "bg-indigo-100 text-indigo-800"
+      "transaction_status" -> "bg-yellow-100 text-yellow-800"
+      _ -> "bg-gray-100 text-gray-800"
+    end
+  end
 
-  def format_datetime(datetime) do
-    Calendar.strftime(datetime, "%d %b %Y, %H:%M:%S")
+  @doc """
+  Formats a callback type for display.
+  """
+  def format_callback_type(type) do
+    case type do
+      "stk_push" -> "STK Push"
+      "c2b_validation" -> "C2B Validation"
+      "c2b_confirmation" -> "C2B Confirmation"
+      "transaction_status" -> "Transaction Status"
+      _ -> String.replace(type || "", "_", " ") |> String.capitalize()
+    end
   end
 
   @doc """
-  Formats a phone number for display.
+  Formats a date for display.
   """
-  def format_phone(nil), do: "-"
+  def format_date(nil), do: "-"
+
+  def format_date(%DateTime{} = date) do
+    Calendar.strftime(date, "%d %b %Y, %H:%M:%S")
+  end
 
-  def format_phone("254" <> rest = _phone) do
-    "+254 #{String.slice(rest, 0, 3)} #{String.slice(rest, 3, 3)} #{String.slice(rest, 6, 10)}"
+  def format_date(%NaiveDateTime{} = date) do
+    Calendar.strftime(date, "%d %b %Y, %H:%M:%S")
   end
 
-  def format_phone(phone), do: phone
+  def format_date(date), do: date
 
   @doc """
-  Returns pagination links for transactions.
+  Formats a date and time for display.
   """
-  # Temporarily commented out to fix compilation issues
-  # def pagination_links(conn, page, total_count, per_page) do
-  #   total_pages = ceil(total_count / per_page)
-  # 
-  #   # Preserve any existing query parameters
-  #   query_params = Map.drop(conn.params, ["clinic_id", "page"])
-  # 
-  #   for p <- max(1, page - 2)..min(total_pages, page + 2) do
-  #     Phoenix.HTML.Tag.content_tag :li, class: if(p == page, do: "page-item active", else: "page-item") do
-  #       Phoenix.HTML.Link.link to:
-  #              Routes.mpesa_admin_path(
-  #                conn,
-  #                :transactions,
-  #                conn.params["clinic_id"],
-  #                Map.put(query_params, :page, p)
-  #              ),
-  #            class: "page-link" do
-  #         "#{p}"
-  #       end
-  #     end
-  #   end
-  # end
-  
-  # Simple placeholder function to avoid compilation errors
-  def pagination_links(_conn, _page, _total_count, _per_page) do
-    []
+  def format_date_time(nil), do: "-"
+
+  def format_date_time(%DateTime{} = date) do
+    Calendar.strftime(date, "%d %b %Y, %H:%M:%S")
   end
 
+  def format_date_time(%NaiveDateTime{} = date) do
+    Calendar.strftime(date, "%d %b %Y, %H:%M:%S")
+  end
+
+  def format_date_time(date), do: date
+
   @doc """
-  Masks sensitive information for display.
+  Formats an amount for display.
   """
-  def mask_sensitive(nil), do: nil
+  def format_amount(nil), do: "-"
 
-  def mask_sensitive(value) when is_binary(value) do
-    if String.length(value) > 4 do
-      first_chars = String.slice(value, 0, 2)
-      last_chars = String.slice(value, -2, 2)
-      middle_length = String.length(value) - 4
-
-      first_chars <> String.duplicate("*", middle_length) <> last_chars
-    else
-      "****"
-    end
+  def format_amount(amount) when is_float(amount) do
+    "KES #{:erlang.float_to_binary(amount, decimals: 2)}"
   end
 
-  @doc """
-  Formats transaction statistics for display.
-  """
-  def format_stats(nil),
-    do: %{
-      total_count: 0,
-      completed_count: 0,
-      pending_count: 0,
-      failed_count: 0,
-      total_amount: Decimal.new(0)
-    }
-
-  def format_stats(stats) do
-    stats
-    |> Map.put(:total_amount_formatted, format_amount(stats.total_amount))
-    |> Map.put(
-      :completed_percentage,
-      calculate_percentage(stats.completed_count, stats.total_count)
-    )
-    |> Map.put(:pending_percentage, calculate_percentage(stats.pending_count, stats.total_count))
-    |> Map.put(:failed_percentage, calculate_percentage(stats.failed_count, stats.total_count))
+  def format_amount(amount) when is_integer(amount) do
+    "KES #{amount}.00"
   end
 
+  def format_amount(amount), do: "KES #{amount}"
+
   @doc """
-  Calculates percentage for statistics.
+  Formats JSON for display.
   """
-  def calculate_percentage(_count, 0), do: 0
+  def format_json(nil), do: "No data available"
 
-  def calculate_percentage(count, total) do
-    Float.round(count / total * 100, 1)
+  def format_json(json) when is_binary(json) do
+    case Jason.decode(json) do
+      {:ok, decoded} ->
+        Jason.encode!(decoded, pretty: true)
+
+      _ ->
+        json
+    end
+  end
+
+  def format_json(data) do
+    case Jason.encode(data, pretty: true) do
+      {:ok, encoded} -> encoded
+      _ -> inspect(data)
+    end
   end
 
   @doc """
-  Returns a CSS class for the environment badge.
+  Masks sensitive data for display.
   """
-  def environment_class("sandbox"), do: "bg-info text-white"
-  def environment_class("production"), do: "bg-danger text-white"
-  def environment_class(_), do: "bg-secondary text-white"
+  def mask_sensitive(nil), do: "-"
+
+  def mask_sensitive(value) when is_binary(value) do
+    cond do
+      String.length(value) <= 4 ->
+        String.duplicate("*", String.length(value))
+
+      String.length(value) <= 8 ->
+        "#{String.slice(value, 0, 2)}#{String.duplicate("*", String.length(value) - 4)}#{String.slice(value, -2, 2)}"
+
+      true ->
+        "#{String.slice(value, 0, 4)}#{String.duplicate("*", String.length(value) - 8)}#{String.slice(value, -4, 4)}"
+    end
+  end
+
+  def mask_sensitive(value), do: value
 
   @doc """
-  Returns a formatted string for the transaction type.
+  Returns the environment name with appropriate styling.
   """
-  def format_type("stk_push"), do: "STK PUSH"
-  def format_type("c2b"), do: "C2B"
+  def environment_badge(env) do
+    case env do
+      "production" ->
+        content_tag(:span, "Production",
+          class:
+            "px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800"
+        )
 
-  def format_type(type) when is_binary(type),
-    do: String.replace(type, "_", " ") |> String.upcase()
+      "sandbox" ->
+        content_tag(:span, "Sandbox",
+          class:
+            "px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800"
+        )
 
-  def format_type(_), do: "UNKNOWN"
+      _ ->
+        content_tag(:span, env,
+          class:
+            "px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800"
+        )
+    end
+  end
 
   @doc """
-  Returns a shortened version of a string for display.
+  Returns pagination links for transaction listing.
   """
-  def truncate(nil, _), do: "-"
+  def pagination_links(conn, params, total_pages) do
+    current_page = Map.get(params, "page", "1") |> String.to_integer()
 
-  def truncate(string, length) when is_binary(string) do
-    if String.length(string) > length do
-      "#{String.slice(string, 0, length)}..."
-    else
-      string
+    content_tag :div,
+      class: "flex items-center justify-between border-t border-gray-200 px-4 py-3 sm:px-6" do
+      [
+        content_tag(:div, class: "flex flex-1 justify-between sm:hidden") do
+          [
+            if current_page > 1 do
+              link("Previous",
+                to:
+                  Routes.mpesa_admin_path(
+                    conn,
+                    :transactions,
+                    Map.put(params, "page", current_page - 1)
+                  ),
+                class:
+                  "relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
+              )
+            else
+              content_tag(:span, "Previous",
+                class:
+                  "relative inline-flex items-center rounded-md border border-gray-300 bg-gray-100 px-4 py-2 text-sm font-medium text-gray-500"
+              )
+            end,
+            if current_page < total_pages do
+              link("Next",
+                to:
+                  Routes.mpesa_admin_path(
+                    conn,
+                    :transactions,
+                    Map.put(params, "page", current_page + 1)
+                  ),
+                class:
+                  "relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50"
+              )
+            else
+              content_tag(:span, "Next",
+                class:
+                  "relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-gray-100 px-4 py-2 text-sm font-medium text-gray-500"
+              )
+            end
+          ]
+        end,
+        content_tag(:div, class: "hidden sm:flex sm:flex-1 sm:items-center sm:justify-between") do
+          [
+            content_tag(:div) do
+              content_tag(:p, class: "text-sm text-gray-700") do
+                [
+                  "Showing ",
+                  content_tag(:span, class: "font-medium") do
+                    "#{(current_page - 1) * 20 + 1}"
+                  end,
+                  " to ",
+                  content_tag(:span, class: "font-medium") do
+                    "#{min(current_page * 20, total_pages * 20)}"
+                  end,
+                  " of ",
+                  content_tag(:span, class: "font-medium") do
+                    "#{total_pages * 20}"
+                  end,
+                  " results"
+                ]
+              end
+            end,
+            content_tag(:div) do
+              content_tag(:nav,
+                class: "isolate inline-flex -space-x-px rounded-md shadow-sm",
+                "aria-label": "Pagination"
+              ) do
+                [
+                  if current_page > 1 do
+                    link to:
+                           Routes.mpesa_admin_path(
+                             conn,
+                             :transactions,
+                             Map.put(params, "page", current_page - 1)
+                           ),
+                         class:
+                           "relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0" do
+                      content_tag(:span, "Previous", class: "sr-only")
+                    end
+                  else
+                    content_tag(:span,
+                      class:
+                        "relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 focus:outline-offset-0"
+                    ) do
+                      content_tag(:span, "Previous", class: "sr-only")
+                    end
+                  end,
+                  for page <- max(1, current_page - 2)..min(total_pages, current_page + 2) do
+                    if page == current_page do
+                      content_tag(:span, "#{page}",
+                        class:
+                          "relative z-10 inline-flex items-center bg-indigo-600 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
+                      )
+                    else
+                      link("#{page}",
+                        to:
+                          Routes.mpesa_admin_path(
+                            conn,
+                            :transactions,
+                            Map.put(params, "page", page)
+                          ),
+                        class:
+                          "relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0"
+                      )
+                    end
+                  end,
+                  if current_page < total_pages do
+                    link to:
+                           Routes.mpesa_admin_path(
+                             conn,
+                             :transactions,
+                             Map.put(params, "page", current_page + 1)
+                           ),
+                         class:
+                           "relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0" do
+                      content_tag(:span, "Next", class: "sr-only")
+                    end
+                  else
+                    content_tag(:span,
+                      class:
+                        "relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 focus:outline-offset-0"
+                    ) do
+                      content_tag(:span, "Next", class: "sr-only")
+                    end
+                  end
+                ]
+              end
+            end
+          ]
+        end
+      ]
     end
   end
-
-  def truncate(_, _), do: "-"
 end
diff --git a/mix.exs b/mix.exs
index 619d9a4..8a7b9cc 100644
--- a/mix.exs
+++ b/mix.exs
@@ -9,7 +9,18 @@ defmodule Clinicpro.MixProject do
       elixirc_paths: elixirc_paths(Mix.env()),
       start_permanent: Mix.env() == :prod,
       aliases: aliases(),
-      deps: deps()
+      deps: deps(),
+      # Coveralls configuration
+      test_coverage: [
+        tool: ExCoveralls
+      ],
+      preferred_cli_env: [
+        coveralls: :test,
+        "coveralls.detail": :test,
+        "coveralls.post": :test,
+        "coveralls.html": :test,
+        "coveralls.json": :test
+      ]
     ]
   end
 
@@ -97,7 +108,12 @@ defmodule Clinicpro.MixProject do
       {:goth, "~> 1.3"},
 
       # HTTP Client for API Integration
-      {:oauth2, "~> 2.0"}
+      {:oauth2, "~> 2.0"},
+      {:ex_typesense, "~> 0.6.0"},
+      
+      # Code quality and test coverage
+      {:credo, "~> 1.7", only: [:dev, :test], runtime: false},
+      {:excoveralls, "~> 0.18", only: :test}
     ]
   end
 
diff --git a/mix.lock b/mix.lock
index a8aa0d4..409a9f8 100644
--- a/mix.lock
+++ b/mix.lock
@@ -10,11 +10,13 @@
   "assent": {:hex, :assent, "0.3.1", "7e7b04f4ab5d07b497b80c04f009a0f1efc409787e68b8e086512b9098f3095b", [:mix], [{:certifi, ">= 0.0.0", [hex: :certifi, repo: "hexpm", optional: true]}, {:finch, "~> 0.15", [hex: :finch, repo: "hexpm", optional: true]}, {:jose, "~> 1.8", [hex: :jose, repo: "hexpm", optional: true]}, {:req, "~> 0.4", [hex: :req, repo: "hexpm", optional: true]}, {:ssl_verify_fun, ">= 0.0.0", [hex: :ssl_verify_fun, repo: "hexpm", optional: true]}], "hexpm", "3597b31f9eb556d97e64cf60c00d3451f7353d7b465a71d33530b870ebed1ff1"},
   "bandit": {:hex, :bandit, "1.7.0", "d1564f30553c97d3e25f9623144bb8df11f3787a26733f00b21699a128105c0c", [:mix], [{:hpax, "~> 1.0", [hex: :hpax, repo: "hexpm", optional: false]}, {:plug, "~> 1.18", [hex: :plug, repo: "hexpm", optional: false]}, {:telemetry, "~> 0.4 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}, {:thousand_island, "~> 1.0", [hex: :thousand_island, repo: "hexpm", optional: false]}, {:websock, "~> 0.5", [hex: :websock, repo: "hexpm", optional: false]}], "hexpm", "3e2f7a98c7a11f48d9d8c037f7177cd39778e74d55c7af06fe6227c742a8168a"},
   "bcrypt_elixir": {:hex, :bcrypt_elixir, "3.3.2", "d50091e3c9492d73e17fc1e1619a9b09d6a5ef99160eb4d736926fd475a16ca3", [:make, :mix], [{:comeonin, "~> 5.3", [hex: :comeonin, repo: "hexpm", optional: false]}, {:elixir_make, "~> 0.6", [hex: :elixir_make, repo: "hexpm", optional: false]}], "hexpm", "471be5151874ae7931911057d1467d908955f93554f7a6cd1b7d804cac8cef53"},
+  "bunt": {:hex, :bunt, "1.0.0", "081c2c665f086849e6d57900292b3a161727ab40431219529f13c4ddcf3e7a44", [:mix], [], "hexpm", "dc5f86aa08a5f6fa6b8096f0735c4e76d54ae5c9fa2c143e5a1fc7c1cd9bb6b5"},
   "castore": {:hex, :castore, "1.0.14", "4582dd7d630b48cf5e1ca8d3d42494db51e406b7ba704e81fbd401866366896a", [:mix], [], "hexpm", "7bc1b65249d31701393edaaac18ec8398d8974d52c647b7904d01b964137b9f4"},
   "certifi": {:hex, :certifi, "2.15.0", "0e6e882fcdaaa0a5a9f2b3db55b1394dba07e8d6d9bcad08318fb604c6839712", [:rebar3], [], "hexpm", "b147ed22ce71d72eafdad94f055165c1c182f61a2ff49df28bcc71d1d5b94a60"},
   "comeonin": {:hex, :comeonin, "5.5.1", "5113e5f3800799787de08a6e0db307133850e635d34e9fab23c70b6501669510", [:mix], [], "hexpm", "65aac8f19938145377cee73973f192c5645873dcf550a8a6b18187d17c13ccdb"},
   "comparable": {:hex, :comparable, "1.0.0", "bb669e91cedd14ae9937053e5bcbc3c52bb2f22422611f43b6e38367d94a495f", [:mix], [{:typable, "~> 0.1", [hex: :typable, repo: "hexpm", optional: false]}], "hexpm", "277c11eeb1cd726e7cd41c6c199e7e52fa16ee6830b45ad4cdc62e51f62eb60c"},
   "conv_case": {:hex, :conv_case, "0.2.3", "c1455c27d3c1ffcdd5f17f1e91f40b8a0bc0a337805a6e8302f441af17118ed8", [:mix], [], "hexpm", "88f29a3d97d1742f9865f7e394ed3da011abb7c5e8cc104e676fdef6270d4b4a"},
+  "credo": {:hex, :credo, "1.7.12", "9e3c20463de4b5f3f23721527fcaf16722ec815e70ff6c60b86412c695d426c1", [:mix], [{:bunt, "~> 0.2.1 or ~> 1.0", [hex: :bunt, repo: "hexpm", optional: false]}, {:file_system, "~> 0.2 or ~> 1.0", [hex: :file_system, repo: "hexpm", optional: false]}, {:jason, "~> 1.0", [hex: :jason, repo: "hexpm", optional: false]}], "hexpm", "8493d45c656c5427d9c729235b99d498bd133421f3e0a683e5c1b561471291e5"},
   "db_connection": {:hex, :db_connection, "2.8.0", "64fd82cfa6d8e25ec6660cea73e92a4cbc6a18b31343910427b702838c4b33b2", [:mix], [{:telemetry, "~> 0.4 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "008399dae5eee1bf5caa6e86d204dcb44242c82b1ed5e22c881f2c34da201b15"},
   "decimal": {:hex, :decimal, "2.3.0", "3ad6255aa77b4a3c4f818171b12d237500e63525c2fd056699967a3e7ea20f62", [:mix], [], "hexpm", "a4d66355cb29cb47c3cf30e71329e58361cfcb37c34235ef3bf1d7bf3773aeac"},
   "dns_cluster": {:hex, :dns_cluster, "0.1.3", "0bc20a2c88ed6cc494f2964075c359f8c2d00e1bf25518a6a6c7fd277c9b0c66", [:mix], [], "hexpm", "46cb7c4a1b3e52c7ad4cbe33ca5079fbde4840dedeafca2baf77996c2da1bc33"},
@@ -24,11 +26,16 @@
   "elixir_make": {:hex, :elixir_make, "0.9.0", "6484b3cd8c0cee58f09f05ecaf1a140a8c97670671a6a0e7ab4dc326c3109726", [:mix], [], "hexpm", "db23d4fd8b757462ad02f8aa73431a426fe6671c80b200d9710caf3d1dd0ffdb"},
   "esbuild": {:hex, :esbuild, "0.10.0", "b0aa3388a1c23e727c5a3e7427c932d89ee791746b0081bbe56103e9ef3d291f", [:mix], [{:jason, "~> 1.4", [hex: :jason, repo: "hexpm", optional: false]}], "hexpm", "468489cda427b974a7cc9f03ace55368a83e1a7be12fba7e30969af78e5f8c70"},
   "ets": {:hex, :ets, "0.9.0", "79c6a6c205436780486f72d84230c6cba2f8a9920456750ddd1e47389107d5fd", [:mix], [], "hexpm", "2861fdfb04bcaeff370f1a5904eec864f0a56dcfebe5921ea9aadf2a481c822b"},
+  "ex_typesense": {:hex, :ex_typesense, "0.6.0", "f0f9d00416945fdafb1f48853c938d03b3870b1d5a5c5189ed01a739c51b0d44", [:mix], [{:ecto, "~> 3.11", [hex: :ecto, repo: "hexpm", optional: false]}, {:req, "~> 0.5", [hex: :req, repo: "hexpm", optional: false]}], "hexpm", "48986bd39166029510a69cd0106572574d091f0a2595ebdf871543430625535c"},
+  "excoveralls": {:hex, :excoveralls, "0.18.5", "e229d0a65982613332ec30f07940038fe451a2e5b29bce2a5022165f0c9b157e", [:mix], [{:castore, "~> 1.0", [hex: :castore, repo: "hexpm", optional: true]}, {:jason, "~> 1.0", [hex: :jason, repo: "hexpm", optional: false]}], "hexpm", "523fe8a15603f86d64852aab2abe8ddbd78e68579c8525ae765facc5eae01562"},
   "expo": {:hex, :expo, "1.1.0", "f7b9ed7fb5745ebe1eeedf3d6f29226c5dd52897ac67c0f8af62a07e661e5c75", [:mix], [], "hexpm", "fbadf93f4700fb44c331362177bdca9eeb8097e8b0ef525c9cc501cb9917c960"},
   "file_system": {:hex, :file_system, "1.1.0", "08d232062284546c6c34426997dd7ef6ec9f8bbd090eb91780283c9016840e8f", [:mix], [], "hexpm", "bfcf81244f416871f2a2e15c1b515287faa5db9c6bcf290222206d120b3d43f6"},
   "finch": {:hex, :finch, "0.18.0", "944ac7d34d0bd2ac8998f79f7a811b21d87d911e77a786bc5810adb75632ada4", [:mix], [{:castore, "~> 0.1 or ~> 1.0", [hex: :castore, repo: "hexpm", optional: false]}, {:mime, "~> 1.0 or ~> 2.0", [hex: :mime, repo: "hexpm", optional: false]}, {:mint, "~> 1.3", [hex: :mint, repo: "hexpm", optional: false]}, {:nimble_options, "~> 0.4 or ~> 1.0", [hex: :nimble_options, repo: "hexpm", optional: false]}, {:nimble_pool, "~> 0.2.6 or ~> 1.0", [hex: :nimble_pool, repo: "hexpm", optional: false]}, {:telemetry, "~> 0.4 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "69f5045b042e531e53edc2574f15e25e735b522c37e2ddb766e15b979e03aa65"},
   "floki": {:hex, :floki, "0.38.0", "62b642386fa3f2f90713f6e231da0fa3256e41ef1089f83b6ceac7a3fd3abf33", [:mix], [], "hexpm", "a5943ee91e93fb2d635b612caf5508e36d37548e84928463ef9dd986f0d1abd9"},
   "gettext": {:hex, :gettext, "0.26.2", "5978aa7b21fada6deabf1f6341ddba50bc69c999e812211903b169799208f2a8", [:mix], [{:expo, "~> 0.5.1 or ~> 1.0", [hex: :expo, repo: "hexpm", optional: false]}], "hexpm", "aa978504bcf76511efdc22d580ba08e2279caab1066b76bb9aa81c4a1e0a32a5"},
+  "google_api_calendar": {:hex, :google_api_calendar, "0.26.0", "2ad3bddc164f3cb8f30ff24ff7205c3aa70e2b6ed31a72481a3f55dab816c9ba", [:mix], [{:google_gax, "~> 0.4", [hex: :google_gax, repo: "hexpm", optional: false]}], "hexpm", "0909a03bdb9162405bc94081dc6c0928da4f1d2af823f9246679b614fdadf2eb"},
+  "google_gax": {:hex, :google_gax, "0.4.0", "83651f8561c02a295826cb96b4bddde030e2369747bbddc592c4569526bafe94", [:mix], [{:poison, ">= 3.0.0 and < 5.0.0", [hex: :poison, repo: "hexpm", optional: false]}, {:tesla, "~> 1.2", [hex: :tesla, repo: "hexpm", optional: false]}], "hexpm", "a95d36f1dd753ab31268dd8bb6de9911243c911cfda9080f64778f6297b9ac57"},
+  "goth": {:hex, :goth, "1.4.5", "ee37f96e3519bdecd603f20e7f10c758287088b6d77c0147cd5ee68cf224aade", [:mix], [{:finch, "~> 0.17", [hex: :finch, repo: "hexpm", optional: false]}, {:jason, "~> 1.1", [hex: :jason, repo: "hexpm", optional: false]}, {:jose, "~> 1.11", [hex: :jose, repo: "hexpm", optional: false]}], "hexpm", "0fc2dce5bd710651ed179053d0300ce3a5d36afbdde11e500d57f05f398d5ed5"},
   "hackney": {:hex, :hackney, "1.24.1", "f5205a125bba6ed4587f9db3cc7c729d11316fa8f215d3e57ed1c067a9703fa9", [:rebar3], [{:certifi, "~> 2.15.0", [hex: :certifi, repo: "hexpm", optional: false]}, {:idna, "~> 6.1.0", [hex: :idna, repo: "hexpm", optional: false]}, {:metrics, "~> 1.0.0", [hex: :metrics, repo: "hexpm", optional: false]}, {:mimerl, "~> 1.4", [hex: :mimerl, repo: "hexpm", optional: false]}, {:parse_trans, "3.4.1", [hex: :parse_trans, repo: "hexpm", optional: false]}, {:ssl_verify_fun, "~> 1.1.0", [hex: :ssl_verify_fun, repo: "hexpm", optional: false]}, {:unicode_util_compat, "~> 0.7.0", [hex: :unicode_util_compat, repo: "hexpm", optional: false]}], "hexpm", "f4a7392a0b53d8bbc3eb855bdcc919cd677358e65b2afd3840b5b3690c4c8a39"},
   "heroicons": {:git, "https://github.com/tailwindlabs/heroicons.git", "88ab3a0d790e6a47404cba02800a6b25d2afae50", [tag: "v2.1.1", sparse: "optimized"]},
   "hpax": {:hex, :hpax, "1.0.3", "ed67ef51ad4df91e75cc6a1494f851850c0bd98ebc0be6e81b026e765ee535aa", [:mix], [], "hexpm", "8eab6e1cfa8d5918c2ce4ba43588e894af35dbd8e91e6e55c817bca5847df34a"},
@@ -49,6 +56,7 @@
   "nimble_ownership": {:hex, :nimble_ownership, "1.0.1", "f69fae0cdd451b1614364013544e66e4f5d25f36a2056a9698b793305c5aa3a6", [:mix], [], "hexpm", "3825e461025464f519f3f3e4a1f9b68c47dc151369611629ad08b636b73bb22d"},
   "nimble_pool": {:hex, :nimble_pool, "1.1.0", "bf9c29fbdcba3564a8b800d1eeb5a3c58f36e1e11d7b7fb2e084a643f645f06b", [:mix], [], "hexpm", "af2e4e6b34197db81f7aad230c1118eac993acc0dae6bc83bac0126d4ae0813a"},
   "nimble_totp": {:hex, :nimble_totp, "1.0.0", "79753bae6ce59fd7cacdb21501a1dbac249e53a51c4cd22b34fa8438ee067283", [:mix], [], "hexpm", "6ce5e4c068feecdb782e85b18237f86f66541523e6bad123e02ee1adbe48eda9"},
+  "oauth2": {:hex, :oauth2, "2.1.0", "beb657f393814a3a7a8a15bd5e5776ecae341fd344df425342a3b6f1904c2989", [:mix], [{:tesla, "~> 1.5", [hex: :tesla, repo: "hexpm", optional: false]}], "hexpm", "8ac07f85b3307dd1acfeb0ec852f64161b22f57d0ce0c15e616a1dfc8ebe2b41"},
   "parse_trans": {:hex, :parse_trans, "3.4.1", "6e6aa8167cb44cc8f39441d05193be6e6f4e7c2946cb2759f015f8c56b76e5ff", [:rebar3], [], "hexpm", "620a406ce75dada827b82e453c19cf06776be266f5a67cff34e1ef2cbb60e49a"},
   "phoenix": {:hex, :phoenix, "1.7.21", "14ca4f1071a5f65121217d6b57ac5712d1857e40a0833aff7a691b7870fc9a3b", [:mix], [{:castore, ">= 0.0.0", [hex: :castore, repo: "hexpm", optional: false]}, {:jason, "~> 1.0", [hex: :jason, repo: "hexpm", optional: true]}, {:phoenix_pubsub, "~> 2.1", [hex: :phoenix_pubsub, repo: "hexpm", optional: false]}, {:phoenix_template, "~> 1.0", [hex: :phoenix_template, repo: "hexpm", optional: false]}, {:phoenix_view, "~> 2.0", [hex: :phoenix_view, repo: "hexpm", optional: true]}, {:plug, "~> 1.14", [hex: :plug, repo: "hexpm", optional: false]}, {:plug_cowboy, "~> 2.7", [hex: :plug_cowboy, repo: "hexpm", optional: true]}, {:plug_crypto, "~> 1.2 or ~> 2.0", [hex: :plug_crypto, repo: "hexpm", optional: false]}, {:telemetry, "~> 0.4 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}, {:websock_adapter, "~> 0.5.3", [hex: :websock_adapter, repo: "hexpm", optional: false]}], "hexpm", "336dce4f86cba56fed312a7d280bf2282c720abb6074bdb1b61ec8095bdd0bc9"},
   "phoenix_ecto": {:hex, :phoenix_ecto, "4.6.5", "c4ef322acd15a574a8b1a08eff0ee0a85e73096b53ce1403b6563709f15e1cea", [:mix], [{:ecto, "~> 3.5", [hex: :ecto, repo: "hexpm", optional: false]}, {:phoenix_html, "~> 2.14.2 or ~> 3.0 or ~> 4.1", [hex: :phoenix_html, repo: "hexpm", optional: true]}, {:plug, "~> 1.9", [hex: :plug, repo: "hexpm", optional: false]}, {:postgrex, "~> 0.16 or ~> 1.0", [hex: :postgrex, repo: "hexpm", optional: true]}], "hexpm", "26ec3208eef407f31b748cadd044045c6fd485fbff168e35963d2f9dfff28d4b"},
@@ -63,8 +71,10 @@
   "picosat_elixir": {:hex, :picosat_elixir, "0.2.3", "bf326d0f179fbb3b706bb2c15fbc367dacfa2517157d090fdfc32edae004c597", [:make, :mix], [{:elixir_make, "~> 0.6", [hex: :elixir_make, repo: "hexpm", optional: false]}], "hexpm", "f76c9db2dec9d2561ffaa9be35f65403d53e984e8cd99c832383b7ab78c16c66"},
   "plug": {:hex, :plug, "1.18.1", "5067f26f7745b7e31bc3368bc1a2b818b9779faa959b49c934c17730efc911cf", [:mix], [{:mime, "~> 1.0 or ~> 2.0", [hex: :mime, repo: "hexpm", optional: false]}, {:plug_crypto, "~> 1.1.1 or ~> 1.2 or ~> 2.0", [hex: :plug_crypto, repo: "hexpm", optional: false]}, {:telemetry, "~> 0.4.3 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "57a57db70df2b422b564437d2d33cf8d33cd16339c1edb190cd11b1a3a546cc2"},
   "plug_crypto": {:hex, :plug_crypto, "2.1.1", "19bda8184399cb24afa10be734f84a16ea0a2bc65054e23a62bb10f06bc89491", [:mix], [], "hexpm", "6470bce6ffe41c8bd497612ffde1a7e4af67f36a15eea5f921af71cf3e11247c"},
+  "poison": {:hex, :poison, "4.0.1", "bcb755a16fac91cad79bfe9fc3585bb07b9331e50cfe3420a24bcc2d735709ae", [:mix], [], "hexpm", "ba8836feea4b394bb718a161fc59a288fe0109b5006d6bdf97b6badfcf6f0f25"},
   "postgrex": {:hex, :postgrex, "0.20.0", "363ed03ab4757f6bc47942eff7720640795eb557e1935951c1626f0d303a3aed", [:mix], [{:db_connection, "~> 2.1", [hex: :db_connection, repo: "hexpm", optional: false]}, {:decimal, "~> 1.5 or ~> 2.0", [hex: :decimal, repo: "hexpm", optional: false]}, {:jason, "~> 1.0", [hex: :jason, repo: "hexpm", optional: true]}, {:table, "~> 0.1.0", [hex: :table, repo: "hexpm", optional: true]}], "hexpm", "d36ef8b36f323d29505314f704e21a1a038e2dc387c6409ee0cd24144e187c0f"},
   "reactor": {:hex, :reactor, "0.7.0", "fb76d23d95829b28ac9b9d654620c43c890c6a32ea26ac13086c48540b34e8c5", [:mix], [{:libgraph, "~> 0.16", [hex: :libgraph, repo: "hexpm", optional: false]}, {:spark, "~> 1.0", [hex: :spark, repo: "hexpm", optional: false]}, {:telemetry, "~> 1.2", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "4310da820d753aafd7dc4ee8cc687b84565dd6d9536e38806ee211da792178fd"},
+  "req": {:hex, :req, "0.5.15", "662020efb6ea60b9f0e0fac9be88cd7558b53fe51155a2d9899de594f9906ba9", [:mix], [{:brotli, "~> 0.3.1", [hex: :brotli, repo: "hexpm", optional: true]}, {:ezstd, "~> 1.0", [hex: :ezstd, repo: "hexpm", optional: true]}, {:finch, "~> 0.17", [hex: :finch, repo: "hexpm", optional: false]}, {:jason, "~> 1.0", [hex: :jason, repo: "hexpm", optional: false]}, {:mime, "~> 2.0.6 or ~> 2.1", [hex: :mime, repo: "hexpm", optional: false]}, {:nimble_csv, "~> 1.0", [hex: :nimble_csv, repo: "hexpm", optional: true]}, {:plug, "~> 1.0", [hex: :plug, repo: "hexpm", optional: true]}], "hexpm", "a6513a35fad65467893ced9785457e91693352c70b58bbc045b47e5eb2ef0c53"},
   "slugify": {:hex, :slugify, "1.3.1", "0d3b8b7e5c1eeaa960e44dce94382bee34a39b3ea239293e457a9c5b47cc6fd3", [:mix], [], "hexpm", "cb090bbeb056b312da3125e681d98933a360a70d327820e4b7f91645c4d8be76"},
   "sourceror": {:hex, :sourceror, "1.10.0", "38397dedbbc286966ec48c7af13e228b171332be1ad731974438c77791945ce9", [:mix], [], "hexpm", "29dbdfc92e04569c9d8e6efdc422fc1d815f4bd0055dc7c51b8800fb75c4b3f1"},
   "spark": {:hex, :spark, "1.1.55", "d20c3f899b23d841add29edc912ffab4463d3bb801bc73448738631389291d2e", [:mix], [{:jason, "~> 1.4", [hex: :jason, repo: "hexpm", optional: false]}, {:nimble_options, "~> 0.5 or ~> 1.0", [hex: :nimble_options, repo: "hexpm", optional: false]}, {:sourceror, "~> 1.0", [hex: :sourceror, repo: "hexpm", optional: false]}], "hexpm", "bbc15a4223d8e610c81ceca825d5d0bae3738d1c4ac4dbb1061749966776c3f1"},
@@ -76,6 +86,7 @@
   "telemetry": {:hex, :telemetry, "1.3.0", "fedebbae410d715cf8e7062c96a1ef32ec22e764197f70cda73d82778d61e7a2", [:rebar3], [], "hexpm", "7015fc8919dbe63764f4b4b87a95b7c0996bd539e0d499be6ec9d7f3875b79e6"},
   "telemetry_metrics": {:hex, :telemetry_metrics, "1.1.0", "5bd5f3b5637e0abea0426b947e3ce5dd304f8b3bc6617039e2b5a008adc02f8f", [:mix], [{:telemetry, "~> 0.4 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "e7b79e8ddfde70adb6db8a6623d1778ec66401f366e9a8f5dd0955c56bc8ce67"},
   "telemetry_poller": {:hex, :telemetry_poller, "1.3.0", "d5c46420126b5ac2d72bc6580fb4f537d35e851cc0f8dbd571acf6d6e10f5ec7", [:rebar3], [{:telemetry, "~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "51f18bed7128544a50f75897db9974436ea9bfba560420b646af27a9a9b35211"},
+  "tesla": {:hex, :tesla, "1.14.3", "b27ba2814cc08b5c4eb5f0245120198542cd023f575c490fa14447ae6763ea8d", [:mix], [{:castore, "~> 0.1 or ~> 1.0", [hex: :castore, repo: "hexpm", optional: true]}, {:exjsx, ">= 3.0.0", [hex: :exjsx, repo: "hexpm", optional: true]}, {:finch, "~> 0.13", [hex: :finch, repo: "hexpm", optional: true]}, {:fuse, "~> 2.4", [hex: :fuse, repo: "hexpm", optional: true]}, {:gun, ">= 1.0.0", [hex: :gun, repo: "hexpm", optional: true]}, {:hackney, "~> 1.21", [hex: :hackney, repo: "hexpm", optional: true]}, {:ibrowse, "4.4.2", [hex: :ibrowse, repo: "hexpm", optional: true]}, {:jason, ">= 1.0.0", [hex: :jason, repo: "hexpm", optional: true]}, {:mime, "~> 1.0 or ~> 2.0", [hex: :mime, repo: "hexpm", optional: false]}, {:mint, "~> 1.0", [hex: :mint, repo: "hexpm", optional: true]}, {:mox, "~> 1.0", [hex: :mox, repo: "hexpm", optional: true]}, {:msgpax, "~> 2.3", [hex: :msgpax, repo: "hexpm", optional: true]}, {:poison, ">= 1.0.0", [hex: :poison, repo: "hexpm", optional: true]}, {:telemetry, "~> 0.4 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: true]}], "hexpm", "4f419aa2ab908cff43a117d3b5de99edad8fd54690211cbbdc7d2941c03a1458"},
   "thousand_island": {:hex, :thousand_island, "1.3.14", "ad45ebed2577b5437582bcc79c5eccd1e2a8c326abf6a3464ab6c06e2055a34a", [:mix], [{:telemetry, "~> 0.4 or ~> 1.0", [hex: :telemetry, repo: "hexpm", optional: false]}], "hexpm", "d0d24a929d31cdd1d7903a4fe7f2409afeedff092d277be604966cd6aa4307ef"},
   "typable": {:hex, :typable, "0.3.0", "0431e121d124cd26f312123e313d2689b9a5322b15add65d424c07779eaa3ca1", [:mix], [], "hexpm", "880a0797752da1a4c508ac48f94711e04c86156f498065a83d160eef945858f8"},
   "unicode_util_compat": {:hex, :unicode_util_compat, "0.7.1", "a48703a25c170eedadca83b11e88985af08d35f37c6f664d6dcfb106a97782fc", [:rebar3], [], "hexpm", "b3a917854ce3ae233619744ad1e0102e05673136776fb2fa76234f3e03b23642"},
diff --git a/priv/repo/migrations/20240101000000_create_mpesa_tables.exs b/priv/repo/migrations/20240101000000_create_mpesa_tables.exs
new file mode 100644
index 0000000..342b7c5
--- /dev/null
+++ b/priv/repo/migrations/20240101000000_create_mpesa_tables.exs
@@ -0,0 +1,56 @@
+defmodule Clinicpro.Repo.Migrations.CreateMPesaTables do
+  use Ecto.Migration
+
+  def change do
+    # Create M-Pesa configurations table
+    create table(:mpesa_configs) do
+      add :clinic_id, :integer, null: false
+      add :consumer_key, :string, null: false
+      add :consumer_secret, :string, null: false
+      add :passkey, :string, null: false
+      add :shortcode, :string, null: false
+      add :environment, :string, null: false, default: "sandbox"
+      add :base_url, :string, null: false
+      add :callback_url, :string
+      add :validation_url, :string
+      add :confirmation_url, :string
+      add :active, :boolean, default: true
+
+      timestamps()
+    end
+
+    # Create indexes for mpesa_configs
+    create index(:mpesa_configs, [:clinic_id])
+    create index(:mpesa_configs, [:shortcode])
+    create unique_index(:mpesa_configs, [:shortcode, :environment])
+
+    # Create M-Pesa transactions table
+    create table(:mpesa_transactions) do
+      add :clinic_id, :integer, null: false
+      add :invoice_id, :string, null: false
+      add :patient_id, :string, null: false
+      add :phone_number, :string, null: false
+      add :amount, :float, null: false
+      add :status, :string, null: false, default: "pending"
+      add :reference, :string
+      add :checkout_request_id, :string
+      add :merchant_request_id, :string
+      add :transaction_id, :string
+      add :transaction_date, :naive_datetime
+      add :result_code, :string
+      add :result_desc, :string
+
+      timestamps()
+    end
+
+    # Create indexes for mpesa_transactions
+    create index(:mpesa_transactions, [:clinic_id])
+    create index(:mpesa_transactions, [:invoice_id])
+    create index(:mpesa_transactions, [:patient_id])
+    create index(:mpesa_transactions, [:checkout_request_id])
+    create index(:mpesa_transactions, [:merchant_request_id])
+    create index(:mpesa_transactions, [:transaction_id])
+    create index(:mpesa_transactions, [:reference])
+    create index(:mpesa_transactions, [:status])
+  end
+end
diff --git a/priv/repo/migrations/20250722_add_virtual_meeting_fields_to_appointments.exs b/priv/repo/migrations/20250722_add_virtual_meeting_fields_to_appointments.exs
new file mode 100644
index 0000000..1d20410
--- /dev/null
+++ b/priv/repo/migrations/20250722_add_virtual_meeting_fields_to_appointments.exs
@@ -0,0 +1,14 @@
+defmodule Clinicpro.Repo.Migrations.AddVirtualMeetingFieldsToAppointments do
+  use Ecto.Migration
+
+  def change do
+    alter table(:appointments) do
+      add :meeting_link, :string
+      add :appointment_type, :string, default: "onsite"
+      add :clinic_id, references(:clinics, on_delete: :nilify_all), null: true
+    end
+
+    # Add an index for faster lookups by clinic
+    create index(:appointments, [:clinic_id])
+  end
+end
diff --git a/priv/repo/migrations/20250722_update_prescriptions_for_multi_tenant.exs b/priv/repo/migrations/20250722_update_prescriptions_for_multi_tenant.exs
new file mode 100644
index 0000000..f36ffbf
--- /dev/null
+++ b/priv/repo/migrations/20250722_update_prescriptions_for_multi_tenant.exs
@@ -0,0 +1,40 @@
+defmodule Clinicpro.Repo.Migrations.UpdatePrescriptionsForMultiTenant do
+  use Ecto.Migration
+
+  def change do
+    # Create the prescriptions table if it doesn't exist
+    # (since we're moving from ETS to Postgres)
+    create_if_not_exists table(:prescriptions, primary_key: false) do
+      add :id, :uuid, primary_key: true
+      add :medication_name, :string, null: false
+      add :dosage, :string, null: false
+      add :frequency, :string, null: false
+      add :duration, :string, null: false
+      add :instructions, :string, default: ""
+      add :created_at, :utc_datetime_usec, null: false
+
+      add :appointment_id, references(:appointments, on_delete: :nilify_all, type: :uuid)
+      add :doctor_id, references(:users, on_delete: :nilify_all, type: :uuid)
+      add :patient_id, references(:users, on_delete: :nilify_all, type: :uuid)
+
+      timestamps()
+    end
+
+    # Add new fields to the prescriptions table
+    alter table(:prescriptions) do
+      add :medication_code, :string
+      add :medication_form, :string
+      add :medication_strength, :string
+      add :refills, :integer, default: 0
+      add :is_controlled_substance, :boolean, default: false
+      add :clinic_id, references(:clinics, on_delete: :nilify_all, type: :uuid)
+    end
+
+    # Add indexes for faster lookups
+    create_if_not_exists index(:prescriptions, [:appointment_id])
+    create_if_not_exists index(:prescriptions, [:doctor_id])
+    create_if_not_exists index(:prescriptions, [:patient_id])
+    create index(:prescriptions, [:clinic_id])
+    create index(:prescriptions, [:medication_name])
+  end
+end
diff --git a/test/clinicpro/integration/virtual_meetings_test.exs b/test/clinicpro/integration/virtual_meetings_test.exs
new file mode 100644
index 0000000..db938a1
--- /dev/null
+++ b/test/clinicpro/integration/virtual_meetings_test.exs
@@ -0,0 +1,153 @@
+defmodule Clinicpro.Integration.VirtualMeetingsTest do
+  use ClinicproWeb.ConnCase, async: true
+
+  alias Clinicpro.Repo
+  alias Clinicpro.Appointment
+  alias Clinicpro.Doctor
+  alias Clinicpro.Patient
+  alias Clinicpro.Clinic
+  alias Clinicpro.VirtualMeetings.Adapter
+  alias Clinicpro.VirtualMeetings.Config
+
+  @valid_clinic_attrs %{
+    name: "Test Clinic",
+    address: "123 Test St",
+    phone: "+254712345678",
+    email: "test@clinic.com"
+  }
+
+  @valid_doctor_attrs %{
+    name: "Dr. Test",
+    specialty: "General",
+    email: "doctor@test.com",
+    phone: "+254712345679",
+    status: "Active",
+    active: true
+  }
+
+  @valid_patient_attrs %{
+    name: "Test Patient",
+    email: "patient@test.com",
+    phone: "+254712345680"
+  }
+
+  @valid_appointment_attrs %{
+    date: ~D[2025-08-01],
+    start_time: ~T[09:00:00],
+    end_time: ~T[10:00:00],
+    status: "Scheduled",
+    type: "Consultation",
+    notes: "Test appointment",
+    appointment_type: "virtual"
+  }
+
+  setup do
+    # Create a test clinic with virtual meeting configuration
+    {:ok, clinic} = %Clinic{}
+                    |> Clinic.changeset(@valid_clinic_attrs)
+                    |> Repo.insert()
+
+    # Set up virtual meeting config for the clinic
+    Config.update_clinic_config(clinic.id, %{
+      adapter: "google_meet",
+      api_credentials: %{
+        "type" => "service_account",
+        "project_id" => "test-project",
+        "client_email" => "test@example.com"
+      }
+    })
+
+    # Create a test doctor
+    {:ok, doctor} = %Doctor{}
+                    |> Doctor.changeset(Map.put(@valid_doctor_attrs, :clinic_id, clinic.id))
+                    |> Repo.insert()
+
+    # Create a test patient
+    {:ok, patient} = %Patient{}
+                     |> Patient.changeset(@valid_patient_attrs)
+                     |> Repo.insert()
+
+    # Create a test appointment
+    appointment_attrs = @valid_appointment_attrs
+                        |> Map.put(:doctor_id, doctor.id)
+                        |> Map.put(:patient_id, patient.id)
+                        |> Map.put(:clinic_id, clinic.id)
+
+    {:ok, appointment} = %Appointment{}
+                         |> Appointment.changeset(appointment_attrs)
+                         |> Repo.insert()
+
+    %{
+      clinic: clinic,
+      doctor: doctor,
+      patient: patient,
+      appointment: appointment
+    }
+  end
+
+  describe "virtual meetings integration" do
+    test "get_or_generate_meeting_link creates a meeting link for a virtual appointment", %{appointment: appointment} do
+      # Import the controller to access private functions
+      import ClinicproWeb.AppointmentController, only: [get_or_generate_meeting_link: 1]
+
+      # Call the function
+      link = get_or_generate_meeting_link(appointment)
+
+      # Assert that a link was generated
+      assert link != nil
+      assert String.length(link) > 0
+
+      # Verify that the appointment was updated with the link
+      updated_appointment = Repo.get(Appointment, appointment.id)
+      assert updated_appointment.meeting_link == link
+    end
+
+    test "virtual_link action renders the meeting link for a paid virtual appointment", %{
+      conn: conn,
+      appointment: appointment,
+      patient: patient
+    } do
+      # Create a paid invoice for the appointment
+      {:ok, invoice} = Clinicpro.Invoices.create_invoice(%{
+        appointment_id: appointment.id,
+        amount: 1000.0,
+        status: "paid",
+        payment_method: "M-Pesa"
+      })
+
+      # Log in as the patient
+      conn = assign(conn, :current_patient, patient)
+
+      # Call the virtual_link action
+      conn = get(conn, ~p"/q/appointment/#{appointment.id}/virtual")
+
+      # Assert that the response contains the meeting link
+      assert html_response(conn, 200) =~ "Join Virtual Meeting"
+      assert html_response(conn, 200) =~ "meeting_link"
+    end
+
+    test "virtual_link action redirects for unpaid virtual appointments", %{
+      conn: conn,
+      appointment: appointment,
+      patient: patient
+    } do
+      # Create an unpaid invoice for the appointment
+      {:ok, invoice} = Clinicpro.Invoices.create_invoice(%{
+        appointment_id: appointment.id,
+        amount: 1000.0,
+        status: "pending",
+        payment_method: "M-Pesa"
+      })
+
+      # Log in as the patient
+      conn = assign(conn, :current_patient, patient)
+
+      # Call the virtual_link action
+      conn = get(conn, ~p"/q/appointment/#{appointment.id}/virtual")
+
+      # Assert that we're redirected with an error message
+      assert redirected_to(conn) == ~p"/q/appointment/#{appointment.id}"
+      assert get_flash(conn, :error) == "Virtual link is only available for paid virtual appointments."
+    end
+  end
+end
diff --git a/test/clinicpro/mpesa/callback_log_test.exs b/test/clinicpro/mpesa/callback_log_test.exs
new file mode 100644
index 0000000..73ee974
--- /dev/null
+++ b/test/clinicpro/mpesa/callback_log_test.exs
@@ -0,0 +1,115 @@
+defmodule Clinicpro.MPesa.CallbackLogTest do
+  use Clinicpro.DataCase
+
+  alias Clinicpro.MPesa.CallbackLog
+
+  @valid_attrs %{
+    clinic_id: 1,
+    type: "stk_push",
+    status: "success",
+    reference: "TEST-REF-123",
+    shortcode: "174379",
+    url: "https://example.com/callback",
+    request_payload: "{\"test\":\"payload\"}",
+    response_payload: "{\"result\":\"success\"}",
+    response_code: "0",
+    response_description: "Success",
+    processing_time: 120,
+    transaction_id: "TEST-TXN-123"
+  }
+
+  @invalid_attrs %{
+    clinic_id: nil,
+    type: nil,
+    status: nil,
+    request_payload: nil
+  }
+
+  describe "callback_log" do
+    test "create/1 with valid data creates a callback log" do
+      assert {:ok, callback_log} = CallbackLog.create(@valid_attrs)
+      assert callback_log.clinic_id == 1
+      assert callback_log.type == "stk_push"
+      assert callback_log.status == "success"
+      assert callback_log.reference == "TEST-REF-123"
+    end
+
+    test "create/1 with invalid data returns error changeset" do
+      assert {:error, %Ecto.Changeset{}} = CallbackLog.create(@invalid_attrs)
+    end
+
+    test "get_by_id_and_clinic/2 returns the callback log with given id and clinic_id" do
+      {:ok, callback_log} = CallbackLog.create(@valid_attrs)
+      assert CallbackLog.get_by_id_and_clinic(callback_log.id, callback_log.clinic_id) == callback_log
+      assert CallbackLog.get_by_id_and_clinic(callback_log.id, 999) == nil
+    end
+
+    test "list_by_transaction/2 returns callback logs for a specific transaction" do
+      {:ok, callback_log} = CallbackLog.create(@valid_attrs)
+      
+      # Create another callback log with a different transaction_id
+      {:ok, _other_log} = CallbackLog.create(Map.put(@valid_attrs, :transaction_id, "OTHER-TXN"))
+      
+      logs = CallbackLog.list_by_transaction("TEST-TXN-123", 1)
+      assert length(logs) == 1
+      assert hd(logs).id == callback_log.id
+    end
+
+    test "list_by_type/2 returns callback logs for a specific type" do
+      {:ok, callback_log} = CallbackLog.create(@valid_attrs)
+      
+      # Create another callback log with a different type
+      {:ok, _other_log} = CallbackLog.create(Map.put(@valid_attrs, :type, "c2b_validation"))
+      
+      logs = CallbackLog.list_by_type("stk_push", 1)
+      assert length(logs) == 1
+      assert hd(logs).id == callback_log.id
+    end
+
+    test "paginate_by_clinic/4 returns paginated callback logs" do
+      # Create 25 callback logs
+      for i <- 1..25 do
+        CallbackLog.create(Map.put(@valid_attrs, :reference, "REF-#{i}"))
+      end
+
+      # Test first page (default 20 per page)
+      {logs, pagination} = CallbackLog.paginate_by_clinic(1)
+      assert length(logs) == 20
+      assert pagination.page == 1
+      assert pagination.total_pages == 2
+      assert pagination.total_count == 25
+
+      # Test second page
+      {logs, pagination} = CallbackLog.paginate_by_clinic(1, %{}, 2)
+      assert length(logs) == 5
+      assert pagination.page == 2
+
+      # Test with smaller per_page
+      {logs, pagination} = CallbackLog.paginate_by_clinic(1, %{}, 1, 10)
+      assert length(logs) == 10
+      assert pagination.total_pages == 3
+    end
+
+    test "paginate_by_clinic/4 with filters returns filtered callback logs" do
+      # Create callback logs with different types
+      {:ok, stk_log} = CallbackLog.create(@valid_attrs)
+      {:ok, _c2b_log} = CallbackLog.create(Map.put(@valid_attrs, :type, "c2b_validation"))
+      
+      # Test filtering by type
+      {logs, _} = CallbackLog.paginate_by_clinic(1, %{type: "stk_push"})
+      assert length(logs) == 1
+      assert hd(logs).id == stk_log.id
+
+      # Test filtering by status
+      {logs, _} = CallbackLog.paginate_by_clinic(1, %{status: "success"})
+      assert length(logs) == 2
+
+      # Test filtering by date
+      yesterday = NaiveDateTime.add(NaiveDateTime.utc_now(), -86400)
+      tomorrow = NaiveDateTime.add(NaiveDateTime.utc_now(), 86400)
+      
+      {logs, _} = CallbackLog.paginate_by_clinic(1, %{from_date: yesterday, to_date: tomorrow})
+      assert length(logs) == 2
+    end
+  end
+end
diff --git a/test/clinicpro/mpesa/focused_mpesa_test.exs b/test/clinicpro/mpesa/focused_mpesa_test.exs
new file mode 100644
index 0000000..c8b0aa3
--- /dev/null
+++ b/test/clinicpro/mpesa/focused_mpesa_test.exs
@@ -0,0 +1,68 @@
+defmodule Clinicpro.FocusedMPesaTest do
+  use ExUnit.Case, async: true
+  
+  alias Clinicpro.MPesa
+  alias Clinicpro.MPesa.{Config, C2B, MockSTKPush, Transaction}
+  
+  # Test that the modules can be loaded without errors
+  test "modules can be loaded" do
+    assert Code.ensure_loaded?(Clinicpro.MPesa)
+    assert Code.ensure_loaded?(Clinicpro.MPesa.C2B)
+    assert Code.ensure_loaded?(Clinicpro.MPesa.MockSTKPush)
+    assert Code.ensure_loaded?(Clinicpro.MPesa.Config)
+    assert Code.ensure_loaded?(Clinicpro.MPesa.Transaction)
+  end
+  
+  # Test that the modules have the expected functions
+  test "modules have expected functions" do
+    assert function_exported?(Clinicpro.MPesa.C2B, :process_confirmation, 2)
+    assert function_exported?(Clinicpro.MPesa.MockSTKPush, :send_stk_push, 5)
+    assert function_exported?(Clinicpro.MPesa.MockSTKPush, :query_stk_push_status, 3)
+  end
+  
+  # Test the multi-tenant configuration functionality
+  test "config module supports multi-tenant configurations" do
+    # Create test configs for different clinics
+    clinic1_id = "clinic1"
+    clinic2_id = "clinic2"
+    
+    # Set up test configs
+    config1 = %{
+      consumer_key: "test_key_1",
+      consumer_secret: "test_secret_1",
+      passkey: "test_passkey_1",
+      shortcode: "123456",
+      callback_url: "https://example.com/callback/1",
+      active: true
+    }
+    
+    config2 = %{
+      consumer_key: "test_key_2",
+      consumer_secret: "test_secret_2",
+      passkey: "test_passkey_2",
+      shortcode: "654321",
+      callback_url: "https://example.com/callback/2",
+      active: true
+    }
+    
+    # Test that configs are isolated by clinic
+    assert Config.get_config(clinic1_id) != Config.get_config(clinic2_id)
+  end
+  
+  # Test the mock STK Push functionality
+  test "mock STK push generates unique request IDs" do
+    phone_number = "254712345678"
+    amount = 100
+    reference = "TEST123"
+    description = "Test payment"
+    clinic_id = "test_clinic"
+    
+    # Call the mock STK push function
+    {:ok, result1} = MockSTKPush.send_stk_push(phone_number, amount, reference, description, clinic_id)
+    {:ok, result2} = MockSTKPush.send_stk_push(phone_number, amount, reference, description, clinic_id)
+    
+    # Verify that unique IDs are generated
+    assert result1.checkout_request_id != result2.checkout_request_id
+    assert result1.merchant_request_id != result2.merchant_request_id
+  end
+end
diff --git a/test/clinicpro/mpesa/invoice_payment_test.exs b/test/clinicpro/mpesa/invoice_payment_test.exs
new file mode 100644
index 0000000..21973be
--- /dev/null
+++ b/test/clinicpro/mpesa/invoice_payment_test.exs
@@ -0,0 +1,275 @@
+defmodule Clinicpro.InvoicePaymentTest do
+  use Clinicpro.DataCase, async: true
+
+  alias Clinicpro.Invoices.PaymentProcessor
+  alias Clinicpro.MPesa.Transaction
+  alias Clinicpro.Invoices
+  alias Clinicpro.Appointments
+
+  import Mox
+
+  # Make sure mocks are verified when the test exits
+  setup :verify_on_exit!
+
+  describe "invoice payment processing with multi-tenant support" do
+    setup do
+      # Create test clinics
+      {:ok, clinic1} = Clinicpro.Clinics.create_clinic(%{
+        name: "Test Clinic 1",
+        code: "TC1",
+        address: "123 Test St",
+        phone: "254700000001",
+        email: "clinic1@test.com"
+      })
+
+      {:ok, clinic2} = Clinicpro.Clinics.create_clinic(%{
+        name: "Test Clinic 2",
+        code: "TC2",
+        address: "456 Test Ave",
+        phone: "254700000002",
+        email: "clinic2@test.com"
+      })
+
+      # Create test patients for each clinic
+      {:ok, patient1} = Clinicpro.Patients.create_patient(%{
+        first_name: "John",
+        last_name: "Doe",
+        phone_number: "254711111111",
+        email: "john@example.com",
+        clinic_id: clinic1.id
+      })
+
+      {:ok, patient2} = Clinicpro.Patients.create_patient(%{
+        first_name: "Jane",
+        last_name: "Smith",
+        phone_number: "254722222222",
+        email: "jane@example.com",
+        clinic_id: clinic2.id
+      })
+
+      # Create test doctors for each clinic
+      {:ok, doctor1} = Clinicpro.Doctors.create_doctor(%{
+        first_name: "Dr.",
+        last_name: "House",
+        phone_number: "254733333333",
+        email: "house@example.com",
+        clinic_id: clinic1.id,
+        specialization: "General"
+      })
+
+      {:ok, doctor2} = Clinicpro.Doctors.create_doctor(%{
+        first_name: "Dr.",
+        last_name: "Grey",
+        phone_number: "254744444444",
+        email: "grey@example.com",
+        clinic_id: clinic2.id,
+        specialization: "General"
+      })
+
+      # Create test appointments for each clinic
+      {:ok, appointment1} = Appointments.create_appointment(%{
+        patient_id: patient1.id,
+        doctor_id: doctor1.id,
+        clinic_id: clinic1.id,
+        date: DateTime.utc_now() |> DateTime.add(1, :day),
+        status: "confirmed",
+        type: "consultation",
+        payment_status: "pending"
+      })
+
+      {:ok, appointment2} = Appointments.create_appointment(%{
+        patient_id: patient2.id,
+        doctor_id: doctor2.id,
+        clinic_id: clinic2.id,
+        date: DateTime.utc_now() |> DateTime.add(1, :day),
+        status: "confirmed",
+        type: "consultation",
+        payment_status: "pending"
+      })
+
+      # Create test invoices for each appointment
+      {:ok, invoice1} = Invoices.create_invoice(%{
+        patient_id: patient1.id,
+        clinic_id: clinic1.id,
+        appointment_id: appointment1.id,
+        reference_number: "INV-#{clinic1.code}-001",
+        date: DateTime.utc_now(),
+        due_date: DateTime.utc_now() |> DateTime.add(7, :day),
+        status: "pending",
+        payment_status: "pending",
+        subtotal: Decimal.new("1000.00"),
+        total: Decimal.new("1000.00"),
+        items: [
+          %{
+            description: "Consultation Fee",
+            quantity: 1,
+            unit_price: Decimal.new("1000.00")
+          }
+        ]
+      })
+
+      {:ok, invoice2} = Invoices.create_invoice(%{
+        patient_id: patient2.id,
+        clinic_id: clinic2.id,
+        appointment_id: appointment2.id,
+        reference_number: "INV-#{clinic2.code}-001",
+        date: DateTime.utc_now(),
+        due_date: DateTime.utc_now() |> DateTime.add(7, :day),
+        status: "pending",
+        payment_status: "pending",
+        subtotal: Decimal.new("1500.00"),
+        total: Decimal.new("1500.00"),
+        items: [
+          %{
+            description: "Consultation Fee",
+            quantity: 1,
+            unit_price: Decimal.new("1500.00")
+          }
+        ]
+      })
+
+      # Mock the M-Pesa STK Push module
+      Mox.stub(Clinicpro.MPesa.STKPushMock, :request, fn phone_number, amount, reference, clinic_id ->
+        # Return different responses based on clinic_id to test multi-tenant behavior
+        case clinic_id do
+          ^clinic1.id ->
+            {:ok, %{
+              "MerchantRequestID" => "123456-#{clinic1.id}",
+              "CheckoutRequestID" => "wx123-#{clinic1.id}",
+              "ResponseCode" => "0",
+              "ResponseDescription" => "Success. Request accepted for processing",
+              "CustomerMessage" => "Success. Request accepted for processing"
+            }}
+
+          ^clinic2.id ->
+            {:ok, %{
+              "MerchantRequestID" => "789012-#{clinic2.id}",
+              "CheckoutRequestID" => "wx456-#{clinic2.id}",
+              "ResponseCode" => "0",
+              "ResponseDescription" => "Success. Request accepted for processing",
+              "CustomerMessage" => "Success. Request accepted for processing"
+            }}
+
+          _ ->
+            {:error, "Invalid clinic ID"}
+        end
+      end)
+
+      # Return the test data
+      %{
+        clinic1: clinic1,
+        clinic2: clinic2,
+        patient1: patient1,
+        patient2: patient2,
+        doctor1: doctor1,
+        doctor2: doctor2,
+        appointment1: appointment1,
+        appointment2: appointment2,
+        invoice1: invoice1,
+        invoice2: invoice2
+      }
+    end
+
+    test "initiate_payment/2 creates transaction with correct clinic_id", %{invoice1: invoice1, invoice2: invoice2} do
+      # Test payment for clinic 1
+      {:ok, response1} = PaymentProcessor.initiate_payment(invoice1, "254711111111")
+
+      # Verify transaction was created with correct clinic_id
+      transaction1 = Transaction.get_by_checkout_request_id(response1["CheckoutRequestID"])
+      assert transaction1.clinic_id == invoice1.clinic_id
+      assert transaction1.invoice_id == invoice1.id
+      assert transaction1.status == "pending"
+
+      # Test payment for clinic 2
+      {:ok, response2} = PaymentProcessor.initiate_payment(invoice2, "254722222222")
+
+      # Verify transaction was created with correct clinic_id
+      transaction2 = Transaction.get_by_checkout_request_id(response2["CheckoutRequestID"])
+      assert transaction2.clinic_id == invoice2.clinic_id
+      assert transaction2.invoice_id == invoice2.id
+      assert transaction2.status == "pending"
+
+      # Verify transactions are isolated by clinic
+      clinic1_transactions = Transaction.list_by_clinic_id(invoice1.clinic_id)
+      clinic2_transactions = Transaction.list_by_clinic_id(invoice2.clinic_id)
+
+      assert length(clinic1_transactions) == 1
+      assert length(clinic2_transactions) == 1
+      assert hd(clinic1_transactions).id == transaction1.id
+      assert hd(clinic2_transactions).id == transaction2.id
+    end
+
+    test "process_callback/1 updates invoice and appointment with correct clinic isolation", %{
+      invoice1: invoice1,
+      appointment1: appointment1,
+      clinic1: clinic1
+    } do
+      # First initiate a payment
+      {:ok, response} = PaymentProcessor.initiate_payment(invoice1, "254711111111")
+
+      # Create a mock callback data that would come from M-Pesa
+      callback_data = %{
+        merchant_request_id: response["MerchantRequestID"],
+        checkout_request_id: response["CheckoutRequestID"],
+        result_code: "0",
+        result_desc: "The service request is processed successfully.",
+        amount: "1000.00",
+        mpesa_receipt_number: "LHG31AA5TX",
+        transaction_date: "20230615123456",
+        phone_number: "254711111111",
+        clinic_id: clinic1.id
+      }
+
+      # Process the callback
+      {:ok, %{invoice: updated_invoice, transaction: updated_transaction}} =
+        PaymentProcessor.process_callback(callback_data)
+
+      # Verify invoice was updated
+      assert updated_invoice.id == invoice1.id
+      assert updated_invoice.payment_status == "completed"
+      assert updated_invoice.payment_reference == "LHG31AA5TX"
+      assert updated_invoice.payment_method == "mpesa"
+      assert not is_nil(updated_invoice.payment_date)
+
+      # Verify transaction was updated
+      assert updated_transaction.status == "completed"
+      assert updated_transaction.transaction_id == "LHG31AA5TX"
+
+      # Verify appointment was updated
+      updated_appointment = Appointments.get_appointment(appointment1.id)
+      assert updated_appointment.payment_status == "paid"
+    end
+
+    test "check_payment_status/1 returns correct status based on transaction", %{
+      invoice1: invoice1,
+      invoice2: invoice2
+    } do
+      # Initiate payment for invoice1
+      {:ok, response} = PaymentProcessor.initiate_payment(invoice1, "254711111111")
+
+      # Check status - should be pending
+      assert {:ok, :pending} = PaymentProcessor.check_payment_status(invoice1)
+
+      # Update transaction to completed
+      transaction = Transaction.get_by_checkout_request_id(response["CheckoutRequestID"])
+      {:ok, _} = Transaction.update(transaction, %{
+        status: "completed",
+        transaction_id: "LHG31AA5TX"
+      })
+
+      # Check status again - should be completed
+      assert {:ok, :completed} = PaymentProcessor.check_payment_status(invoice1)
+
+      # Check status for invoice2 - should be no transaction
+      assert {:ok, :no_transaction} = PaymentProcessor.check_payment_status(invoice2)
+
+      # Create a failed transaction for invoice2
+      {:ok, response2} = PaymentProcessor.initiate_payment(invoice2, "254722222222")
+      transaction2 = Transaction.get_by_checkout_request_id(response2["CheckoutRequestID"])
+      {:ok, _} = Transaction.update(transaction2, %{status: "failed", result_code: "1"})
+
+      # Check status - should be failed
+      assert {:ok, :failed} = PaymentProcessor.check_payment_status(invoice2)
+    end
+  end
+end
diff --git a/test/clinicpro/mpesa/mpesa_integration_test.exs b/test/clinicpro/mpesa/mpesa_integration_test.exs
new file mode 100644
index 0000000..cb1bfee
--- /dev/null
+++ b/test/clinicpro/mpesa/mpesa_integration_test.exs
@@ -0,0 +1,152 @@
+defmodule Clinicpro.MPesaTest do
+  @moduledoc """
+  Test script for verifying M-Pesa integration with the provided credentials.
+
+  This module provides functions to test various aspects of the M-Pesa integration,
+  including authentication, STK Push, and transaction handling.
+  """
+
+  alias Clinicpro.MPesa
+  alias Clinicpro.MPesa.Config
+  alias Clinicpro.MPesa.Transaction
+
+  @doc """
+  Main test function that runs all tests in sequence.
+  """
+  def run_tests do
+    IO.puts("Starting M-Pesa integration tests...")
+
+    # Test clinic ID for testing
+    clinic_id = 1
+
+    # Step 1: Create test configuration
+    IO.puts("\n1. Creating test configuration...")
+    {:ok, config} = create_test_config(clinic_id)
+    IO.puts("✓ Test configuration created with ID: #{config.id}")
+
+    # Step 2: Test authentication
+    IO.puts("\n2. Testing authentication...")
+    case test_authentication(clinic_id) do
+      {:ok, token} ->
+        IO.puts("✓ Authentication successful. Token received.")
+
+        # Step 3: Test STK Push
+        IO.puts("\n3. Testing STK Push...")
+        test_stk_push(clinic_id)
+
+        # Step 4: Test transaction listing
+        IO.puts("\n4. Testing transaction listing...")
+        test_transaction_listing(clinic_id)
+
+      {:error, reason} ->
+        IO.puts("✗ Authentication failed: #{inspect(reason)}")
+    end
+
+    IO.puts("\nM-Pesa integration tests completed.")
+  end
+
+  @doc """
+  Creates a test configuration using the credentials from .env-local.
+  """
+  def create_test_config(clinic_id) do
+    config_params = %{
+      clinic_id: clinic_id,
+      consumer_key: "GBOmMgVvYQoOZE1qZQds4dIGCSFhGbSuPX3gQR5egDROR069",
+      consumer_secret: "pSwhuZTpcKWxUNOzHPLkPiGKpjAKOaU67VVXe5t2VAQXuuwH2c4UGlseElGvEVpF",
+      passkey: "bfb279f9aa9bdbcf158e97dd71a467cd2e0c893059b10f78e6b72ada1ed2c919",  # Default sandbox passkey
+      shortcode: "174379",  # Default sandbox shortcode
+      environment: "sandbox",
+      base_url: "https://sandbox.safaricom.co.ke",
+      callback_url: "https://example.com/mpesa/callback",
+      validation_url: "https://example.com/mpesa/validate",
+      confirmation_url: "https://example.com/mpesa/confirm",
+      active: true
+    }
+
+    # Delete any existing configs for this clinic
+    existing_configs = Config.list_configs(clinic_id)
+    Enum.each(existing_configs, fn config ->
+      Config.deactivate(config.id)
+    end)
+
+    # Create new config
+    Config.create(config_params)
+  end
+
+  @doc """
+  Tests authentication with the Safaricom API.
+  """
+  def test_authentication(clinic_id) do
+    case MPesa.Auth.generate_token(clinic_id) do
+      {:ok, token} ->
+        IO.puts("Token: #{String.slice(token, 0, 20)}...")
+        {:ok, token}
+
+      {:error, reason} = error ->
+        IO.puts("Authentication failed: #{inspect(reason)}")
+        error
+    end
+  end
+
+  @doc """
+  Tests STK Push functionality.
+  """
+  def test_stk_push(clinic_id) do
+    # Test phone number - replace with a valid test number if needed
+    phone_number = "254712345678"
+
+    # Test invoice and patient IDs
+    invoice_id = "TEST-INV-#{System.os_time(:second)}"
+    patient_id = "TEST-PATIENT-#{System.os_time(:second)}"
+
+    # Test amount
+    amount = 1  # Minimum amount for testing
+
+    IO.puts("Initiating STK Push to #{phone_number} for KES #{amount}...")
+
+    case MPesa.initiate_stk_push(clinic_id, invoice_id, patient_id, phone_number, amount) do
+      {:ok, transaction} ->
+        IO.puts("✓ STK Push initiated successfully")
+        IO.puts("  Transaction ID: #{transaction.id}")
+        IO.puts("  Checkout Request ID: #{transaction.checkout_request_id}")
+        IO.puts("  Merchant Request ID: #{transaction.merchant_request_id}")
+
+        # Wait for a moment and then check the status
+        IO.puts("\nWaiting 10 seconds before checking status...")
+        :timer.sleep(10_000)
+
+        case MPesa.query_stk_push_status(clinic_id, transaction.checkout_request_id) do
+          {:ok, status} ->
+            IO.puts("✓ STK Push status: #{inspect(status)}")
+
+          {:error, reason} ->
+            IO.puts("✗ Failed to query STK Push status: #{inspect(reason)}")
+        end
+
+      {:error, reason} ->
+        IO.puts("✗ STK Push failed: #{inspect(reason)}")
+    end
+  end
+
+  @doc """
+  Tests transaction listing functionality.
+  """
+  def test_transaction_listing(clinic_id) do
+    transactions = Transaction.list_by_clinic(clinic_id)
+
+    IO.puts("Found #{length(transactions)} transactions for clinic #{clinic_id}")
+
+    if length(transactions) > 0 do
+      IO.puts("\nLatest transaction:")
+      latest = List.first(transactions)
+      IO.puts("  ID: #{latest.id}")
+      IO.puts("  Invoice ID: #{latest.invoice_id}")
+      IO.puts("  Amount: #{latest.amount}")
+      IO.puts("  Status: #{latest.status}")
+      IO.puts("  Created at: #{latest.inserted_at}")
+    end
+  end
+end
+
+# Run the tests when this script is executed
+Clinicpro.MPesaTest.run_tests()
diff --git a/test/clinicpro/mpesa/mpesa_module_test.exs b/test/clinicpro/mpesa/mpesa_module_test.exs
new file mode 100644
index 0000000..bb98e6c
--- /dev/null
+++ b/test/clinicpro/mpesa/mpesa_module_test.exs
@@ -0,0 +1,65 @@
+defmodule Clinicpro.MPesaModuleTest do
+  @moduledoc """
+  Focused test for the M-Pesa modules to verify our fixes.
+  """
+
+  use Clinicpro.DataCase
+
+  alias Clinicpro.MPesa
+  alias Clinicpro.MPesa.{Config, Transaction, MockSTKPush, C2B}
+
+  # Setup test clinics
+  @clinic_1_id 1
+  @clinic_2_id 2
+
+  describe "M-Pesa module fixes" do
+    test "C2B process_confirmation with unused variable fix" do
+      # Create a test transaction
+      {:ok, transaction} = Transaction.create(%{
+        clinic_id: @clinic_1_id,
+        phone_number: "254712345678",
+        amount: 1000.0,
+        reference: "TEST-REF",
+        description: "Test payment",
+        status: "pending",
+        payment_method: "c2b",
+        transaction_type: "payment"
+      })
+
+      # Create test confirmation data
+      confirmation_data = %{
+        "TransID" => "MPESA123",
+        "TransAmount" => "1000.00",
+        "BillRefNumber" => transaction.reference,
+        "MSISDN" => "254712345678",
+        "FirstName" => "John",
+        "MiddleName" => "M",
+        "LastName" => "Doe",
+        "OrgAccountBalance" => "5000.00",
+        "TransTime" => "20230101000000",
+        "BusinessShortCode" => "123456"
+      }
+
+      # Process the confirmation - this should not raise any errors
+      result = C2B.process_confirmation(confirmation_data, @clinic_1_id)
+      assert {:ok, _} = result
+    end
+
+    test "MockSTKPush with unused variable fixes" do
+      # Test send_stk_push with unused variables
+      result = MockSTKPush.send_stk_push(
+        "254712345678",
+        1000.0,
+        "TEST-REF",
+        "Test payment",
+        "123456"
+      )
+      
+      assert {:ok, %{checkout_request_id: _, merchant_request_id: _}} = result
+
+      # Test query_stk_push_status with unused variables
+      status_result = MockSTKPush.query_stk_push_status("CHECKOUT123", "MERCHANT123", @clinic_1_id)
+      assert {:ok, _} = status_result
+    end
+  end
+end
diff --git a/test/clinicpro/mpesa/mpesa_multi_clinic_test.exs b/test/clinicpro/mpesa/mpesa_multi_clinic_test.exs
new file mode 100644
index 0000000..17fad3b
--- /dev/null
+++ b/test/clinicpro/mpesa/mpesa_multi_clinic_test.exs
@@ -0,0 +1,392 @@
+defmodule Clinicpro.MPesaMultiClinicTest do
+  @moduledoc """
+  Tests for the M-Pesa integration with multi-tenant support.
+  """
+
+  use Clinicpro.DataCase
+
+  alias Clinicpro.MPesa
+  alias Clinicpro.MPesa.{Config, Transaction, MockSTKPush}
+
+  # Setup test clinics
+  @clinic_1_id 1
+  @clinic_2_id 2
+
+  describe "multi-tenant M-Pesa configuration" do
+    test "creates clinic-specific configurations" do
+      # Create config for clinic 1
+      {:ok, config1} = Config.create(%{
+        clinic_id: @clinic_1_id,
+        consumer_key: "test_key_1",
+        consumer_secret: "test_secret_1",
+        passkey: "test_passkey_1",
+        shortcode: "123456",
+        environment: "sandbox",
+        base_url: "https://sandbox.safaricom.co.ke",
+        callback_url: "https://example.com/mpesa/callback/clinic1",
+        validation_url: "https://example.com/mpesa/validate/clinic1",
+        confirmation_url: "https://example.com/mpesa/confirm/clinic1",
+        active: true
+      })
+
+      # Create config for clinic 2
+      {:ok, config2} = Config.create(%{
+        clinic_id: @clinic_2_id,
+        consumer_key: "test_key_2",
+        consumer_secret: "test_secret_2",
+        passkey: "test_passkey_2",
+        shortcode: "654321",
+        environment: "sandbox",
+        base_url: "https://sandbox.safaricom.co.ke",
+        callback_url: "https://example.com/mpesa/callback/clinic2",
+        validation_url: "https://example.com/mpesa/validate/clinic2",
+        confirmation_url: "https://example.com/mpesa/confirm/clinic2",
+        active: true
+      })
+
+      # Verify configs were created with correct clinic IDs
+      assert config1.clinic_id == @clinic_1_id
+      assert config2.clinic_id == @clinic_2_id
+
+      # Verify configs can be retrieved by clinic ID
+      assert Config.get_config(@clinic_1_id).consumer_key == "test_key_1"
+      assert Config.get_config(@clinic_2_id).consumer_key == "test_key_2"
+
+      # Verify configs are isolated by clinic ID
+      configs = Config.list_configs()
+      assert length(configs) == 2
+
+      clinic1_configs = Config.list_configs(@clinic_1_id)
+      assert length(clinic1_configs) == 1
+      assert hd(clinic1_configs).clinic_id == @clinic_1_id
+
+      clinic2_configs = Config.list_configs(@clinic_2_id)
+      assert length(clinic2_configs) == 1
+      assert hd(clinic2_configs).clinic_id == @clinic_2_id
+    end
+
+    test "activates and deactivates configurations" do
+      # Create config for clinic 1
+      {:ok, config} = Config.create(%{
+        clinic_id: @clinic_1_id,
+        consumer_key: "test_key_1",
+        consumer_secret: "test_secret_1",
+        passkey: "test_passkey_1",
+        shortcode: "123456",
+        environment: "sandbox",
+        base_url: "https://sandbox.safaricom.co.ke",
+        callback_url: "https://example.com/mpesa/callback/clinic1",
+        validation_url: "https://example.com/mpesa/validate/clinic1",
+        confirmation_url: "https://example.com/mpesa/confirm/clinic1",
+        active: true
+      })
+
+      # Deactivate config
+      {:ok, updated_config} = Config.deactivate(config.id)
+      assert updated_config.active == false
+
+      # Activate config
+      {:ok, reactivated_config} = Config.activate(config.id)
+      assert reactivated_config.active == true
+    end
+  end
+
+  describe "multi-tenant M-Pesa transactions" do
+    setup do
+      # Create configs for both clinics
+      {:ok, _config1} = Config.create(%{
+        clinic_id: @clinic_1_id,
+        consumer_key: "test_key_1",
+        consumer_secret: "test_secret_1",
+        passkey: "test_passkey_1",
+        shortcode: "123456",
+        environment: "sandbox",
+        base_url: "https://sandbox.safaricom.co.ke",
+        callback_url: "https://example.com/mpesa/callback/clinic1",
+        validation_url: "https://example.com/mpesa/validate/clinic1",
+        confirmation_url: "https://example.com/mpesa/confirm/clinic1",
+        active: true
+      })
+
+      {:ok, _config2} = Config.create(%{
+        clinic_id: @clinic_2_id,
+        consumer_key: "test_key_2",
+        consumer_secret: "test_secret_2",
+        passkey: "test_passkey_2",
+        shortcode: "654321",
+        environment: "sandbox",
+        base_url: "https://sandbox.safaricom.co.ke",
+        callback_url: "https://example.com/mpesa/callback/clinic2",
+        validation_url: "https://example.com/mpesa/validate/clinic2",
+        confirmation_url: "https://example.com/mpesa/confirm/clinic2",
+        active: true
+      })
+
+      :ok
+    end
+
+    test "creates transactions isolated by clinic" do
+      # Create transaction for clinic 1
+      {:ok, tx1} = Transaction.create(%{
+        clinic_id: @clinic_1_id,
+        invoice_id: "INV-001",
+        patient_id: "PAT-001",
+        phone_number: "254712345678",
+        amount: 1000.0,
+        status: "pending"
+      })
+
+      # Create transaction for clinic 2
+      {:ok, tx2} = Transaction.create(%{
+        clinic_id: @clinic_2_id,
+        invoice_id: "INV-002",
+        patient_id: "PAT-002",
+        phone_number: "254712345679",
+        amount: 2000.0,
+        status: "pending"
+      })
+
+      # Verify transactions were created with correct clinic IDs
+      assert tx1.clinic_id == @clinic_1_id
+      assert tx2.clinic_id == @clinic_2_id
+
+      # Verify transactions are isolated by clinic ID
+      clinic1_txs = Transaction.list_by_clinic(@clinic_1_id)
+      assert length(clinic1_txs) == 1
+      assert hd(clinic1_txs).clinic_id == @clinic_1_id
+
+      clinic2_txs = Transaction.list_by_clinic(@clinic_2_id)
+      assert length(clinic2_txs) == 1
+      assert hd(clinic2_txs).clinic_id == @clinic_2_id
+    end
+
+    test "updates transactions with request IDs" do
+      # Create transaction for clinic 1
+      {:ok, tx} = Transaction.create(%{
+        clinic_id: @clinic_1_id,
+        invoice_id: "INV-001",
+        patient_id: "PAT-001",
+        phone_number: "254712345678",
+        amount: 1000.0,
+        status: "pending"
+      })
+
+      # Update with request IDs
+      {:ok, updated_tx} = Transaction.update_request_ids(tx.id, "checkout-123", "merchant-123")
+
+      # Verify update
+      assert updated_tx.checkout_request_id == "checkout-123"
+      assert updated_tx.merchant_request_id == "merchant-123"
+
+      # Verify retrieval by request IDs
+      assert Transaction.get_by_checkout_request_id("checkout-123").id == tx.id
+      assert Transaction.get_by_merchant_request_id("merchant-123").id == tx.id
+    end
+
+    test "updates transaction status" do
+      # Create transaction for clinic 1
+      {:ok, tx} = Transaction.create(%{
+        clinic_id: @clinic_1_id,
+        invoice_id: "INV-001",
+        patient_id: "PAT-001",
+        phone_number: "254712345678",
+        amount: 1000.0,
+        status: "pending"
+      })
+
+      # Update status to completed
+      {:ok, updated_tx} = Transaction.update_status(tx.id, "completed", "0", "Success")
+
+      # Verify update
+      assert updated_tx.status == "completed"
+      assert updated_tx.result_code == "0"
+      assert updated_tx.result_desc == "Success"
+    end
+  end
+
+  describe "M-Pesa STK Push with multi-tenant support" do
+    setup do
+      # Create configs for both clinics
+      {:ok, _config1} = Config.create(%{
+        clinic_id: @clinic_1_id,
+        consumer_key: "test_key_1",
+        consumer_secret: "test_secret_1",
+        passkey: "test_passkey_1",
+        shortcode: "123456",
+        environment: "sandbox",
+        base_url: "https://sandbox.safaricom.co.ke",
+        callback_url: "https://example.com/mpesa/callback/clinic1",
+        validation_url: "https://example.com/mpesa/validate/clinic1",
+        confirmation_url: "https://example.com/mpesa/confirm/clinic1",
+        active: true
+      })
+
+      {:ok, _config2} = Config.create(%{
+        clinic_id: @clinic_2_id,
+        consumer_key: "test_key_2",
+        consumer_secret: "test_secret_2",
+        passkey: "test_passkey_2",
+        shortcode: "654321",
+        environment: "sandbox",
+        base_url: "https://sandbox.safaricom.co.ke",
+        callback_url: "https://example.com/mpesa/callback/clinic2",
+        validation_url: "https://example.com/mpesa/validate/clinic2",
+        confirmation_url: "https://example.com/mpesa/confirm/clinic2",
+        active: true
+      })
+
+      # Configure application to use MockSTKPush
+      Application.put_env(:clinicpro, :mpesa_stk_push_module, Clinicpro.MPesa.MockSTKPush)
+
+      on_exit(fn ->
+        # Reset application environment
+        Application.delete_env(:clinicpro, :mpesa_stk_push_module)
+      end)
+
+      :ok
+    end
+
+    test "initiates STK Push for different clinics" do
+      # Initiate STK Push for clinic 1
+      {:ok, %{transaction: tx1, checkout_request_id: checkout1, merchant_request_id: merchant1}} =
+        MPesa.initiate_stk_push("254712345678", 1000.0, "INV-001", "Test payment", @clinic_1_id)
+
+      # Initiate STK Push for clinic 2
+      {:ok, %{transaction: tx2, checkout_request_id: checkout2, merchant_request_id: merchant2}} =
+        MPesa.initiate_stk_push("254712345679", 2000.0, "INV-002", "Test payment", @clinic_2_id)
+
+      # Verify transactions were created with correct clinic IDs
+      assert tx1.clinic_id == @clinic_1_id
+      assert tx2.clinic_id == @clinic_2_id
+
+      # Verify request IDs were set
+      assert tx1.checkout_request_id == checkout1
+      assert tx1.merchant_request_id == merchant1
+      assert tx2.checkout_request_id == checkout2
+      assert tx2.merchant_request_id == merchant2
+
+      # Verify transactions are isolated by clinic ID
+      clinic1_txs = Transaction.list_by_clinic(@clinic_1_id)
+      assert length(clinic1_txs) == 1
+      assert hd(clinic1_txs).clinic_id == @clinic_1_id
+
+      clinic2_txs = Transaction.list_by_clinic(@clinic_2_id)
+      assert length(clinic2_txs) == 1
+      assert hd(clinic2_txs).clinic_id == @clinic_2_id
+    end
+
+    test "processes STK Push callbacks for different clinics" do
+      # Initiate STK Push for clinic 1
+      {:ok, %{transaction: tx1, checkout_request_id: checkout1, merchant_request_id: merchant1}} =
+        MPesa.initiate_stk_push("254712345678", 1000.0, "INV-001", "Test payment", @clinic_1_id)
+
+      # Initiate STK Push for clinic 2
+      {:ok, %{transaction: tx2, checkout_request_id: checkout2, merchant_request_id: merchant2}} =
+        MPesa.initiate_stk_push("254712345679", 2000.0, "INV-002", "Test payment", @clinic_2_id)
+
+      # Simulate callbacks
+      {:ok, callback1} = MockSTKPush.simulate_callback(
+        checkout1, merchant1, "254712345678", 1000.0, "MPESA123", true
+      )
+
+      {:ok, callback2} = MockSTKPush.simulate_callback(
+        checkout2, merchant2, "254712345679", 2000.0, "MPESA456", true
+      )
+
+      # Process callbacks
+      {:ok, _} = MPesa.process_stk_push_callback(callback1)
+      {:ok, _} = MPesa.process_stk_push_callback(callback2)
+
+      # Verify transactions were updated
+      updated_tx1 = Transaction.get_by_id(tx1.id)
+      updated_tx2 = Transaction.get_by_id(tx2.id)
+
+      assert updated_tx1.status == "completed"
+      assert updated_tx1.transaction_id == "MPESA123"
+
+      assert updated_tx2.status == "completed"
+      assert updated_tx2.transaction_id == "MPESA456"
+    end
+  end
+
+  describe "M-Pesa C2B with multi-tenant support" do
+    setup do
+      # Create configs for both clinics
+      {:ok, _config1} = Config.create(%{
+        clinic_id: @clinic_1_id,
+        consumer_key: "test_key_1",
+        consumer_secret: "test_secret_1",
+        passkey: "test_passkey_1",
+        shortcode: "123456",
+        environment: "sandbox",
+        base_url: "https://sandbox.safaricom.co.ke",
+        callback_url: "https://example.com/mpesa/callback/clinic1",
+        validation_url: "https://example.com/mpesa/validate/clinic1",
+        confirmation_url: "https://example.com/mpesa/confirm/clinic1",
+        active: true
+      })
+
+      {:ok, _config2} = Config.create(%{
+        clinic_id: @clinic_2_id,
+        consumer_key: "test_key_2",
+        consumer_secret: "test_secret_2",
+        passkey: "test_passkey_2",
+        shortcode: "654321",
+        environment: "sandbox",
+        base_url: "https://sandbox.safaricom.co.ke",
+        callback_url: "https://example.com/mpesa/callback/clinic2",
+        validation_url: "https://example.com/mpesa/validate/clinic2",
+        confirmation_url: "https://example.com/mpesa/confirm/clinic2",
+        active: true
+      })
+
+      :ok
+    end
+
+    test "processes C2B callbacks for different clinics" do
+      # Create transactions for both clinics
+      {:ok, tx1} = Transaction.create(%{
+        clinic_id: @clinic_1_id,
+        invoice_id: "INV-001",
+        patient_id: "PAT-001",
+        phone_number: "254712345678",
+        amount: 1000.0,
+        status: "pending",
+        reference: "INV-001"
+      })
+
+      {:ok, tx2} = Transaction.create(%{
+        clinic_id: @clinic_2_id,
+        invoice_id: "INV-002",
+        patient_id: "PAT-002",
+        phone_number: "254712345679",
+        amount: 2000.0,
+        status: "pending",
+        reference: "INV-002"
+      })
+
+      # Simulate C2B callbacks
+      {:ok, callback1} = MockSTKPush.simulate_c2b_callback(
+        "123456", "254712345678", 1000.0, "INV-001", "MPESA123"
+      )
+
+      {:ok, callback2} = MockSTKPush.simulate_c2b_callback(
+        "654321", "254712345679", 2000.0, "INV-002", "MPESA456"
+      )
+
+      # Process callbacks
+      {:ok, _} = MPesa.process_c2b_confirmation(callback1)
+      {:ok, _} = MPesa.process_c2b_confirmation(callback2)
+
+      # Verify transactions were updated
+      updated_tx1 = Transaction.get_by_id(tx1.id)
+      updated_tx2 = Transaction.get_by_id(tx2.id)
+
+      assert updated_tx1.status == "completed"
+      assert updated_tx1.transaction_id == "MPESA123"
+
+      assert updated_tx2.status == "completed"
+      assert updated_tx2.transaction_id == "MPESA456"
+    end
+  end
+end
diff --git a/test/clinicpro/mpesa/simple_module_test.exs b/test/clinicpro/mpesa/simple_module_test.exs
new file mode 100644
index 0000000..de62264
--- /dev/null
+++ b/test/clinicpro/mpesa/simple_module_test.exs
@@ -0,0 +1,19 @@
+defmodule Clinicpro.SimpleModuleTest do
+  use ExUnit.Case
+
+  # Test that the modules can be loaded without errors
+  test "modules can be loaded" do
+    assert Code.ensure_loaded?(Clinicpro.MPesa)
+    assert Code.ensure_loaded?(Clinicpro.MPesa.C2B)
+    assert Code.ensure_loaded?(Clinicpro.MPesa.MockSTKPush)
+    assert Code.ensure_loaded?(Clinicpro.Invoices.PaymentProcessor)
+    assert Code.ensure_loaded?(Clinicpro.AdminBypass.Invoice)
+  end
+
+  # Test that the modules have the expected functions
+  test "modules have expected functions" do
+    assert function_exported?(Clinicpro.MPesa.C2B, :process_confirmation, 2)
+    assert function_exported?(Clinicpro.MPesa.MockSTKPush, :send_stk_push, 5)
+    assert function_exported?(Clinicpro.MPesa.MockSTKPush, :query_stk_push_status, 3)
+  end
+end
diff --git a/test/clinicpro_web/components/mpesa_payment_button_test.exs b/test/clinicpro_web/components/mpesa_payment_button_test.exs
new file mode 100644
index 0000000..e69e1cf
--- /dev/null
+++ b/test/clinicpro_web/components/mpesa_payment_button_test.exs
@@ -0,0 +1,316 @@
+defmodule ClinicproWeb.MPesaPaymentButtonTest do
+  use ClinicproWeb.ConnCase, async: true
+  import Phoenix.LiveViewTest
+
+  alias Clinicpro.Invoices
+  alias Clinicpro.MPesa.Transaction
+
+  import Mox
+
+  # Make sure mocks are verified when the test exits
+  setup :verify_on_exit!
+
+  describe "MPesaPaymentButton component with multi-tenant support" do
+    setup do
+      # Create test clinics
+      {:ok, clinic1} = Clinicpro.Clinics.create_clinic(%{
+        name: "Test Clinic 1",
+        code: "TC1",
+        address: "123 Test St",
+        phone: "254700000001",
+        email: "clinic1@test.com"
+      })
+
+      {:ok, clinic2} = Clinicpro.Clinics.create_clinic(%{
+        name: "Test Clinic 2",
+        code: "TC2",
+        address: "456 Test Ave",
+        phone: "254700000002",
+        email: "clinic2@test.com"
+      })
+
+      # Create test patients for each clinic
+      {:ok, patient1} = Clinicpro.Patients.create_patient(%{
+        first_name: "John",
+        last_name: "Doe",
+        phone_number: "254711111111",
+        email: "john@example.com",
+        clinic_id: clinic1.id
+      })
+
+      {:ok, patient2} = Clinicpro.Patients.create_patient(%{
+        first_name: "Jane",
+        last_name: "Smith",
+        phone_number: "254722222222",
+        email: "jane@example.com",
+        clinic_id: clinic2.id
+      })
+
+      # Create test invoices for each clinic
+      {:ok, invoice1} = Invoices.create_invoice(%{
+        patient_id: patient1.id,
+        clinic_id: clinic1.id,
+        reference_number: "INV-#{clinic1.code}-001",
+        date: DateTime.utc_now(),
+        due_date: DateTime.utc_now() |> DateTime.add(7, :day),
+        status: "pending",
+        payment_status: "pending",
+        subtotal: Decimal.new("1000.00"),
+        total: Decimal.new("1000.00"),
+        items: [
+          %{
+            description: "Consultation Fee",
+            quantity: 1,
+            unit_price: Decimal.new("1000.00")
+          }
+        ]
+      })
+
+      {:ok, invoice2} = Invoices.create_invoice(%{
+        patient_id: patient2.id,
+        clinic_id: clinic2.id,
+        reference_number: "INV-#{clinic2.code}-001",
+        date: DateTime.utc_now(),
+        due_date: DateTime.utc_now() |> DateTime.add(7, :day),
+        status: "pending",
+        payment_status: "pending",
+        subtotal: Decimal.new("1500.00"),
+        total: Decimal.new("1500.00"),
+        items: [
+          %{
+            description: "Consultation Fee",
+            quantity: 1,
+            unit_price: Decimal.new("1500.00")
+          }
+        ]
+      })
+
+      # Mock the M-Pesa STK Push module
+      Mox.stub(Clinicpro.MPesa.STKPushMock, :request, fn phone_number, amount, reference, clinic_id ->
+        # Return different responses based on clinic_id to test multi-tenant behavior
+        case clinic_id do
+          ^clinic1.id ->
+            {:ok, %{
+              "MerchantRequestID" => "123456-#{clinic1.id}",
+              "CheckoutRequestID" => "wx123-#{clinic1.id}",
+              "ResponseCode" => "0",
+              "ResponseDescription" => "Success. Request accepted for processing",
+              "CustomerMessage" => "Success. Request accepted for processing"
+            }}
+
+          ^clinic2.id ->
+            {:ok, %{
+              "MerchantRequestID" => "789012-#{clinic2.id}",
+              "CheckoutRequestID" => "wx456-#{clinic2.id}",
+              "ResponseCode" => "0",
+              "ResponseDescription" => "Success. Request accepted for processing",
+              "CustomerMessage" => "Success. Request accepted for processing"
+            }}
+
+          _ ->
+            {:error, "Invalid clinic ID"}
+        end
+      end)
+
+      # Mock the payment status check
+      Mox.stub(Clinicpro.Invoices.PaymentProcessorMock, :check_payment_status, fn invoice ->
+        case invoice.id do
+          _ -> {:ok, :pending}
+        end
+      end)
+
+      # Return the test data
+      %{
+        clinic1: clinic1,
+        clinic2: clinic2,
+        patient1: patient1,
+        patient2: patient2,
+        invoice1: invoice1,
+        invoice2: invoice2
+      }
+    end
+
+    test "renders payment button for unpaid invoice", %{conn: conn, invoice1: invoice1} do
+      # Create a test LiveView that uses the MPesaPaymentButton component
+      {:ok, view, html} = live_isolated(conn, ClinicproWeb.TestLiveView, session: %{
+        "invoice" => invoice1,
+        "current_user" => %{id: "user-123"}
+      })
+
+      # Assert that the component renders correctly
+      assert html =~ "Pay with M-Pesa"
+      assert html =~ "Enter your phone number"
+      assert html =~ "Pay KES #{Decimal.to_string(invoice1.total)}"
+    end
+
+    test "validates phone number format", %{conn: conn, invoice1: invoice1} do
+      # Create a test LiveView that uses the MPesaPaymentButton component
+      {:ok, view, _html} = live_isolated(conn, ClinicproWeb.TestLiveView, session: %{
+        "invoice" => invoice1,
+        "current_user" => %{id: "user-123"}
+      })
+
+      # Try to submit with invalid phone number
+      view
+      |> element("#mpesa-payment-form")
+      |> render_submit(%{phone_number: "12345"})
+
+      # Assert that validation error is shown
+      assert render(view) =~ "Please enter a valid Kenyan phone number"
+
+      # Try with valid phone number format but submit button should still be disabled
+      view
+      |> element("#mpesa-payment-form")
+      |> render_change(%{phone_number: "254711222333"})
+
+      # Assert that validation passes
+      refute render(view) =~ "Please enter a valid Kenyan phone number"
+    end
+
+    test "initiates payment with correct clinic isolation", %{conn: conn, invoice1: invoice1, clinic1: clinic1} do
+      # Create a test LiveView that uses the MPesaPaymentButton component
+      {:ok, view, _html} = live_isolated(conn, ClinicproWeb.TestLiveView, session: %{
+        "invoice" => invoice1,
+        "current_user" => %{id: "user-123"}
+      })
+
+      # Fill in valid phone number and submit
+      view
+      |> element("#mpesa-payment-form")
+      |> render_submit(%{phone_number: "254711222333"})
+
+      # Assert that payment initiation message is shown
+      assert render(view) =~ "Payment initiated"
+      assert render(view) =~ "Please check your phone to complete the payment"
+
+      # Verify that a transaction was created with the correct clinic_id
+      :timer.sleep(100) # Give time for async operations
+      transactions = Transaction.list_by_invoice_id(invoice1.id)
+      assert length(transactions) == 1
+      transaction = hd(transactions)
+      assert transaction.clinic_id == clinic1.id
+      assert transaction.status == "pending"
+    end
+
+    test "handles payment status check", %{conn: conn, invoice1: invoice1} do
+      # Create a transaction for the invoice
+      {:ok, transaction} = Transaction.create(%{
+        clinic_id: invoice1.clinic_id,
+        invoice_id: invoice1.id,
+        patient_id: invoice1.patient_id,
+        amount: invoice1.total,
+        phone_number: "254711222333",
+        status: "pending",
+        merchant_request_id: "test-merchant-id",
+        checkout_request_id: "test-checkout-id",
+        reference: invoice1.reference_number
+      })
+
+      # Create a test LiveView that uses the MPesaPaymentButton component
+      {:ok, view, _html} = live_isolated(conn, ClinicproWeb.TestLiveView, session: %{
+        "invoice" => invoice1,
+        "current_user" => %{id: "user-123"}
+      })
+
+      # Trigger payment status check
+      view
+      |> element("[phx-click=\"check_payment_status\"]")
+      |> render_click()
+
+      # Assert that pending status message is shown
+      assert render(view) =~ "Payment is being processed"
+
+      # Update transaction to completed
+      {:ok, _updated} = Transaction.update(transaction, %{
+        status: "completed",
+        transaction_id: "MPESA123456"
+      })
+
+      # Override the mock to return completed status
+      Mox.stub(Clinicpro.Invoices.PaymentProcessorMock, :check_payment_status, fn invoice ->
+        case invoice.id do
+          ^invoice1.id -> {:ok, :completed}
+          _ -> {:ok, :pending}
+        end
+      end)
+
+      # Trigger payment status check again
+      view
+      |> element("[phx-click=\"check_payment_status\"]")
+      |> render_click()
+
+      # Assert that completed status message is shown
+      assert render(view) =~ "Payment completed successfully"
+    end
+
+    test "handles payment failure", %{conn: conn, invoice1: invoice1} do
+      # Create a transaction for the invoice
+      {:ok, transaction} = Transaction.create(%{
+        clinic_id: invoice1.clinic_id,
+        invoice_id: invoice1.id,
+        patient_id: invoice1.patient_id,
+        amount: invoice1.total,
+        phone_number: "254711222333",
+        status: "pending",
+        merchant_request_id: "test-merchant-id",
+        checkout_request_id: "test-checkout-id",
+        reference: invoice1.reference_number
+      })
+
+      # Create a test LiveView that uses the MPesaPaymentButton component
+      {:ok, view, _html} = live_isolated(conn, ClinicproWeb.TestLiveView, session: %{
+        "invoice" => invoice1,
+        "current_user" => %{id: "user-123"}
+      })
+
+      # Update transaction to failed
+      {:ok, _updated} = Transaction.update(transaction, %{
+        status: "failed",
+        result_code: "1032",
+        result_description: "Request cancelled by user"
+      })
+
+      # Override the mock to return failed status
+      Mox.stub(Clinicpro.Invoices.PaymentProcessorMock, :check_payment_status, fn invoice ->
+        case invoice.id do
+          ^invoice1.id -> {:ok, :failed}
+          _ -> {:ok, :pending}
+        end
+      end)
+
+      # Trigger payment status check
+      view
+      |> element("[phx-click=\"check_payment_status\"]")
+      |> render_click()
+
+      # Assert that failure message is shown
+      assert render(view) =~ "Payment failed"
+      assert render(view) =~ "Request cancelled by user"
+
+      # Assert that retry button is shown
+      assert render(view) =~ "Try Again"
+    end
+  end
+end
+
+# Test LiveView for component testing
+defmodule ClinicproWeb.TestLiveView do
+  use ClinicproWeb, :live_view
+
+  def mount(_params, %{"invoice" => invoice, "current_user" => current_user}, socket) do
+    {:ok, assign(socket, invoice: invoice, current_user: current_user)}
+  end
+
+  def render(assigns) do
+    ~H"""
+    <div>
+      <.live_component
+        module={ClinicproWeb.MPesaPaymentButton}
+        id="mpesa-payment-button"
+        invoice={@invoice}
+        current_user={@current_user}
+      />
+    </div>
+    """
+  end
+end
diff --git a/test/clinicpro_web/controllers/mpesa_admin_controller_test.exs b/test/clinicpro_web/controllers/mpesa_admin_controller_test.exs
new file mode 100644
index 0000000..95d2d1e
--- /dev/null
+++ b/test/clinicpro_web/controllers/mpesa_admin_controller_test.exs
@@ -0,0 +1,205 @@
+defmodule ClinicproWeb.MPesaAdminControllerTest do
+  use ClinicproWeb.ConnCase, async: true
+
+  alias Clinicpro.MPesa.Config
+  alias Clinicpro.MPesa.Transaction
+  alias Clinicpro.MPesa.CallbackLog
+  alias Clinicpro.Accounts
+
+  @valid_config_attrs %{
+    clinic_id: 1,
+    consumer_key: "test_key",
+    consumer_secret: "test_secret",
+    passkey: "test_passkey",
+    shortcode: "174379",
+    environment: "sandbox",
+    base_url: "https://sandbox.safaricom.co.ke",
+    callback_url: "https://example.com/callback",
+    validation_url: "https://example.com/validation",
+    confirmation_url: "https://example.com/confirmation",
+    active: true
+  }
+
+  @valid_transaction_attrs %{
+    clinic_id: 1,
+    invoice_id: 1,
+    patient_id: 1,
+    phone_number: "254712345678",
+    amount: 1000.0,
+    status: "pending",
+    reference: "TEST-REF-123",
+    checkout_request_id: "ws_CO_123456789",
+    merchant_request_id: "123-456-789"
+  }
+
+  @valid_callback_log_attrs %{
+    clinic_id: 1,
+    type: "stk_push",
+    status: "success",
+    reference: "TEST-REF-123",
+    shortcode: "174379",
+    url: "https://example.com/callback",
+    request_payload: "{\"test\":\"payload\"}",
+    response_payload: "{\"result\":\"success\"}",
+    response_code: "0",
+    response_description: "Success",
+    processing_time: 120,
+    transaction_id: "TEST-TXN-123"
+  }
+
+  setup %{conn: conn} do
+    # Create a user with admin role
+    {:ok, user} = Accounts.register_admin(%{
+      email: "admin@example.com",
+      password: "password123",
+      password_confirmation: "password123",
+      clinic_id: 1,
+      role: "admin"
+    })
+
+    # Create a config for testing
+    {:ok, config} = Config.create(@valid_config_attrs)
+
+    # Create a transaction for testing
+    {:ok, transaction} = Transaction.create(@valid_transaction_attrs)
+
+    # Create a callback log for testing
+    {:ok, callback_log} = CallbackLog.create(@valid_callback_log_attrs)
+
+    # Log in the user
+    conn = log_in_user(conn, user)
+
+    {:ok, conn: conn, user: user, config: config, transaction: transaction, callback_log: callback_log}
+  end
+
+  describe "index" do
+    test "lists all M-Pesa transactions", %{conn: conn} do
+      conn = get(conn, ~p"/admin/clinics/1/mpesa")
+      assert html_response(conn, 200) =~ "M-Pesa Transactions"
+    end
+  end
+
+  describe "show transaction" do
+    test "displays transaction details", %{conn: conn, transaction: transaction} do
+      conn = get(conn, ~p"/admin/clinics/1/mpesa/transactions/#{transaction.id}")
+      assert html_response(conn, 200) =~ "Transaction Details"
+      assert html_response(conn, 200) =~ transaction.reference
+    end
+
+    test "returns error for transaction not found", %{conn: conn} do
+      conn = get(conn, ~p"/admin/clinics/1/mpesa/transactions/999999")
+      assert redirected_to(conn) == ~p"/admin/clinics/1/mpesa"
+      assert get_flash(conn, :error) =~ "Transaction not found"
+    end
+  end
+
+  describe "configuration" do
+    test "displays configuration details", %{conn: conn, config: config} do
+      conn = get(conn, ~p"/admin/clinics/1/mpesa/config")
+      assert html_response(conn, 200) =~ "M-Pesa Configuration"
+      assert html_response(conn, 200) =~ config.shortcode
+    end
+
+    test "updates configuration", %{conn: conn, config: config} do
+      conn = put(conn, ~p"/admin/clinics/1/mpesa/config/#{config.id}", %{
+        "config" => %{"shortcode" => "654321"}
+      })
+      assert redirected_to(conn) == ~p"/admin/clinics/1/mpesa/config"
+      assert get_flash(conn, :info) =~ "Configuration updated successfully"
+      
+      # Verify the update
+      updated_config = Config.get_by_id(config.id)
+      assert updated_config.shortcode == "654321"
+    end
+
+    test "activates configuration", %{conn: conn, config: config} do
+      # First deactivate the config
+      {:ok, _} = Config.deactivate(config.id)
+      
+      conn = put(conn, ~p"/admin/clinics/1/mpesa/config/#{config.id}/activate")
+      assert redirected_to(conn) == ~p"/admin/clinics/1/mpesa/config"
+      assert get_flash(conn, :info) =~ "Configuration activated successfully"
+      
+      # Verify the activation
+      updated_config = Config.get_by_id(config.id)
+      assert updated_config.active == true
+    end
+
+    test "deactivates configuration", %{conn: conn, config: config} do
+      conn = put(conn, ~p"/admin/clinics/1/mpesa/config/#{config.id}/deactivate")
+      assert redirected_to(conn) == ~p"/admin/clinics/1/mpesa/config"
+      assert get_flash(conn, :info) =~ "Configuration deactivated successfully"
+      
+      # Verify the deactivation
+      updated_config = Config.get_by_id(config.id)
+      assert updated_config.active == false
+    end
+  end
+
+  describe "callback logs" do
+    test "lists all callback logs", %{conn: conn} do
+      conn = get(conn, ~p"/admin/clinics/1/mpesa/callbacks")
+      assert html_response(conn, 200) =~ "Callback Logs"
+    end
+
+    test "displays callback log details", %{conn: conn, callback_log: callback_log} do
+      conn = get(conn, ~p"/admin/clinics/1/mpesa/callbacks/#{callback_log.id}")
+      assert html_response(conn, 200) =~ "Callback Details"
+      assert html_response(conn, 200) =~ callback_log.reference
+    end
+
+    test "returns error for callback log not found", %{conn: conn} do
+      conn = get(conn, ~p"/admin/clinics/1/mpesa/callbacks/999999")
+      assert redirected_to(conn) == ~p"/admin/clinics/1/mpesa/callbacks"
+      assert get_flash(conn, :error) =~ "Callback log not found"
+    end
+  end
+
+  describe "stk push test" do
+    test "displays stk push test form", %{conn: conn} do
+      conn = get(conn, ~p"/admin/clinics/1/mpesa/stk-push-test")
+      assert html_response(conn, 200) =~ "STK Push Test"
+    end
+
+    test "initiates stk push test", %{conn: conn} do
+      # Mock the STK Push initiation - this would normally be handled by a mock
+      # For this test, we'll just check that the controller handles the form submission
+      conn = post(conn, ~p"/admin/clinics/1/mpesa/stk-push-test", %{
+        "stk_push" => %{
+          "phone_number" => "254712345678",
+          "amount" => "10",
+          "reference" => "TEST-REF"
+        }
+      })
+      
+      # In a real test with mocks, we'd verify the STK Push was initiated
+      # Here we just check that the controller handled the submission
+      assert html_response(conn, 200) =~ "STK Push Test"
+    end
+  end
+
+  describe "register callback url" do
+    test "displays register callback url form", %{conn: conn} do
+      conn = get(conn, ~p"/admin/clinics/1/mpesa/register-url")
+      assert html_response(conn, 200) =~ "Register Callback URL"
+    end
+
+    test "registers callback url", %{conn: conn} do
+      # Mock the URL registration - this would normally be handled by a mock
+      # For this test, we'll just check that the controller handles the form submission
+      conn = post(conn, ~p"/admin/clinics/1/mpesa/register-url", %{})
+      
+      # In a real test with mocks, we'd verify the URL was registered
+      # Here we just check that the controller handled the submission
+      assert html_response(conn, 200) =~ "Register Callback URL"
+    end
+  end
+
+  # Helper function to log in a user for testing
+  defp log_in_user(conn, user) do
+    conn
+    |> Phoenix.ConnTest.init_test_session(%{})
+    |> Plug.Conn.put_session(:user_id, user.id)
+    |> Plug.Conn.put_session(:live_socket_id, "users_sessions:#{user.id}")
+  end
+end
diff --git a/test/clinicpro_web/controllers/mpesa_callback_controller_test.exs b/test/clinicpro_web/controllers/mpesa_callback_controller_test.exs
index 60a485b..51cf3c9 100644
--- a/test/clinicpro_web/controllers/mpesa_callback_controller_test.exs
+++ b/test/clinicpro_web/controllers/mpesa_callback_controller_test.exs
@@ -1,210 +1,396 @@
 defmodule ClinicproWeb.MPesaCallbackControllerTest do
   @moduledoc """
   Tests for the M-Pesa callback controller.
-  
+
   This test module verifies that the M-Pesa callback controller properly handles
   STK Push and C2B callbacks, and that the callbacks are correctly processed
   to update invoices and appointments.
   """
-  
-  use ClinicproWeb.ConnCase
-  
+
+  use ClinicproWeb.ConnCase, async: true
+
   alias Clinicpro.MPesa.Transaction
-  alias Clinicpro.AdminBypass.{Invoice, Patient, Doctor, Appointment}
   alias Clinicpro.Invoices
-  
-  describe "M-Pesa callback controller" do
-    setup %{conn: conn} do
-      # Create a clinic (doctor)
-      {:ok, clinic} = Doctor.create_doctor(%{
-        name: "Test Clinic",
-        email: "clinic@example.com",
-        phone: "254700000000",
-        specialty: "General",
-        license_number: "12345"
+  alias Clinicpro.Appointments
+
+  import Mox
+
+  # Make sure mocks are verified when the test exits
+  setup :verify_on_exit!
+
+  describe "M-Pesa callback handling with multi-tenant support" do
+    setup do
+      # Create test clinics
+      {:ok, clinic1} = Clinicpro.Clinics.create_clinic(%{
+        name: "Test Clinic 1",
+        code: "TC1",
+        address: "123 Test St",
+        phone: "254700000001",
+        email: "clinic1@test.com"
       })
-      
-      # Create a patient
-      {:ok, patient} = Patient.create_patient(%{
-        name: "Test Patient",
-        email: "patient@example.com",
-        phone: "254711111111",
-        clinic_id: clinic.id
+
+      {:ok, clinic2} = Clinicpro.Clinics.create_clinic(%{
+        name: "Test Clinic 2",
+        code: "TC2",
+        address: "456 Test Ave",
+        phone: "254700000002",
+        email: "clinic2@test.com"
       })
-      
-      # Create a virtual appointment
-      {:ok, virtual_appointment} = Appointment.create_appointment(%{
-        patient_id: patient.id,
-        clinic_id: clinic.id,
-        appointment_date: Date.utc_today(),
-        appointment_time: ~T[10:00:00],
-        reason: "Virtual Consultation",
-        status: "scheduled",
-        appointment_type: "virtual"
+
+      # Create test patients for each clinic
+      {:ok, patient1} = Clinicpro.Patients.create_patient(%{
+        first_name: "John",
+        last_name: "Doe",
+        phone_number: "254711111111",
+        email: "john@example.com",
+        clinic_id: clinic1.id
       })
-      
-      # Create an invoice for the virtual appointment
-      {:ok, virtual_invoice} = Invoice.create_invoice(%{
-        patient_id: patient.id,
-        clinic_id: clinic.id,
-        appointment_id: virtual_appointment.id,
-        amount: Decimal.new(1000),
-        due_date: Date.utc_today(),
-        description: "Virtual Consultation Fee",
+
+      {:ok, patient2} = Clinicpro.Patients.create_patient(%{
+        first_name: "Jane",
+        last_name: "Smith",
+        phone_number: "254722222222",
+        email: "jane@example.com",
+        clinic_id: clinic2.id
+      })
+
+      # Create test appointments for each clinic
+      {:ok, appointment1} = Appointments.create_appointment(%{
+        patient_id: patient1.id,
+        clinic_id: clinic1.id,
+        date: DateTime.utc_now() |> DateTime.add(1, :day),
+        status: "confirmed",
+        type: "consultation",
+        payment_status: "pending"
+      })
+
+      {:ok, appointment2} = Appointments.create_appointment(%{
+        patient_id: patient2.id,
+        clinic_id: clinic2.id,
+        date: DateTime.utc_now() |> DateTime.add(1, :day),
+        status: "confirmed",
+        type: "consultation",
+        payment_status: "pending"
+      })
+
+      # Create test invoices for each appointment
+      {:ok, invoice1} = Invoices.create_invoice(%{
+        patient_id: patient1.id,
+        clinic_id: clinic1.id,
+        appointment_id: appointment1.id,
+        reference_number: "INV-#{clinic1.code}-001",
+        date: DateTime.utc_now(),
+        due_date: DateTime.utc_now() |> DateTime.add(7, :day),
         status: "pending",
-        payment_reference: "TEST-VIRTUAL-REF-123"
+        payment_status: "pending",
+        subtotal: Decimal.new("1000.00"),
+        total: Decimal.new("1000.00"),
+        items: [
+          %{
+            description: "Consultation Fee",
+            quantity: 1,
+            unit_price: Decimal.new("1000.00")
+          }
+        ]
       })
-      
-      # Create a pending transaction for the invoice
-      {:ok, virtual_transaction} = Transaction.create_pending(%{
-        clinic_id: clinic.id,
-        reference: "TEST-VIRTUAL-REF-123",
-        phone: "254711111111",
-        amount: 1000,
-        type: "stk_push",
-        description: "Virtual Consultation Fee",
-        checkout_request_id: "ws_CO_123456789",
-        merchant_request_id: "123-456-789"
+
+      {:ok, invoice2} = Invoices.create_invoice(%{
+        patient_id: patient2.id,
+        clinic_id: clinic2.id,
+        appointment_id: appointment2.id,
+        reference_number: "INV-#{clinic2.code}-001",
+        date: DateTime.utc_now(),
+        due_date: DateTime.utc_now() |> DateTime.add(7, :day),
+        status: "pending",
+        payment_status: "pending",
+        subtotal: Decimal.new("1500.00"),
+        total: Decimal.new("1500.00"),
+        items: [
+          %{
+            description: "Consultation Fee",
+            quantity: 1,
+            unit_price: Decimal.new("1500.00")
+          }
+        ]
       })
-      
+
+      # Create transactions for each invoice
+      {:ok, transaction1} = Transaction.create(%{
+        clinic_id: clinic1.id,
+        invoice_id: invoice1.id,
+        patient_id: patient1.id,
+        amount: Decimal.new("1000.00"),
+        phone_number: "254711111111",
+        status: "pending",
+        merchant_request_id: "123456-#{clinic1.id}",
+        checkout_request_id: "wx123-#{clinic1.id}",
+        reference: invoice1.reference_number
+      })
+
+      {:ok, transaction2} = Transaction.create(%{
+        clinic_id: clinic2.id,
+        invoice_id: invoice2.id,
+        patient_id: patient2.id,
+        amount: Decimal.new("1500.00"),
+        phone_number: "254722222222",
+        status: "pending",
+        merchant_request_id: "789012-#{clinic2.id}",
+        checkout_request_id: "wx456-#{clinic2.id}",
+        reference: invoice2.reference_number
+      })
+
+      # Return the test data
       %{
-        conn: conn,
-        clinic: clinic,
-        patient: patient,
-        virtual_appointment: virtual_appointment,
-        virtual_invoice: virtual_invoice,
-        virtual_transaction: virtual_transaction
+        clinic1: clinic1,
+        clinic2: clinic2,
+        patient1: patient1,
+        patient2: patient2,
+        appointment1: appointment1,
+        appointment2: appointment2,
+        invoice1: invoice1,
+        invoice2: invoice2,
+        transaction1: transaction1,
+        transaction2: transaction2
       }
     end
-    
-    test "handles STK Push callback successfully", %{conn: conn, virtual_transaction: transaction, virtual_invoice: invoice} do
-      # Create a mock successful STK Push callback payload
-      callback_payload = %{
+
+    test "stk_callback/2 processes payment for the correct clinic", %{
+      conn: conn,
+      clinic1: clinic1,
+      invoice1: invoice1,
+      appointment1: appointment1,
+      transaction1: transaction1
+    } do
+      # Create STK callback payload
+      stk_callback_payload = %{
         "Body" => %{
           "stkCallback" => %{
-            "MerchantRequestID" => transaction.merchant_request_id,
-            "CheckoutRequestID" => transaction.checkout_request_id,
-            "ResultCode" => "0",
+            "MerchantRequestID" => transaction1.merchant_request_id,
+            "CheckoutRequestID" => transaction1.checkout_request_id,
+            "ResultCode" => 0,
             "ResultDesc" => "The service request is processed successfully.",
             "CallbackMetadata" => %{
               "Item" => [
-                %{"Name" => "Amount", "Value" => 1000},
-                %{"Name" => "MpesaReceiptNumber", "Value" => "LHG31AA4AY"},
-                %{"Name" => "TransactionDate", "Value" => 20230601121212},
-                %{"Name" => "PhoneNumber", "Value" => "254711111111"}
+                %{"Name" => "Amount", "Value" => 1000.00},
+                %{"Name" => "MpesaReceiptNumber", "Value" => "LHG31AA5TX"},
+                %{"Name" => "TransactionDate", "Value" => 20230615123456},
+                %{"Name" => "PhoneNumber", "Value" => 254711111111}
               ]
             }
           }
         }
       }
-      
-      # Send the callback to the controller
-      conn = post(conn, ~p"/api/mpesa/callbacks/stk", callback_payload)
-      
+
+      # Send the callback to the controller with clinic_id in the path
+      conn = post(conn, ~p"/api/mpesa/callbacks/#{clinic1.id}/stk", stk_callback_payload)
+
       # Verify the response
-      assert json_response(conn, 200) == %{"ResultCode" => 0, "ResultDesc" => "Success"}
-      
-      # Wait a moment for the async task to complete
-      :timer.sleep(100)
-      
-      # Verify invoice was updated correctly
-      updated_invoice = Invoices.get_invoice(invoice.id)
-      assert updated_invoice.status == "paid"
-      assert updated_invoice.notes =~ "Payment processed via M-Pesa"
-      assert updated_invoice.notes =~ "LHG31AA4AY"
-      
-      # Verify appointment was updated correctly
-      updated_appointment = Clinicpro.AdminBypass.Appointment.get_appointment!(invoice.appointment_id)
-      assert updated_appointment.status == "confirmed"
-      assert updated_appointment.meeting_link != nil
-      assert updated_appointment.meeting_link != ""
+      assert json_response(conn, 200) == %{"ResultCode" => "0", "ResultDesc" => "Success"}
+
+      # Verify the transaction was updated
+      updated_transaction = Transaction.get(transaction1.id)
+      assert updated_transaction.status == "completed"
+      assert updated_transaction.transaction_id == "LHG31AA5TX"
+
+      # Verify the invoice was updated
+      updated_invoice = Invoices.get_invoice(invoice1.id)
+      assert updated_invoice.payment_status == "completed"
+      assert updated_invoice.payment_reference == "LHG31AA5TX"
+      assert updated_invoice.payment_method == "mpesa"
+      assert not is_nil(updated_invoice.payment_date)
+
+      # Verify the appointment was updated
+      updated_appointment = Appointments.get_appointment(appointment1.id)
+      assert updated_appointment.payment_status == "paid"
     end
-    
-    test "handles C2B confirmation callback successfully", %{conn: conn, virtual_transaction: transaction, virtual_invoice: invoice} do
-      # Update transaction reference to match C2B format
-      {:ok, updated_transaction} = Transaction.update(transaction, %{
-        type: "c2b"
-      })
-      
-      # Create a mock successful C2B callback payload
-      callback_payload = %{
-        "TransID" => "MJ41H4AABC",
-        "TransAmount" => "1000",
-        "BillRefNumber" => updated_transaction.reference,
-        "MSISDN" => "254711111111",
+
+    test "stk_callback/2 rejects payment for incorrect clinic", %{
+      conn: conn,
+      clinic2: clinic2,
+      transaction1: transaction1
+    } do
+      # Create STK callback payload for transaction1 but send to clinic2's endpoint
+      stk_callback_payload = %{
+        "Body" => %{
+          "stkCallback" => %{
+            "MerchantRequestID" => transaction1.merchant_request_id,
+            "CheckoutRequestID" => transaction1.checkout_request_id,
+            "ResultCode" => 0,
+            "ResultDesc" => "The service request is processed successfully.",
+            "CallbackMetadata" => %{
+              "Item" => [
+                %{"Name" => "Amount", "Value" => 1000.00},
+                %{"Name" => "MpesaReceiptNumber", "Value" => "LHG31AA5TX"},
+                %{"Name" => "TransactionDate", "Value" => 20230615123456},
+                %{"Name" => "PhoneNumber", "Value" => 254711111111}
+              ]
+            }
+          }
+        }
+      }
+
+      # Send the callback to the wrong clinic's endpoint
+      conn = post(conn, ~p"/api/mpesa/callbacks/#{clinic2.id}/stk", stk_callback_payload)
+
+      # Verify the response indicates an error
+      assert json_response(conn, 200) == %{"ResultCode" => "1", "ResultDesc" => "Transaction not found or does not belong to this clinic"}
+
+      # Verify the transaction was not updated
+      unchanged_transaction = Transaction.get(transaction1.id)
+      assert unchanged_transaction.status == "pending"
+      assert is_nil(unchanged_transaction.transaction_id)
+    end
+
+    test "c2b_validation/2 validates payment reference for the correct clinic", %{
+      conn: conn,
+      clinic1: clinic1,
+      invoice1: invoice1
+    } do
+      # Create C2B validation payload
+      validation_payload = %{
         "TransactionType" => "Pay Bill",
-        "BusinessShortCode" => "123456"
+        "TransID" => "C2B123456",
+        "TransTime" => "20230615123456",
+        "TransAmount" => "1000.00",
+        "BusinessShortCode" => "123456",
+        "BillRefNumber" => invoice1.reference_number,
+        "InvoiceNumber" => "",
+        "OrgAccountBalance" => "",
+        "ThirdPartyTransID" => "",
+        "MSISDN" => "254711111111",
+        "FirstName" => "John",
+        "MiddleName" => "",
+        "LastName" => "Doe"
+      }
+
+      # Send the validation request to the controller with clinic_id in the path
+      conn = post(conn, ~p"/api/mpesa/callbacks/#{clinic1.id}/validation", validation_payload)
+
+      # Verify the response indicates success
+      assert json_response(conn, 200) == %{
+        "ResultCode" => 0,
+        "ResultDesc" => "Accepted"
       }
-      
-      # Send the callback to the controller
-      conn = post(conn, ~p"/api/mpesa/callbacks/c2b/confirmation", callback_payload)
-      
-      # Verify the response
-      assert json_response(conn, 200) == %{"ResultCode" => 0, "ResultDesc" => "Success"}
-      
-      # Wait a moment for the async task to complete
-      :timer.sleep(100)
-      
-      # Verify invoice was updated correctly
-      updated_invoice = Invoices.get_invoice(invoice.id)
-      assert updated_invoice.status == "paid"
-      assert updated_invoice.notes =~ "Payment processed via M-Pesa"
-      assert updated_invoice.notes =~ "MJ41H4AABC"
-      
-      # Verify appointment was updated correctly
-      updated_appointment = Clinicpro.AdminBypass.Appointment.get_appointment!(invoice.appointment_id)
-      assert updated_appointment.status == "confirmed"
-      assert updated_appointment.meeting_link != nil
-      assert updated_appointment.meeting_link != ""
     end
-    
-    test "handles C2B validation callback successfully", %{conn: conn} do
-      # Create a mock C2B validation payload
+
+    test "c2b_validation/2 rejects invalid payment reference", %{
+      conn: conn,
+      clinic1: clinic1
+    } do
+      # Create C2B validation payload with invalid reference
       validation_payload = %{
-        "TransID" => "VAL123456",
-        "TransAmount" => "1000",
-        "BillRefNumber" => "TEST-VIRTUAL-REF-123",
+        "TransactionType" => "Pay Bill",
+        "TransID" => "C2B123456",
+        "TransTime" => "20230615123456",
+        "TransAmount" => "1000.00",
+        "BusinessShortCode" => "123456",
+        "BillRefNumber" => "INVALID-REF",
+        "InvoiceNumber" => "",
+        "OrgAccountBalance" => "",
+        "ThirdPartyTransID" => "",
         "MSISDN" => "254711111111",
+        "FirstName" => "John",
+        "MiddleName" => "",
+        "LastName" => "Doe"
+      }
+
+      # Send the validation request to the controller
+      conn = post(conn, ~p"/api/mpesa/callbacks/#{clinic1.id}/validation", validation_payload)
+
+      # Verify the response indicates rejection
+      assert json_response(conn, 200) == %{
+        "ResultCode" => 1,
+        "ResultDesc" => "Rejected: Invalid reference number"
+      }
+    end
+
+    test "c2b_confirmation/2 processes payment for the correct clinic", %{
+      conn: conn,
+      clinic1: clinic1,
+      invoice1: invoice1,
+      appointment1: appointment1
+    } do
+      # Create C2B confirmation payload
+      confirmation_payload = %{
         "TransactionType" => "Pay Bill",
-        "BusinessShortCode" => "123456"
+        "TransID" => "C2B123456",
+        "TransTime" => "20230615123456",
+        "TransAmount" => "1000.00",
+        "BusinessShortCode" => "123456",
+        "BillRefNumber" => invoice1.reference_number,
+        "InvoiceNumber" => "",
+        "OrgAccountBalance" => "",
+        "ThirdPartyTransID" => "",
+        "MSISDN" => "254711111111",
+        "FirstName" => "John",
+        "MiddleName" => "",
+        "LastName" => "Doe"
+      }
+
+      # Send the confirmation request to the controller with clinic_id in the path
+      conn = post(conn, ~p"/api/mpesa/callbacks/#{clinic1.id}/confirmation", confirmation_payload)
+
+      # Verify the response
+      assert json_response(conn, 200) == %{
+        "ResultCode" => 0,
+        "ResultDesc" => "Success"
       }
-      
-      # Send the validation callback to the controller
-      conn = post(conn, ~p"/api/mpesa/callbacks/c2b/validation", validation_payload)
-      
-      # Verify the response - should always accept the transaction at validation stage
-      assert json_response(conn, 200) == %{"ResultCode" => 0, "ResultDesc" => "Accepted"}
+
+      # Verify the invoice was updated
+      updated_invoice = Invoices.get_invoice(invoice1.id)
+      assert updated_invoice.payment_status == "completed"
+      assert updated_invoice.payment_reference == "C2B123456"
+      assert updated_invoice.payment_method == "mpesa"
+      assert not is_nil(updated_invoice.payment_date)
+
+      # Verify the appointment was updated
+      updated_appointment = Appointments.get_appointment(appointment1.id)
+      assert updated_appointment.payment_status == "paid"
+
+      # Verify a transaction was created
+      [transaction] = Transaction.list_by_invoice_id(invoice1.id)
+      assert transaction.status == "completed"
+      assert transaction.transaction_id == "C2B123456"
+      assert transaction.clinic_id == clinic1.id
     end
-    
-    test "handles failed STK Push callback correctly", %{conn: conn, virtual_transaction: transaction, virtual_invoice: invoice} do
-      # Create a mock failed STK Push callback payload
-      callback_payload = %{
-        "Body" => %{
-          "stkCallback" => %{
-            "MerchantRequestID" => transaction.merchant_request_id,
-            "CheckoutRequestID" => transaction.checkout_request_id,
-            "ResultCode" => "1032",
-            "ResultDesc" => "Request cancelled by user"
-          }
-        }
+
+    test "c2b_confirmation/2 handles orphaned payment for the correct clinic", %{
+      conn: conn,
+      clinic1: clinic1
+    } do
+      # Create C2B confirmation payload with non-existent reference
+      confirmation_payload = %{
+        "TransactionType" => "Pay Bill",
+        "TransID" => "C2B789012",
+        "TransTime" => "20230615123456",
+        "TransAmount" => "2000.00",
+        "BusinessShortCode" => "123456",
+        "BillRefNumber" => "ORPHANED-PAYMENT",
+        "InvoiceNumber" => "",
+        "OrgAccountBalance" => "",
+        "ThirdPartyTransID" => "",
+        "MSISDN" => "254733333333",
+        "FirstName" => "Orphaned",
+        "MiddleName" => "",
+        "LastName" => "Payment"
+      }
+
+      # Send the confirmation request to the controller with clinic_id in the path
+      conn = post(conn, ~p"/api/mpesa/callbacks/#{clinic1.id}/confirmation", confirmation_payload)
+
+      # Verify the response
+      assert json_response(conn, 200) == %{
+        "ResultCode" => 0,
+        "ResultDesc" => "Success"
       }
-      
-      # Send the callback to the controller
-      conn = post(conn, ~p"/api/mpesa/callbacks/stk", callback_payload)
-      
-      # Verify the response - should always return success to M-Pesa
-      assert json_response(conn, 200) == %{"ResultCode" => 0, "ResultDesc" => "Success"}
-      
-      # Wait a moment for the async task to complete
-      :timer.sleep(100)
-      
-      # Verify invoice status remains unchanged
-      updated_invoice = Invoices.get_invoice(invoice.id)
-      assert updated_invoice.status == "pending"
-      
-      # Verify appointment status remains unchanged
-      updated_appointment = Clinicpro.AdminBypass.Appointment.get_appointment!(invoice.appointment_id)
-      assert updated_appointment.status == "scheduled"
+
+      # Verify an orphaned transaction was created
+      [transaction] = Transaction.list_orphaned_by_clinic_id(clinic1.id)
+      assert transaction.status == "completed"
+      assert transaction.transaction_id == "C2B789012"
+      assert transaction.clinic_id == clinic1.id
+      assert transaction.reference == "ORPHANED-PAYMENT"
+      assert is_nil(transaction.invoice_id)
     end
   end
 end
diff --git a/test/support/mocks.ex b/test/support/mocks.ex
index 8595636..6aa4578 100644
--- a/test/support/mocks.ex
+++ b/test/support/mocks.ex
@@ -1,15 +1,19 @@
 defmodule Clinicpro.Mocks do
   @moduledoc """
   Mock definitions for testing.
-  
+
   This module defines Mox mocks for Ash resources to allow controller tests
   to run without requiring real Ash resource compilation.
   """
-  
+
   # Define mocks for Ash APIs
   Mox.defmock(Clinicpro.MockAsh.AppointmentsMock, for: Clinicpro.MockAsh.AppointmentsBehaviour)
   Mox.defmock(Clinicpro.MockAsh.PatientsMock, for: Clinicpro.MockAsh.PatientsBehaviour)
   Mox.defmock(Clinicpro.MockAsh.ClinicsMock, for: Clinicpro.MockAsh.ClinicsBehaviour)
+
+  # Define mocks for M-Pesa STK Push and PaymentProcessor
+  Mox.defmock(Clinicpro.MPesa.STKPushMock, for: Clinicpro.MPesa.STKPushBehaviour)
+  Mox.defmock(Clinicpro.Invoices.PaymentProcessorMock, for: Clinicpro.Invoices.PaymentProcessorBehaviour)
 end
 
 defmodule Clinicpro.MockAsh.AppointmentsBehaviour do
@@ -44,3 +48,96 @@ defmodule Clinicpro.MockAsh.ClinicsBehaviour do
   @callback create_clinic(map()) :: {:ok, map()} | {:error, any()}
   @callback update_clinic(String.t(), map()) :: {:ok, map()} | {:error, any()}
 end
+
+defmodule Clinicpro.MPesa.STKPushMock do
+  @moduledoc """
+  Mock implementation of the M-Pesa STK Push module for testing.
+  """
+
+  @behaviour Clinicpro.MPesa.STKPushBehaviour
+
+  @doc """
+  Mock implementation of the STK Push request.
+  This function is mocked in tests to return different responses.
+  """
+  @impl true
+  def request(phone_number, amount, reference, clinic_id) do
+    # Default implementation that will be overridden by Mox in tests
+    {:ok, %{
+      "MerchantRequestID" => "mock-merchant-request-id-#{clinic_id}",
+      "CheckoutRequestID" => "mock-checkout-request-id-#{clinic_id}",
+      "ResponseCode" => "0",
+      "ResponseDescription" => "Success. Request accepted for processing",
+      "CustomerMessage" => "Success. Request accepted for processing"
+    }}
+  end
+end
+
+defmodule Clinicpro.Invoices.PaymentProcessorMock do
+  @moduledoc """
+  Mock implementation of the PaymentProcessor module for testing.
+  """
+
+  @behaviour Clinicpro.Invoices.PaymentProcessorBehaviour
+
+  @doc """
+  Mock implementation of the check_payment_status function.
+  This function is mocked in tests to return different statuses.
+  """
+  @impl true
+  def check_payment_status(invoice) do
+    # Default implementation that will be overridden by Mox in tests
+    {:ok, :pending}
+  end
+
+  @doc """
+  Mock implementation of the process_mpesa_payment function.
+  """
+  @impl true
+  def process_mpesa_payment(invoice, phone_number, opts \\ []) do
+    # Default implementation that will be overridden by Mox in tests
+    {:ok, %{
+      id: "mock-transaction-id",
+      clinic_id: invoice.clinic_id,
+      invoice_id: invoice.id,
+      patient_id: invoice.patient_id,
+      amount: invoice.total,
+      phone_number: phone_number,
+      status: "pending",
+      merchant_request_id: "mock-merchant-request-id",
+      checkout_request_id: "mock-checkout-request-id",
+      reference: invoice.reference_number
+    }}
+  end
+
+  @doc """
+  Mock implementation of the mark_invoice_as_paid function.
+  """
+  @impl true
+  def mark_invoice_as_paid(invoice, transaction_id, opts \\ []) do
+    # Default implementation that will be overridden by Mox in tests
+    {:ok, %{invoice | payment_status: "paid", payment_reference: transaction_id}}
+  end
+
+  @doc """
+  Mock implementation of the handle_completed_payment function.
+  """
+  @impl true
+  def handle_completed_payment(transaction, opts \\ []) do
+    # Default implementation that will be overridden by Mox in tests
+    {:ok, %{
+      id: transaction.invoice_id,
+      payment_status: "paid",
+      payment_reference: transaction.transaction_id
+    }}
+  end
+
+  @doc """
+  Mock implementation of the handle_failed_payment function.
+  """
+  @impl true
+  def handle_failed_payment(transaction, opts \\ []) do
+    # Default implementation that will be overridden by Mox in tests
+    {:ok, transaction}
+  end
+end
