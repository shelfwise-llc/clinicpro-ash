# Name of your application. Used to uniquely configure containers.
service: clinicpro

# Name of the container image.
image: shelfwise-llc/clinicpro

# Deploy to these servers - Railway will provide the actual server details
servers:
  web:
    - <%= ENV["RAILWAY_SERVER_HOST"] || "localhost" %>

# Configure for Railway deployment - no SSL proxy needed as Railway handles this
# proxy:
#   ssl: false
#   host: <%= ENV["RAILWAY_PUBLIC_DOMAIN"] %>
#   app_port: 4000

# Use GitHub Container Registry
registry:
  server: ghcr.io
  username: <%= ENV["GITHUB_ACTOR"] || "shelfwise-llc" %>
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: amd64
  # Build context for Phoenix application
  context: .
  dockerfile: Dockerfile
  
# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  clear:
    MIX_ENV: prod
    PHX_SERVER: "true"
    PORT: 4000
  secret:
    - DATABASE_URL
    - SECRET_KEY_BASE
    - PAYSTACK_SECRET_KEY
    - PAYSTACK_PUBLIC_KEY

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal app logs -r job" will tail logs from the first server in the job section.
#
# aliases:
#   shell: app exec --interactive --reuse "bash"

# Use a different ssh user than root
#
# ssh:
#   user: app

# Use a persistent storage volume.
#
# volumes:
#   - "app_storage:/app/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# asset_path: /app/public/assets

# Configure rolling deploys
boot:
  limit: 1
  wait: 10

# Use accessory services (secrets come from .kamal/secrets).
#
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: '%'
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     files:
#       - config/mysql/production.cnf:/etc/mysql/my.cnf
#       - db/production.sql:/docker-entrypoint-initdb.d/setup.sql
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: valkey/valkey:8
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data
