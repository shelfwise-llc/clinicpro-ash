name: Deploy ClinicPro to Railway

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:



jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: clinicpro_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.16.2'
        otp-version: '26'
        
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
        
    - name: Install dependencies
      run: mix deps.get
      
    - name: Check formatting
      run: mix format --check-formatted
      
    - name: Compile application
      run: mix compile
      env:
        MIX_ENV: test
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/clinicpro_test
        
    - name: Setup database
      run: mix ecto.setup
      env:
        MIX_ENV: test
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/clinicpro_test
      continue-on-error: true
        
    - name: Run tests
      run: mix test
      env:
        MIX_ENV: test
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/clinicpro_test
      continue-on-error: true

  build-and-deploy:
    needs: test
    if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/cleanup/mpesa-removal')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
    
    - name: Install Kamal
      run: gem install kamal
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}:${{ github.sha }},ghcr.io/${{ github.repository }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          MIX_ENV=prod
    
    - name: Install Railway CLI
      run: |
        curl -fsSL https://railway.app/install.sh | sh
        railway --version
    
    - name: Link Railway project
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      run: |
        echo "Linking Railway project..."
        railway link --environment production --project desirable-integrity --service clinicpro-ash
    
    - name: Deploy with Kamal
      env:
        KAMAL_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
        PHX_HOST: clinicpro-ash-production.up.railway.app
        PHX_SERVER: true
        PORT: 4000
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      run: |
        echo "Deploying with Kamal..."
        # Update deploy.yml with the current image tag
        sed -i "s|image:.*|image: ghcr.io/${{ github.repository }}:${{ github.sha }}|" config/deploy.yml
        
        # Deploy using Kamal
        kamal deploy
        
    - name: Verify deployment
      run: |
        echo "Verifying deployment..."
        # Wait for deployment to complete
        sleep 30
        
        # Run verification script
        chmod +x ./verify_deployment.sh
        ./verify_deployment.sh https://clinicpro-ash-production.up.railway.app || true
